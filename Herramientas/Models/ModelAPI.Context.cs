//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Herramientas.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DCCPProcurementEntities : DbContext
    {
        public DCCPProcurementEntities()
            : base("name=DCCPProcurementEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Autorizacion> Autorizacion { get; set; }
        public virtual DbSet<PeriodoTicket> PeriodoTicket { get; set; }
        public virtual DbSet<Sugerencias> Sugerencias { get; set; }
        public virtual DbSet<Ticket> Ticket { get; set; }
        public virtual DbSet<TicketLog> TicketLog { get; set; }
        public virtual DbSet<TipoTicket> TipoTicket { get; set; }
        public virtual DbSet<TipoUsuario> TipoUsuario { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
        public virtual DbSet<UsuarioTicket> UsuarioTicket { get; set; }
    
        public virtual int ActualizarDatosUsuario(Nullable<int> idUsuario, string fono, string email, ObjectParameter resultCode)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            var fonoParameter = fono != null ?
                new ObjectParameter("Fono", fono) :
                new ObjectParameter("Fono", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarDatosUsuario", idUsuarioParameter, fonoParameter, emailParameter, resultCode);
        }
    
        public virtual int ActualizaTicketNotificado(Nullable<int> idTicket, Nullable<bool> notificado)
        {
            var idTicketParameter = idTicket.HasValue ?
                new ObjectParameter("IdTicket", idTicket) :
                new ObjectParameter("IdTicket", typeof(int));
    
            var notificadoParameter = notificado.HasValue ?
                new ObjectParameter("Notificado", notificado) :
                new ObjectParameter("Notificado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizaTicketNotificado", idTicketParameter, notificadoParameter);
        }
    
        public virtual int EliminarLicitacionFavorita(string codigousuario, string codigoExternoLicitacion)
        {
            var codigousuarioParameter = codigousuario != null ?
                new ObjectParameter("codigousuario", codigousuario) :
                new ObjectParameter("codigousuario", typeof(string));
    
            var codigoExternoLicitacionParameter = codigoExternoLicitacion != null ?
                new ObjectParameter("codigoExternoLicitacion", codigoExternoLicitacion) :
                new ObjectParameter("codigoExternoLicitacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarLicitacionFavorita", codigousuarioParameter, codigoExternoLicitacionParameter);
        }
    
        public virtual int GenerarAutorizacion(string idUsuario, Nullable<long> sessionId, string token)
        {
            var idUsuarioParameter = idUsuario != null ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(string));
    
            var sessionIdParameter = sessionId.HasValue ?
                new ObjectParameter("SessionId", sessionId) :
                new ObjectParameter("SessionId", typeof(long));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GenerarAutorizacion", idUsuarioParameter, sessionIdParameter, tokenParameter);
        }
    
        public virtual ObjectResult<GenerarTicketAPI_Result> GenerarTicketAPI(Nullable<int> idTipo)
        {
            var idTipoParameter = idTipo.HasValue ?
                new ObjectParameter("IdTipo", idTipo) :
                new ObjectParameter("IdTipo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GenerarTicketAPI_Result>("GenerarTicketAPI", idTipoParameter);
        }
    
        public virtual int GuardarSugerencia(Nullable<int> idUsuario, string sugerencia, ObjectParameter resultCode)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            var sugerenciaParameter = sugerencia != null ?
                new ObjectParameter("Sugerencia", sugerencia) :
                new ObjectParameter("Sugerencia", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GuardarSugerencia", idUsuarioParameter, sugerenciaParameter, resultCode);
        }
    
        public virtual int InactivarAutorizacion(string token)
        {
            var tokenParameter = token != null ?
                new ObjectParameter("Token", token) :
                new ObjectParameter("Token", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InactivarAutorizacion", tokenParameter);
        }
    
        public virtual int InsertarLicitacionFavorita(string codigousuario, string codigoExternoLicitacion, Nullable<int> tipoSeguimiento)
        {
            var codigousuarioParameter = codigousuario != null ?
                new ObjectParameter("codigousuario", codigousuario) :
                new ObjectParameter("codigousuario", typeof(string));
    
            var codigoExternoLicitacionParameter = codigoExternoLicitacion != null ?
                new ObjectParameter("codigoExternoLicitacion", codigoExternoLicitacion) :
                new ObjectParameter("codigoExternoLicitacion", typeof(string));
    
            var tipoSeguimientoParameter = tipoSeguimiento.HasValue ?
                new ObjectParameter("tipoSeguimiento", tipoSeguimiento) :
                new ObjectParameter("tipoSeguimiento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarLicitacionFavorita", codigousuarioParameter, codigoExternoLicitacionParameter, tipoSeguimientoParameter);
        }
    
        public virtual int InsertarUsuario(Nullable<int> codigo, Nullable<int> idTipo, Nullable<int> rut, string dv, string nombre, string apellido, string fono, string email, Nullable<int> genero, string empresa, string descripcion, ObjectParameter resultCode)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(int));
    
            var idTipoParameter = idTipo.HasValue ?
                new ObjectParameter("IdTipo", idTipo) :
                new ObjectParameter("IdTipo", typeof(int));
    
            var rutParameter = rut.HasValue ?
                new ObjectParameter("Rut", rut) :
                new ObjectParameter("Rut", typeof(int));
    
            var dvParameter = dv != null ?
                new ObjectParameter("Dv", dv) :
                new ObjectParameter("Dv", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var fonoParameter = fono != null ?
                new ObjectParameter("Fono", fono) :
                new ObjectParameter("Fono", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var generoParameter = genero.HasValue ?
                new ObjectParameter("Genero", genero) :
                new ObjectParameter("Genero", typeof(int));
    
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarUsuario", codigoParameter, idTipoParameter, rutParameter, dvParameter, nombreParameter, apellidoParameter, fonoParameter, emailParameter, generoParameter, empresaParameter, descripcionParameter, resultCode);
        }
    
        public virtual int InsertarUsuarioTicket(Nullable<int> idUsuario, Nullable<int> idTicket, string observaciones, string sugerencias, Nullable<short> estado)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            var idTicketParameter = idTicket.HasValue ?
                new ObjectParameter("IdTicket", idTicket) :
                new ObjectParameter("IdTicket", typeof(int));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var sugerenciasParameter = sugerencias != null ?
                new ObjectParameter("Sugerencias", sugerencias) :
                new ObjectParameter("Sugerencias", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarUsuarioTicket", idUsuarioParameter, idTicketParameter, observacionesParameter, sugerenciasParameter, estadoParameter);
        }
    
        public virtual ObjectResult<ListaCursosCapacitacion_Result> ListaCursosCapacitacion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaCursosCapacitacion_Result>("ListaCursosCapacitacion");
        }
    
        public virtual ObjectResult<ObtenerAlertas_Result> ObtenerAlertas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerAlertas_Result>("ObtenerAlertas");
        }
    
        public virtual ObjectResult<ObtenerAlertasPorTipo_Result> ObtenerAlertasPorTipo(Nullable<int> idTipoAlerta, Nullable<int> entCode)
        {
            var idTipoAlertaParameter = idTipoAlerta.HasValue ?
                new ObjectParameter("IdTipoAlerta", idTipoAlerta) :
                new ObjectParameter("IdTipoAlerta", typeof(int));
    
            var entCodeParameter = entCode.HasValue ?
                new ObjectParameter("EntCode", entCode) :
                new ObjectParameter("EntCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerAlertasPorTipo_Result>("ObtenerAlertasPorTipo", idTipoAlertaParameter, entCodeParameter);
        }
    
        public virtual ObjectResult<ObtenerAutorizacion_Result> ObtenerAutorizacion(string token)
        {
            var tokenParameter = token != null ?
                new ObjectParameter("Token", token) :
                new ObjectParameter("Token", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerAutorizacion_Result>("ObtenerAutorizacion", tokenParameter);
        }
    
        public virtual ObjectResult<ObtenerByTicket_Result> ObtenerByTicket(string ticket)
        {
            var ticketParameter = ticket != null ?
                new ObjectParameter("Ticket", ticket) :
                new ObjectParameter("Ticket", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerByTicket_Result>("ObtenerByTicket", ticketParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ObtenerCuotaTicket(Nullable<int> idTicket, Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta)
        {
            var idTicketParameter = idTicket.HasValue ?
                new ObjectParameter("idTicket", idTicket) :
                new ObjectParameter("idTicket", typeof(int));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("desde", desde) :
                new ObjectParameter("desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("hasta", hasta) :
                new ObjectParameter("hasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ObtenerCuotaTicket", idTicketParameter, desdeParameter, hastaParameter);
        }
    
        public virtual int ObtenerLicitacion(Nullable<int> id, string codigo, string nombre, Nullable<int> estado, string fechaInicio, string fechaFin, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            var fechaInicioParameter = fechaInicio != null ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(string));
    
            var fechaFinParameter = fechaFin != null ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(string));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ObtenerLicitacion", idParameter, codigoParameter, nombreParameter, estadoParameter, fechaInicioParameter, fechaFinParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual int ObtenerLicitacionBase(string fecha, Nullable<int> estado, Nullable<int> tipoOrden)
        {
            var fechaParameter = fecha != null ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var tipoOrdenParameter = tipoOrden.HasValue ?
                new ObjectParameter("tipoOrden", tipoOrden) :
                new ObjectParameter("tipoOrden", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ObtenerLicitacionBase", fechaParameter, estadoParameter, tipoOrdenParameter);
        }
    
        public virtual int ObtenerLicitacionesObrasAdjudicadas(string fecha)
        {
            var fechaParameter = fecha != null ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ObtenerLicitacionesObrasAdjudicadas", fechaParameter);
        }
    
        public virtual ObjectResult<ObtenerLicitacionPublicada_Result> ObtenerLicitacionPublicada(Nullable<int> pagenum, Nullable<int> pagesize, ObjectParameter total)
        {
            var pagenumParameter = pagenum.HasValue ?
                new ObjectParameter("pagenum", pagenum) :
                new ObjectParameter("pagenum", typeof(int));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerLicitacionPublicada_Result>("ObtenerLicitacionPublicada", pagenumParameter, pagesizeParameter, total);
        }
    
        public virtual int ObtenerOrdenesCompra(Nullable<int> id, string codigo, string texto, string fechaInicio, string fechaFin, Nullable<int> estados, Nullable<int> tipoOrden, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            var fechaInicioParameter = fechaInicio != null ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(string));
    
            var fechaFinParameter = fechaFin != null ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(string));
    
            var estadosParameter = estados.HasValue ?
                new ObjectParameter("Estados", estados) :
                new ObjectParameter("Estados", typeof(int));
    
            var tipoOrdenParameter = tipoOrden.HasValue ?
                new ObjectParameter("tipoOrden", tipoOrden) :
                new ObjectParameter("tipoOrden", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ObtenerOrdenesCompra", idParameter, codigoParameter, textoParameter, fechaInicioParameter, fechaFinParameter, estadosParameter, tipoOrdenParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual int ObtenerOrdenesCompraBase(string fecha, Nullable<int> estado, string oRGCODELIST, Nullable<int> oRGCLASS, Nullable<int> tipoOrden)
        {
            var fechaParameter = fecha != null ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var oRGCODELISTParameter = oRGCODELIST != null ?
                new ObjectParameter("ORGCODELIST", oRGCODELIST) :
                new ObjectParameter("ORGCODELIST", typeof(string));
    
            var oRGCLASSParameter = oRGCLASS.HasValue ?
                new ObjectParameter("ORGCLASS", oRGCLASS) :
                new ObjectParameter("ORGCLASS", typeof(int));
    
            var tipoOrdenParameter = tipoOrden.HasValue ?
                new ObjectParameter("tipoOrden", tipoOrden) :
                new ObjectParameter("tipoOrden", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ObtenerOrdenesCompraBase", fechaParameter, estadoParameter, oRGCODELISTParameter, oRGCLASSParameter, tipoOrdenParameter);
        }
    
        public virtual ObjectResult<ObtenerRegistroPymePorRutProveedor_Result> ObtenerRegistroPymePorRutProveedor(string rut)
        {
            var rutParameter = rut != null ?
                new ObjectParameter("Rut", rut) :
                new ObjectParameter("Rut", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerRegistroPymePorRutProveedor_Result>("ObtenerRegistroPymePorRutProveedor", rutParameter);
        }
    
        public virtual ObjectResult<ObtenerTicket_Result> ObtenerTicket()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerTicket_Result>("ObtenerTicket");
        }
    
        public virtual ObjectResult<ObtenerTipoTicket_Result> ObtenerTipoTicket()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerTipoTicket_Result>("ObtenerTipoTicket");
        }
    
        public virtual ObjectResult<ObtenerUsuarioPorMail_Result> ObtenerUsuarioPorMail(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerUsuarioPorMail_Result>("ObtenerUsuarioPorMail", emailParameter);
        }
    
        public virtual ObjectResult<ObtenerUsuarioPorRut_Result> ObtenerUsuarioPorRut(Nullable<int> rut)
        {
            var rutParameter = rut.HasValue ?
                new ObjectParameter("Rut", rut) :
                new ObjectParameter("Rut", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerUsuarioPorRut_Result>("ObtenerUsuarioPorRut", rutParameter);
        }
    
        public virtual ObjectResult<ObtenerUsuarioTicketPorUsuario_Result> ObtenerUsuarioTicketPorUsuario(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerUsuarioTicketPorUsuario_Result>("ObtenerUsuarioTicketPorUsuario", idUsuarioParameter);
        }
    
        public virtual int f_Borrar_16_08_2007_prcSpcReadprcRFBInvitationCategoies(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbtSchema, Nullable<int> rbhCode)
        {
            var rbtSchemaParameter = rbtSchema.HasValue ?
                new ObjectParameter("rbtSchema", rbtSchema) :
                new ObjectParameter("rbtSchema", typeof(int));
    
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("f_Borrar_16_08_2007_prcSpcReadprcRFBInvitationCategoies", resultCode, resultMessage, rbtSchemaParameter, rbhCodeParameter);
        }
    
        public virtual ObjectResult<f_ParaBorrar_prcSpcSearchprcRFBHeaderSearchAdquisitionByExternalCode_Result> f_ParaBorrar_prcSpcSearchprcRFBHeaderSearchAdquisitionByExternalCode(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbhCode, string rbhName, Nullable<System.DateTime> rbhFromDate, Nullable<System.DateTime> rbhToDate, Nullable<int> rstCode, string rbhOrganization, Nullable<int> rptCode, Nullable<int> rbhAwardType)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            var rbhNameParameter = rbhName != null ?
                new ObjectParameter("rbhName", rbhName) :
                new ObjectParameter("rbhName", typeof(string));
    
            var rbhFromDateParameter = rbhFromDate.HasValue ?
                new ObjectParameter("rbhFromDate", rbhFromDate) :
                new ObjectParameter("rbhFromDate", typeof(System.DateTime));
    
            var rbhToDateParameter = rbhToDate.HasValue ?
                new ObjectParameter("rbhToDate", rbhToDate) :
                new ObjectParameter("rbhToDate", typeof(System.DateTime));
    
            var rstCodeParameter = rstCode.HasValue ?
                new ObjectParameter("rstCode", rstCode) :
                new ObjectParameter("rstCode", typeof(int));
    
            var rbhOrganizationParameter = rbhOrganization != null ?
                new ObjectParameter("rbhOrganization", rbhOrganization) :
                new ObjectParameter("rbhOrganization", typeof(string));
    
            var rptCodeParameter = rptCode.HasValue ?
                new ObjectParameter("rptCode", rptCode) :
                new ObjectParameter("rptCode", typeof(int));
    
            var rbhAwardTypeParameter = rbhAwardType.HasValue ?
                new ObjectParameter("rbhAwardType", rbhAwardType) :
                new ObjectParameter("rbhAwardType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<f_ParaBorrar_prcSpcSearchprcRFBHeaderSearchAdquisitionByExternalCode_Result>("f_ParaBorrar_prcSpcSearchprcRFBHeaderSearchAdquisitionByExternalCode", resultCode, resultMessage, rbhCodeParameter, rbhNameParameter, rbhFromDateParameter, rbhToDateParameter, rstCodeParameter, rbhOrganizationParameter, rptCodeParameter, rbhAwardTypeParameter);
        }
    
        public virtual int f_prcSpcCreateprcPOHeaderFromDirectDeal(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultPorID, ObjectParameter resultPorName, string porName, string porDescription, Nullable<int> porSourceDocumentType, Nullable<int> porSourceDocumentNumber, string porCode, Nullable<int> porOrderType, string porBuyerOrganization, string porBuyerUser, string porBuyerStatus, string porSellerOrganization, string porSellerUser, string porSellerStatus)
        {
            var porNameParameter = porName != null ?
                new ObjectParameter("porName", porName) :
                new ObjectParameter("porName", typeof(string));
    
            var porDescriptionParameter = porDescription != null ?
                new ObjectParameter("porDescription", porDescription) :
                new ObjectParameter("porDescription", typeof(string));
    
            var porSourceDocumentTypeParameter = porSourceDocumentType.HasValue ?
                new ObjectParameter("porSourceDocumentType", porSourceDocumentType) :
                new ObjectParameter("porSourceDocumentType", typeof(int));
    
            var porSourceDocumentNumberParameter = porSourceDocumentNumber.HasValue ?
                new ObjectParameter("porSourceDocumentNumber", porSourceDocumentNumber) :
                new ObjectParameter("porSourceDocumentNumber", typeof(int));
    
            var porCodeParameter = porCode != null ?
                new ObjectParameter("porCode", porCode) :
                new ObjectParameter("porCode", typeof(string));
    
            var porOrderTypeParameter = porOrderType.HasValue ?
                new ObjectParameter("porOrderType", porOrderType) :
                new ObjectParameter("porOrderType", typeof(int));
    
            var porBuyerOrganizationParameter = porBuyerOrganization != null ?
                new ObjectParameter("porBuyerOrganization", porBuyerOrganization) :
                new ObjectParameter("porBuyerOrganization", typeof(string));
    
            var porBuyerUserParameter = porBuyerUser != null ?
                new ObjectParameter("porBuyerUser", porBuyerUser) :
                new ObjectParameter("porBuyerUser", typeof(string));
    
            var porBuyerStatusParameter = porBuyerStatus != null ?
                new ObjectParameter("porBuyerStatus", porBuyerStatus) :
                new ObjectParameter("porBuyerStatus", typeof(string));
    
            var porSellerOrganizationParameter = porSellerOrganization != null ?
                new ObjectParameter("porSellerOrganization", porSellerOrganization) :
                new ObjectParameter("porSellerOrganization", typeof(string));
    
            var porSellerUserParameter = porSellerUser != null ?
                new ObjectParameter("porSellerUser", porSellerUser) :
                new ObjectParameter("porSellerUser", typeof(string));
    
            var porSellerStatusParameter = porSellerStatus != null ?
                new ObjectParameter("porSellerStatus", porSellerStatus) :
                new ObjectParameter("porSellerStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("f_prcSpcCreateprcPOHeaderFromDirectDeal", resultCode, resultMessage, resultPorID, resultPorName, porNameParameter, porDescriptionParameter, porSourceDocumentTypeParameter, porSourceDocumentNumberParameter, porCodeParameter, porOrderTypeParameter, porBuyerOrganizationParameter, porBuyerUserParameter, porBuyerStatusParameter, porSellerOrganizationParameter, porSellerUserParameter, porSellerStatusParameter);
        }
    
        public virtual int f_temp_acrSpcDeleteacrQuestion(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> topId)
        {
            var topIdParameter = topId.HasValue ?
                new ObjectParameter("topId", topId) :
                new ObjectParameter("topId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("f_temp_acrSpcDeleteacrQuestion", resultCode, resultMessage, topIdParameter);
        }
    
        public virtual int f_TEMP_prcSpcCreateprcPOHeader(ObjectParameter uLTIMO, Nullable<int> pORREQUISITION, Nullable<int> pORSOURCEDOCUMENTTYPE, Nullable<int> pORSOURCEDOCUMENTNUMBER, Nullable<int> pORORDERTYPE, string pORCODE, string pORNAME, string pORBUYERNOTES, string pORCOMMITMENT, string pORBUYERORGANIZATION, string bUYERORGANIZATIONLEGALNAME, string bUYERTAXID, string bUYERADDRESS, string pORBUYERUSER)
        {
            var pORREQUISITIONParameter = pORREQUISITION.HasValue ?
                new ObjectParameter("PORREQUISITION", pORREQUISITION) :
                new ObjectParameter("PORREQUISITION", typeof(int));
    
            var pORSOURCEDOCUMENTTYPEParameter = pORSOURCEDOCUMENTTYPE.HasValue ?
                new ObjectParameter("PORSOURCEDOCUMENTTYPE", pORSOURCEDOCUMENTTYPE) :
                new ObjectParameter("PORSOURCEDOCUMENTTYPE", typeof(int));
    
            var pORSOURCEDOCUMENTNUMBERParameter = pORSOURCEDOCUMENTNUMBER.HasValue ?
                new ObjectParameter("PORSOURCEDOCUMENTNUMBER", pORSOURCEDOCUMENTNUMBER) :
                new ObjectParameter("PORSOURCEDOCUMENTNUMBER", typeof(int));
    
            var pORORDERTYPEParameter = pORORDERTYPE.HasValue ?
                new ObjectParameter("PORORDERTYPE", pORORDERTYPE) :
                new ObjectParameter("PORORDERTYPE", typeof(int));
    
            var pORCODEParameter = pORCODE != null ?
                new ObjectParameter("PORCODE", pORCODE) :
                new ObjectParameter("PORCODE", typeof(string));
    
            var pORNAMEParameter = pORNAME != null ?
                new ObjectParameter("PORNAME", pORNAME) :
                new ObjectParameter("PORNAME", typeof(string));
    
            var pORBUYERNOTESParameter = pORBUYERNOTES != null ?
                new ObjectParameter("PORBUYERNOTES", pORBUYERNOTES) :
                new ObjectParameter("PORBUYERNOTES", typeof(string));
    
            var pORCOMMITMENTParameter = pORCOMMITMENT != null ?
                new ObjectParameter("PORCOMMITMENT", pORCOMMITMENT) :
                new ObjectParameter("PORCOMMITMENT", typeof(string));
    
            var pORBUYERORGANIZATIONParameter = pORBUYERORGANIZATION != null ?
                new ObjectParameter("PORBUYERORGANIZATION", pORBUYERORGANIZATION) :
                new ObjectParameter("PORBUYERORGANIZATION", typeof(string));
    
            var bUYERORGANIZATIONLEGALNAMEParameter = bUYERORGANIZATIONLEGALNAME != null ?
                new ObjectParameter("BUYERORGANIZATIONLEGALNAME", bUYERORGANIZATIONLEGALNAME) :
                new ObjectParameter("BUYERORGANIZATIONLEGALNAME", typeof(string));
    
            var bUYERTAXIDParameter = bUYERTAXID != null ?
                new ObjectParameter("BUYERTAXID", bUYERTAXID) :
                new ObjectParameter("BUYERTAXID", typeof(string));
    
            var bUYERADDRESSParameter = bUYERADDRESS != null ?
                new ObjectParameter("BUYERADDRESS", bUYERADDRESS) :
                new ObjectParameter("BUYERADDRESS", typeof(string));
    
            var pORBUYERUSERParameter = pORBUYERUSER != null ?
                new ObjectParameter("PORBUYERUSER", pORBUYERUSER) :
                new ObjectParameter("PORBUYERUSER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("f_TEMP_prcSpcCreateprcPOHeader", uLTIMO, pORREQUISITIONParameter, pORSOURCEDOCUMENTTYPEParameter, pORSOURCEDOCUMENTNUMBERParameter, pORORDERTYPEParameter, pORCODEParameter, pORNAMEParameter, pORBUYERNOTESParameter, pORCOMMITMENTParameter, pORBUYERORGANIZATIONParameter, bUYERORGANIZATIONLEGALNAMEParameter, bUYERTAXIDParameter, bUYERADDRESSParameter, pORBUYERUSERParameter);
        }
    
        public virtual int f_temp_prcSpcCreateprcPOHeaderInformation(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultId, string porName, string porNotes, string porIDCompromise)
        {
            var porNameParameter = porName != null ?
                new ObjectParameter("porName", porName) :
                new ObjectParameter("porName", typeof(string));
    
            var porNotesParameter = porNotes != null ?
                new ObjectParameter("porNotes", porNotes) :
                new ObjectParameter("porNotes", typeof(string));
    
            var porIDCompromiseParameter = porIDCompromise != null ?
                new ObjectParameter("porIDCompromise", porIDCompromise) :
                new ObjectParameter("porIDCompromise", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("f_temp_prcSpcCreateprcPOHeaderInformation", resultCode, resultMessage, resultId, porNameParameter, porNotesParameter, porIDCompromiseParameter);
        }
    
        public virtual int f_TEMP_prcSpcCreateprcPOVersion(ObjectParameter rESULTCODE, ObjectParameter rESULTMESSAGE, ObjectParameter rESULTID, Nullable<int> pORID, string pORBUYERUSER)
        {
            var pORIDParameter = pORID.HasValue ?
                new ObjectParameter("PORID", pORID) :
                new ObjectParameter("PORID", typeof(int));
    
            var pORBUYERUSERParameter = pORBUYERUSER != null ?
                new ObjectParameter("PORBUYERUSER", pORBUYERUSER) :
                new ObjectParameter("PORBUYERUSER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("f_TEMP_prcSpcCreateprcPOVersion", rESULTCODE, rESULTMESSAGE, rESULTID, pORIDParameter, pORBUYERUSERParameter);
        }
    
        public virtual int f_Temp_prcSpcGetExternalCode(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultExternalCode, string orgCode, Nullable<int> rpsCode)
        {
            var orgCodeParameter = orgCode != null ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(string));
    
            var rpsCodeParameter = rpsCode.HasValue ?
                new ObjectParameter("rpsCode", rpsCode) :
                new ObjectParameter("rpsCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("f_Temp_prcSpcGetExternalCode", resultCode, resultMessage, resultExternalCode, orgCodeParameter, rpsCodeParameter);
        }
    
        public virtual ObjectResult<f_Temp_prcSpcGetprcPOHeader_Result> f_Temp_prcSpcGetprcPOHeader(Nullable<int> porID)
        {
            var porIDParameter = porID.HasValue ?
                new ObjectParameter("porID", porID) :
                new ObjectParameter("porID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<f_Temp_prcSpcGetprcPOHeader_Result>("f_Temp_prcSpcGetprcPOHeader", porIDParameter);
        }
    
        public virtual ObjectResult<f_temp_prcSpcReadprcPOShipmentType_Result> f_temp_prcSpcReadprcPOShipmentType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<f_temp_prcSpcReadprcPOShipmentType_Result>("f_temp_prcSpcReadprcPOShipmentType");
        }
    
        public virtual int f_temp_prcSpcReplicateProcessDetail(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> isRFB, Nullable<int> headerCodeOld, Nullable<int> headerCode)
        {
            var isRFBParameter = isRFB.HasValue ?
                new ObjectParameter("IsRFB", isRFB) :
                new ObjectParameter("IsRFB", typeof(int));
    
            var headerCodeOldParameter = headerCodeOld.HasValue ?
                new ObjectParameter("headerCodeOld", headerCodeOld) :
                new ObjectParameter("headerCodeOld", typeof(int));
    
            var headerCodeParameter = headerCode.HasValue ?
                new ObjectParameter("headerCode", headerCode) :
                new ObjectParameter("headerCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("f_temp_prcSpcReplicateProcessDetail", resultCode, resultMessage, isRFBParameter, headerCodeOldParameter, headerCodeParameter);
        }
    
        public virtual int f_temp_prcSpcReplicateProcessesForNewChart(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> reqCodeOld, Nullable<int> reqCode)
        {
            var reqCodeOldParameter = reqCodeOld.HasValue ?
                new ObjectParameter("reqCodeOld", reqCodeOld) :
                new ObjectParameter("reqCodeOld", typeof(int));
    
            var reqCodeParameter = reqCode.HasValue ?
                new ObjectParameter("reqCode", reqCode) :
                new ObjectParameter("reqCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("f_temp_prcSpcReplicateProcessesForNewChart", resultCode, resultMessage, reqCodeOldParameter, reqCodeParameter);
        }
    
        public virtual int f_TEMP_prcSpcSearchCountprcRFBHeaderold(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter recordsCount, Nullable<int> rbhCode, string rbhName, string rbhOwnerCity, string rbhOwnerOrganizationCode, Nullable<int> rbhDocumentStatus, Nullable<System.DateTime> rbhFromDate, Nullable<System.DateTime> rbhToDate, Nullable<System.DateTime> rbhFromCloseDate, Nullable<System.DateTime> rbhToCloseDate, string rbhOrganization, Nullable<short> rstType)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            var rbhNameParameter = rbhName != null ?
                new ObjectParameter("rbhName", rbhName) :
                new ObjectParameter("rbhName", typeof(string));
    
            var rbhOwnerCityParameter = rbhOwnerCity != null ?
                new ObjectParameter("rbhOwnerCity", rbhOwnerCity) :
                new ObjectParameter("rbhOwnerCity", typeof(string));
    
            var rbhOwnerOrganizationCodeParameter = rbhOwnerOrganizationCode != null ?
                new ObjectParameter("rbhOwnerOrganizationCode", rbhOwnerOrganizationCode) :
                new ObjectParameter("rbhOwnerOrganizationCode", typeof(string));
    
            var rbhDocumentStatusParameter = rbhDocumentStatus.HasValue ?
                new ObjectParameter("rbhDocumentStatus", rbhDocumentStatus) :
                new ObjectParameter("rbhDocumentStatus", typeof(int));
    
            var rbhFromDateParameter = rbhFromDate.HasValue ?
                new ObjectParameter("rbhFromDate", rbhFromDate) :
                new ObjectParameter("rbhFromDate", typeof(System.DateTime));
    
            var rbhToDateParameter = rbhToDate.HasValue ?
                new ObjectParameter("rbhToDate", rbhToDate) :
                new ObjectParameter("rbhToDate", typeof(System.DateTime));
    
            var rbhFromCloseDateParameter = rbhFromCloseDate.HasValue ?
                new ObjectParameter("rbhFromCloseDate", rbhFromCloseDate) :
                new ObjectParameter("rbhFromCloseDate", typeof(System.DateTime));
    
            var rbhToCloseDateParameter = rbhToCloseDate.HasValue ?
                new ObjectParameter("rbhToCloseDate", rbhToCloseDate) :
                new ObjectParameter("rbhToCloseDate", typeof(System.DateTime));
    
            var rbhOrganizationParameter = rbhOrganization != null ?
                new ObjectParameter("rbhOrganization", rbhOrganization) :
                new ObjectParameter("rbhOrganization", typeof(string));
    
            var rstTypeParameter = rstType.HasValue ?
                new ObjectParameter("rstType", rstType) :
                new ObjectParameter("rstType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("f_TEMP_prcSpcSearchCountprcRFBHeaderold", resultCode, resultMessage, recordsCount, rbhCodeParameter, rbhNameParameter, rbhOwnerCityParameter, rbhOwnerOrganizationCodeParameter, rbhDocumentStatusParameter, rbhFromDateParameter, rbhToDateParameter, rbhFromCloseDateParameter, rbhToCloseDateParameter, rbhOrganizationParameter, rstTypeParameter);
        }
    
        public virtual ObjectResult<f_temp_prcSpcSearchprcRFBHeaderByCode_Result> f_temp_prcSpcSearchprcRFBHeaderByCode(ObjectParameter resultCode, ObjectParameter resultMessage, string rbhExternalCode, string rbhOrganization, Nullable<short> rstType, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var rbhExternalCodeParameter = rbhExternalCode != null ?
                new ObjectParameter("rbhExternalCode", rbhExternalCode) :
                new ObjectParameter("rbhExternalCode", typeof(string));
    
            var rbhOrganizationParameter = rbhOrganization != null ?
                new ObjectParameter("rbhOrganization", rbhOrganization) :
                new ObjectParameter("rbhOrganization", typeof(string));
    
            var rstTypeParameter = rstType.HasValue ?
                new ObjectParameter("rstType", rstType) :
                new ObjectParameter("rstType", typeof(short));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<f_temp_prcSpcSearchprcRFBHeaderByCode_Result>("f_temp_prcSpcSearchprcRFBHeaderByCode", resultCode, resultMessage, rbhExternalCodeParameter, rbhOrganizationParameter, rstTypeParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<f_TEMP_prcSpcSearchprcRFBHeaderNew_Result> f_TEMP_prcSpcSearchprcRFBHeaderNew(ObjectParameter resultCode, ObjectParameter resultMessage, string rbhName, string rbhOwnerCity, string rbhOwnerOrganizationCode, Nullable<int> rbhDocumentStatus, Nullable<System.DateTime> rbhFromDate, Nullable<System.DateTime> rbhToDate, Nullable<System.DateTime> rbhFromCloseDate, Nullable<System.DateTime> rbhToCloseDate, string rbhOrganization, Nullable<short> rstType, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var rbhNameParameter = rbhName != null ?
                new ObjectParameter("rbhName", rbhName) :
                new ObjectParameter("rbhName", typeof(string));
    
            var rbhOwnerCityParameter = rbhOwnerCity != null ?
                new ObjectParameter("rbhOwnerCity", rbhOwnerCity) :
                new ObjectParameter("rbhOwnerCity", typeof(string));
    
            var rbhOwnerOrganizationCodeParameter = rbhOwnerOrganizationCode != null ?
                new ObjectParameter("rbhOwnerOrganizationCode", rbhOwnerOrganizationCode) :
                new ObjectParameter("rbhOwnerOrganizationCode", typeof(string));
    
            var rbhDocumentStatusParameter = rbhDocumentStatus.HasValue ?
                new ObjectParameter("rbhDocumentStatus", rbhDocumentStatus) :
                new ObjectParameter("rbhDocumentStatus", typeof(int));
    
            var rbhFromDateParameter = rbhFromDate.HasValue ?
                new ObjectParameter("rbhFromDate", rbhFromDate) :
                new ObjectParameter("rbhFromDate", typeof(System.DateTime));
    
            var rbhToDateParameter = rbhToDate.HasValue ?
                new ObjectParameter("rbhToDate", rbhToDate) :
                new ObjectParameter("rbhToDate", typeof(System.DateTime));
    
            var rbhFromCloseDateParameter = rbhFromCloseDate.HasValue ?
                new ObjectParameter("rbhFromCloseDate", rbhFromCloseDate) :
                new ObjectParameter("rbhFromCloseDate", typeof(System.DateTime));
    
            var rbhToCloseDateParameter = rbhToCloseDate.HasValue ?
                new ObjectParameter("rbhToCloseDate", rbhToCloseDate) :
                new ObjectParameter("rbhToCloseDate", typeof(System.DateTime));
    
            var rbhOrganizationParameter = rbhOrganization != null ?
                new ObjectParameter("rbhOrganization", rbhOrganization) :
                new ObjectParameter("rbhOrganization", typeof(string));
    
            var rstTypeParameter = rstType.HasValue ?
                new ObjectParameter("rstType", rstType) :
                new ObjectParameter("rstType", typeof(short));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<f_TEMP_prcSpcSearchprcRFBHeaderNew_Result>("f_TEMP_prcSpcSearchprcRFBHeaderNew", resultCode, resultMessage, rbhNameParameter, rbhOwnerCityParameter, rbhOwnerOrganizationCodeParameter, rbhDocumentStatusParameter, rbhFromDateParameter, rbhToDateParameter, rbhFromCloseDateParameter, rbhToCloseDateParameter, rbhOrganizationParameter, rstTypeParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<f_TEMP_prcSpcSearchprcRFBHeaderOld_Result> f_TEMP_prcSpcSearchprcRFBHeaderOld(ObjectParameter resultCode, ObjectParameter resultMessage, string rbhName, string rbhOwnerCity, string rbhOwnerOrganizationCode, Nullable<int> rbhDocumentStatus, Nullable<System.DateTime> rbhFromDate, Nullable<System.DateTime> rbhToDate, Nullable<System.DateTime> rbhFromCloseDate, Nullable<System.DateTime> rbhToCloseDate, string rbhOrganization, Nullable<short> rstType, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var rbhNameParameter = rbhName != null ?
                new ObjectParameter("rbhName", rbhName) :
                new ObjectParameter("rbhName", typeof(string));
    
            var rbhOwnerCityParameter = rbhOwnerCity != null ?
                new ObjectParameter("rbhOwnerCity", rbhOwnerCity) :
                new ObjectParameter("rbhOwnerCity", typeof(string));
    
            var rbhOwnerOrganizationCodeParameter = rbhOwnerOrganizationCode != null ?
                new ObjectParameter("rbhOwnerOrganizationCode", rbhOwnerOrganizationCode) :
                new ObjectParameter("rbhOwnerOrganizationCode", typeof(string));
    
            var rbhDocumentStatusParameter = rbhDocumentStatus.HasValue ?
                new ObjectParameter("rbhDocumentStatus", rbhDocumentStatus) :
                new ObjectParameter("rbhDocumentStatus", typeof(int));
    
            var rbhFromDateParameter = rbhFromDate.HasValue ?
                new ObjectParameter("rbhFromDate", rbhFromDate) :
                new ObjectParameter("rbhFromDate", typeof(System.DateTime));
    
            var rbhToDateParameter = rbhToDate.HasValue ?
                new ObjectParameter("rbhToDate", rbhToDate) :
                new ObjectParameter("rbhToDate", typeof(System.DateTime));
    
            var rbhFromCloseDateParameter = rbhFromCloseDate.HasValue ?
                new ObjectParameter("rbhFromCloseDate", rbhFromCloseDate) :
                new ObjectParameter("rbhFromCloseDate", typeof(System.DateTime));
    
            var rbhToCloseDateParameter = rbhToCloseDate.HasValue ?
                new ObjectParameter("rbhToCloseDate", rbhToCloseDate) :
                new ObjectParameter("rbhToCloseDate", typeof(System.DateTime));
    
            var rbhOrganizationParameter = rbhOrganization != null ?
                new ObjectParameter("rbhOrganization", rbhOrganization) :
                new ObjectParameter("rbhOrganization", typeof(string));
    
            var rstTypeParameter = rstType.HasValue ?
                new ObjectParameter("rstType", rstType) :
                new ObjectParameter("rstType", typeof(short));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<f_TEMP_prcSpcSearchprcRFBHeaderOld_Result>("f_TEMP_prcSpcSearchprcRFBHeaderOld", resultCode, resultMessage, rbhNameParameter, rbhOwnerCityParameter, rbhOwnerOrganizationCodeParameter, rbhDocumentStatusParameter, rbhFromDateParameter, rbhToDateParameter, rbhFromCloseDateParameter, rbhToCloseDateParameter, rbhOrganizationParameter, rstTypeParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual int f_usp_KillConnections()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("f_usp_KillConnections");
        }
    
        public virtual int f_UTIL_AUTORIZADA_PURCHASE_ORDER(string eXTERNAL_CODE)
        {
            var eXTERNAL_CODEParameter = eXTERNAL_CODE != null ?
                new ObjectParameter("EXTERNAL_CODE", eXTERNAL_CODE) :
                new ObjectParameter("EXTERNAL_CODE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("f_UTIL_AUTORIZADA_PURCHASE_ORDER", eXTERNAL_CODEParameter);
        }
    
        public virtual int f_UTIL_CLOSE_ADQUISITION(string eXTERNAL_CODE)
        {
            var eXTERNAL_CODEParameter = eXTERNAL_CODE != null ?
                new ObjectParameter("EXTERNAL_CODE", eXTERNAL_CODE) :
                new ObjectParameter("EXTERNAL_CODE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("f_UTIL_CLOSE_ADQUISITION", eXTERNAL_CODEParameter);
        }
    
        public virtual int f_util_procedurefindtext(string stringToFind)
        {
            var stringToFindParameter = stringToFind != null ?
                new ObjectParameter("stringToFind", stringToFind) :
                new ObjectParameter("stringToFind", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("f_util_procedurefindtext", stringToFindParameter);
        }
    
        public virtual int ActualizaOferta(Nullable<long> idOfertaEnc, string ds)
        {
            var idOfertaEncParameter = idOfertaEnc.HasValue ?
                new ObjectParameter("IdOfertaEnc", idOfertaEnc) :
                new ObjectParameter("IdOfertaEnc", typeof(long));
    
            var dsParameter = ds != null ?
                new ObjectParameter("ds", ds) :
                new ObjectParameter("ds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizaOferta", idOfertaEncParameter, dsParameter);
        }
    
        public virtual int ActualizaOfertaEncriptada(Nullable<int> idUsuarioCreacion, Nullable<int> idOferta, Nullable<int> idLicitacion, Nullable<int> idEstado, string xmlText)
        {
            var idUsuarioCreacionParameter = idUsuarioCreacion.HasValue ?
                new ObjectParameter("IdUsuarioCreacion", idUsuarioCreacion) :
                new ObjectParameter("IdUsuarioCreacion", typeof(int));
    
            var idOfertaParameter = idOferta.HasValue ?
                new ObjectParameter("IdOferta", idOferta) :
                new ObjectParameter("IdOferta", typeof(int));
    
            var idLicitacionParameter = idLicitacion.HasValue ?
                new ObjectParameter("IdLicitacion", idLicitacion) :
                new ObjectParameter("IdLicitacion", typeof(int));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(int));
    
            var xmlTextParameter = xmlText != null ?
                new ObjectParameter("XmlText", xmlText) :
                new ObjectParameter("XmlText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizaOfertaEncriptada", idUsuarioCreacionParameter, idOfertaParameter, idLicitacionParameter, idEstadoParameter, xmlTextParameter);
        }
    
        public virtual int ActualizaOfertaPrueba(Nullable<long> idOfertaEnc, string ds)
        {
            var idOfertaEncParameter = idOfertaEnc.HasValue ?
                new ObjectParameter("IdOfertaEnc", idOfertaEnc) :
                new ObjectParameter("IdOfertaEnc", typeof(long));
    
            var dsParameter = ds != null ?
                new ObjectParameter("ds", ds) :
                new ObjectParameter("ds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizaOfertaPrueba", idOfertaEncParameter, dsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ActualizarCurrencyProcurementPOItems(string porCode)
        {
            var porCodeParameter = porCode != null ?
                new ObjectParameter("porCode", porCode) :
                new ObjectParameter("porCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ActualizarCurrencyProcurementPOItems", porCodeParameter);
        }
    
        public virtual int ActualizarTablaPrcPOHeader(Nullable<double> descuentoCMII, Nullable<double> netoCMII, Nullable<double> ivaCMII, string idChileCompra)
        {
            var descuentoCMIIParameter = descuentoCMII.HasValue ?
                new ObjectParameter("descuentoCMII", descuentoCMII) :
                new ObjectParameter("descuentoCMII", typeof(double));
    
            var netoCMIIParameter = netoCMII.HasValue ?
                new ObjectParameter("netoCMII", netoCMII) :
                new ObjectParameter("netoCMII", typeof(double));
    
            var ivaCMIIParameter = ivaCMII.HasValue ?
                new ObjectParameter("ivaCMII", ivaCMII) :
                new ObjectParameter("ivaCMII", typeof(double));
    
            var idChileCompraParameter = idChileCompra != null ?
                new ObjectParameter("idChileCompra", idChileCompra) :
                new ObjectParameter("idChileCompra", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarTablaPrcPOHeader", descuentoCMIIParameter, netoCMIIParameter, ivaCMIIParameter, idChileCompraParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ActualizarTablaPrcPOHeader001(string porID, string porName, string porDescription, string porAccount, Nullable<int> porOrderType, string porCode, Nullable<double> porTotalCharges, Nullable<double> porTotalDiscounts, Nullable<double> porTotalAmount, Nullable<double> porTotalTaxes)
        {
            var porIDParameter = porID != null ?
                new ObjectParameter("porID", porID) :
                new ObjectParameter("porID", typeof(string));
    
            var porNameParameter = porName != null ?
                new ObjectParameter("porName", porName) :
                new ObjectParameter("porName", typeof(string));
    
            var porDescriptionParameter = porDescription != null ?
                new ObjectParameter("porDescription", porDescription) :
                new ObjectParameter("porDescription", typeof(string));
    
            var porAccountParameter = porAccount != null ?
                new ObjectParameter("porAccount", porAccount) :
                new ObjectParameter("porAccount", typeof(string));
    
            var porOrderTypeParameter = porOrderType.HasValue ?
                new ObjectParameter("porOrderType", porOrderType) :
                new ObjectParameter("porOrderType", typeof(int));
    
            var porCodeParameter = porCode != null ?
                new ObjectParameter("porCode", porCode) :
                new ObjectParameter("porCode", typeof(string));
    
            var porTotalChargesParameter = porTotalCharges.HasValue ?
                new ObjectParameter("porTotalCharges", porTotalCharges) :
                new ObjectParameter("porTotalCharges", typeof(double));
    
            var porTotalDiscountsParameter = porTotalDiscounts.HasValue ?
                new ObjectParameter("porTotalDiscounts", porTotalDiscounts) :
                new ObjectParameter("porTotalDiscounts", typeof(double));
    
            var porTotalAmountParameter = porTotalAmount.HasValue ?
                new ObjectParameter("porTotalAmount", porTotalAmount) :
                new ObjectParameter("porTotalAmount", typeof(double));
    
            var porTotalTaxesParameter = porTotalTaxes.HasValue ?
                new ObjectParameter("porTotalTaxes", porTotalTaxes) :
                new ObjectParameter("porTotalTaxes", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ActualizarTablaPrcPOHeader001", porIDParameter, porNameParameter, porDescriptionParameter, porAccountParameter, porOrderTypeParameter, porCodeParameter, porTotalChargesParameter, porTotalDiscountsParameter, porTotalAmountParameter, porTotalTaxesParameter);
        }
    
        public virtual int ActualizarTablaPrcPoItemPrcPOHeader(string porID, Nullable<double> otrosGastos, string porDescription)
        {
            var porIDParameter = porID != null ?
                new ObjectParameter("porID", porID) :
                new ObjectParameter("porID", typeof(string));
    
            var otrosGastosParameter = otrosGastos.HasValue ?
                new ObjectParameter("otrosGastos", otrosGastos) :
                new ObjectParameter("otrosGastos", typeof(double));
    
            var porDescriptionParameter = porDescription != null ?
                new ObjectParameter("porDescription", porDescription) :
                new ObjectParameter("porDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarTablaPrcPoItemPrcPOHeader", porIDParameter, otrosGastosParameter, porDescriptionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ActualizarTablasPrcPOHeaderPrcPOItem(Nullable<double> totalDiscountHeader, Nullable<int> poiHeaderCode)
        {
            var totalDiscountHeaderParameter = totalDiscountHeader.HasValue ?
                new ObjectParameter("TotalDiscountHeader", totalDiscountHeader) :
                new ObjectParameter("TotalDiscountHeader", typeof(double));
    
            var poiHeaderCodeParameter = poiHeaderCode.HasValue ?
                new ObjectParameter("poiHeaderCode", poiHeaderCode) :
                new ObjectParameter("poiHeaderCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ActualizarTablasPrcPOHeaderPrcPOItem", totalDiscountHeaderParameter, poiHeaderCodeParameter);
        }
    
        public virtual int ActualizarTablasPrcPoItemPrcPOHeader(string porID, Nullable<double> otrosGastos, string porDescription)
        {
            var porIDParameter = porID != null ?
                new ObjectParameter("porID", porID) :
                new ObjectParameter("porID", typeof(string));
    
            var otrosGastosParameter = otrosGastos.HasValue ?
                new ObjectParameter("otrosGastos", otrosGastos) :
                new ObjectParameter("otrosGastos", typeof(double));
    
            var porDescriptionParameter = porDescription != null ?
                new ObjectParameter("porDescription", porDescription) :
                new ObjectParameter("porDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarTablasPrcPoItemPrcPOHeader", porIDParameter, otrosGastosParameter, porDescriptionParameter);
        }
    
        public virtual int ActualizarTipoSeguimientoLicitacion(ObjectParameter resultCode, ObjectParameter resultMessage, string usrCode, Nullable<int> rbhCode, Nullable<int> tipo)
        {
            var usrCodeParameter = usrCode != null ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(string));
    
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarTipoSeguimientoLicitacion", resultCode, resultMessage, usrCodeParameter, rbhCodeParameter, tipoParameter);
        }
    
        public virtual int AnalizaReportesLicitacionDetalladoPorInstitucion(string institucion)
        {
            var institucionParameter = institucion != null ?
                new ObjectParameter("Institucion", institucion) :
                new ObjectParameter("Institucion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AnalizaReportesLicitacionDetalladoPorInstitucion", institucionParameter);
        }
    
        public virtual int AnalizaReportesOrdenCompraDetalladoPorInstitucion(string institucion)
        {
            var institucionParameter = institucion != null ?
                new ObjectParameter("Institucion", institucion) :
                new ObjectParameter("Institucion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AnalizaReportesOrdenCompraDetalladoPorInstitucion", institucionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> BID_COUNT_ADQ_IN_TRACKING(string organizationCode, string userCode)
        {
            var organizationCodeParameter = organizationCode != null ?
                new ObjectParameter("OrganizationCode", organizationCode) :
                new ObjectParameter("OrganizationCode", typeof(string));
    
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("BID_COUNT_ADQ_IN_TRACKING", organizationCodeParameter, userCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> BID_COUNT_ADQ_PUBLISHED_CLOSED(string oRGANIZATIONCODE, string uSERCODE)
        {
            var oRGANIZATIONCODEParameter = oRGANIZATIONCODE != null ?
                new ObjectParameter("ORGANIZATIONCODE", oRGANIZATIONCODE) :
                new ObjectParameter("ORGANIZATIONCODE", typeof(string));
    
            var uSERCODEParameter = uSERCODE != null ?
                new ObjectParameter("USERCODE", uSERCODE) :
                new ObjectParameter("USERCODE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("BID_COUNT_ADQ_PUBLISHED_CLOSED", oRGANIZATIONCODEParameter, uSERCODEParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> BID_COUNT_ADQ_PUBLISHED_WITH_BID(string oRGANIZATIONCODE, string uSERCODE)
        {
            var oRGANIZATIONCODEParameter = oRGANIZATIONCODE != null ?
                new ObjectParameter("ORGANIZATIONCODE", oRGANIZATIONCODE) :
                new ObjectParameter("ORGANIZATIONCODE", typeof(string));
    
            var uSERCODEParameter = uSERCODE != null ?
                new ObjectParameter("USERCODE", uSERCODE) :
                new ObjectParameter("USERCODE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("BID_COUNT_ADQ_PUBLISHED_WITH_BID", oRGANIZATIONCODEParameter, uSERCODEParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> BID_COUNT_CAN_ASKED(string oRGANIZATIONCODE, string uSERCODE)
        {
            var oRGANIZATIONCODEParameter = oRGANIZATIONCODE != null ?
                new ObjectParameter("ORGANIZATIONCODE", oRGANIZATIONCODE) :
                new ObjectParameter("ORGANIZATIONCODE", typeof(string));
    
            var uSERCODEParameter = uSERCODE != null ?
                new ObjectParameter("USERCODE", uSERCODE) :
                new ObjectParameter("USERCODE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("BID_COUNT_CAN_ASKED", oRGANIZATIONCODEParameter, uSERCODEParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> BID_COUNT_CLOSE_TODAY(string oRGANIZATIONCODE, string uSERCODE)
        {
            var oRGANIZATIONCODEParameter = oRGANIZATIONCODE != null ?
                new ObjectParameter("ORGANIZATIONCODE", oRGANIZATIONCODE) :
                new ObjectParameter("ORGANIZATIONCODE", typeof(string));
    
            var uSERCODEParameter = uSERCODE != null ?
                new ObjectParameter("USERCODE", uSERCODE) :
                new ObjectParameter("USERCODE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("BID_COUNT_CLOSE_TODAY", oRGANIZATIONCODEParameter, uSERCODEParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> BID_COUNT_PO_FOR_ACCEPTED(string oRGANIZATIONCODE, string uSERCODE)
        {
            var oRGANIZATIONCODEParameter = oRGANIZATIONCODE != null ?
                new ObjectParameter("ORGANIZATIONCODE", oRGANIZATIONCODE) :
                new ObjectParameter("ORGANIZATIONCODE", typeof(string));
    
            var uSERCODEParameter = uSERCODE != null ?
                new ObjectParameter("USERCODE", uSERCODE) :
                new ObjectParameter("USERCODE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("BID_COUNT_PO_FOR_ACCEPTED", oRGANIZATIONCODEParameter, uSERCODEParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> BID_COUNT_PUBLISHED_CATEGORY(string oRGANIZATIONCODE, string uSERCODE)
        {
            var oRGANIZATIONCODEParameter = oRGANIZATIONCODE != null ?
                new ObjectParameter("ORGANIZATIONCODE", oRGANIZATIONCODE) :
                new ObjectParameter("ORGANIZATIONCODE", typeof(string));
    
            var uSERCODEParameter = uSERCODE != null ?
                new ObjectParameter("USERCODE", uSERCODE) :
                new ObjectParameter("USERCODE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("BID_COUNT_PUBLISHED_CATEGORY", oRGANIZATIONCODEParameter, uSERCODEParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> BID_COUNT_WITH_BID_ADJ(string oRGANIZATIONCODE, string uSERCODE)
        {
            var oRGANIZATIONCODEParameter = oRGANIZATIONCODE != null ?
                new ObjectParameter("ORGANIZATIONCODE", oRGANIZATIONCODE) :
                new ObjectParameter("ORGANIZATIONCODE", typeof(string));
    
            var uSERCODEParameter = uSERCODE != null ?
                new ObjectParameter("USERCODE", uSERCODE) :
                new ObjectParameter("USERCODE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("BID_COUNT_WITH_BID_ADJ", oRGANIZATIONCODEParameter, uSERCODEParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> BID_COUNT_WITH_BID_ADJ_OTHER_SUPPLIER(string organizationCode, string userCode)
        {
            var organizationCodeParameter = organizationCode != null ?
                new ObjectParameter("OrganizationCode", organizationCode) :
                new ObjectParameter("OrganizationCode", typeof(string));
    
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("BID_COUNT_WITH_BID_ADJ_OTHER_SUPPLIER", organizationCodeParameter, userCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> BID_COUNT_WITH_INVITATION(string oRGANIZATIONCODE, string uSERCODE)
        {
            var oRGANIZATIONCODEParameter = oRGANIZATIONCODE != null ?
                new ObjectParameter("ORGANIZATIONCODE", oRGANIZATIONCODE) :
                new ObjectParameter("ORGANIZATIONCODE", typeof(string));
    
            var uSERCODEParameter = uSERCODE != null ?
                new ObjectParameter("USERCODE", uSERCODE) :
                new ObjectParameter("USERCODE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("BID_COUNT_WITH_INVITATION", oRGANIZATIONCODEParameter, uSERCODEParameter);
        }
    
        public virtual ObjectResult<BID_LIST_ADQ_IN_TRACKING_Result> BID_LIST_ADQ_IN_TRACKING(ObjectParameter rESULTCODE, ObjectParameter rESULTMESSAGE, string uSERCODE, string oRGCODE, Nullable<int> pAGENUMBER, Nullable<int> pAGESIZE)
        {
            var uSERCODEParameter = uSERCODE != null ?
                new ObjectParameter("USERCODE", uSERCODE) :
                new ObjectParameter("USERCODE", typeof(string));
    
            var oRGCODEParameter = oRGCODE != null ?
                new ObjectParameter("ORGCODE", oRGCODE) :
                new ObjectParameter("ORGCODE", typeof(string));
    
            var pAGENUMBERParameter = pAGENUMBER.HasValue ?
                new ObjectParameter("PAGENUMBER", pAGENUMBER) :
                new ObjectParameter("PAGENUMBER", typeof(int));
    
            var pAGESIZEParameter = pAGESIZE.HasValue ?
                new ObjectParameter("PAGESIZE", pAGESIZE) :
                new ObjectParameter("PAGESIZE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BID_LIST_ADQ_IN_TRACKING_Result>("BID_LIST_ADQ_IN_TRACKING", rESULTCODE, rESULTMESSAGE, uSERCODEParameter, oRGCODEParameter, pAGENUMBERParameter, pAGESIZEParameter);
        }
    
        public virtual ObjectResult<BID_LIST_ADQ_PUBLISHED_WITH_BID_Result> BID_LIST_ADQ_PUBLISHED_WITH_BID(ObjectParameter rESULTCODE, ObjectParameter rESULTMESSAGE, string uSERCODE, string oRGCODE, Nullable<int> pAGENUMBER, Nullable<int> pAGESIZE)
        {
            var uSERCODEParameter = uSERCODE != null ?
                new ObjectParameter("USERCODE", uSERCODE) :
                new ObjectParameter("USERCODE", typeof(string));
    
            var oRGCODEParameter = oRGCODE != null ?
                new ObjectParameter("ORGCODE", oRGCODE) :
                new ObjectParameter("ORGCODE", typeof(string));
    
            var pAGENUMBERParameter = pAGENUMBER.HasValue ?
                new ObjectParameter("PAGENUMBER", pAGENUMBER) :
                new ObjectParameter("PAGENUMBER", typeof(int));
    
            var pAGESIZEParameter = pAGESIZE.HasValue ?
                new ObjectParameter("PAGESIZE", pAGESIZE) :
                new ObjectParameter("PAGESIZE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BID_LIST_ADQ_PUBLISHED_WITH_BID_Result>("BID_LIST_ADQ_PUBLISHED_WITH_BID", rESULTCODE, rESULTMESSAGE, uSERCODEParameter, oRGCODEParameter, pAGENUMBERParameter, pAGESIZEParameter);
        }
    
        public virtual ObjectResult<BID_LIST_CLOSED_Result> BID_LIST_CLOSED(ObjectParameter rESULTCODE, ObjectParameter rESULTMESSAGE, string uSERCODE, string oRGCODE, Nullable<int> pAGENUMBER, Nullable<int> pAGESIZE)
        {
            var uSERCODEParameter = uSERCODE != null ?
                new ObjectParameter("USERCODE", uSERCODE) :
                new ObjectParameter("USERCODE", typeof(string));
    
            var oRGCODEParameter = oRGCODE != null ?
                new ObjectParameter("ORGCODE", oRGCODE) :
                new ObjectParameter("ORGCODE", typeof(string));
    
            var pAGENUMBERParameter = pAGENUMBER.HasValue ?
                new ObjectParameter("PAGENUMBER", pAGENUMBER) :
                new ObjectParameter("PAGENUMBER", typeof(int));
    
            var pAGESIZEParameter = pAGESIZE.HasValue ?
                new ObjectParameter("PAGESIZE", pAGESIZE) :
                new ObjectParameter("PAGESIZE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BID_LIST_CLOSED_Result>("BID_LIST_CLOSED", rESULTCODE, rESULTMESSAGE, uSERCODEParameter, oRGCODEParameter, pAGENUMBERParameter, pAGESIZEParameter);
        }
    
        public virtual ObjectResult<BID_LIST_CLOSED_TODAY_Result> BID_LIST_CLOSED_TODAY(ObjectParameter rESULTCODE, ObjectParameter rESULTMESSAGE, string uSERCODE, string oRGCODE, Nullable<int> pAGENUMBER, Nullable<int> pAGESIZE)
        {
            var uSERCODEParameter = uSERCODE != null ?
                new ObjectParameter("USERCODE", uSERCODE) :
                new ObjectParameter("USERCODE", typeof(string));
    
            var oRGCODEParameter = oRGCODE != null ?
                new ObjectParameter("ORGCODE", oRGCODE) :
                new ObjectParameter("ORGCODE", typeof(string));
    
            var pAGENUMBERParameter = pAGENUMBER.HasValue ?
                new ObjectParameter("PAGENUMBER", pAGENUMBER) :
                new ObjectParameter("PAGENUMBER", typeof(int));
    
            var pAGESIZEParameter = pAGESIZE.HasValue ?
                new ObjectParameter("PAGESIZE", pAGESIZE) :
                new ObjectParameter("PAGESIZE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BID_LIST_CLOSED_TODAY_Result>("BID_LIST_CLOSED_TODAY", rESULTCODE, rESULTMESSAGE, uSERCODEParameter, oRGCODEParameter, pAGENUMBERParameter, pAGESIZEParameter);
        }
    
        public virtual ObjectResult<BID_LIST_PO_FOR_ACCEPTED_Result> BID_LIST_PO_FOR_ACCEPTED(ObjectParameter rESULTCODE, ObjectParameter rESULTMESSAGE, string uSERCODE, string oRGCODE, Nullable<int> pAGENUMBER, Nullable<int> pAGESIZE)
        {
            var uSERCODEParameter = uSERCODE != null ?
                new ObjectParameter("USERCODE", uSERCODE) :
                new ObjectParameter("USERCODE", typeof(string));
    
            var oRGCODEParameter = oRGCODE != null ?
                new ObjectParameter("ORGCODE", oRGCODE) :
                new ObjectParameter("ORGCODE", typeof(string));
    
            var pAGENUMBERParameter = pAGENUMBER.HasValue ?
                new ObjectParameter("PAGENUMBER", pAGENUMBER) :
                new ObjectParameter("PAGENUMBER", typeof(int));
    
            var pAGESIZEParameter = pAGESIZE.HasValue ?
                new ObjectParameter("PAGESIZE", pAGESIZE) :
                new ObjectParameter("PAGESIZE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BID_LIST_PO_FOR_ACCEPTED_Result>("BID_LIST_PO_FOR_ACCEPTED", rESULTCODE, rESULTMESSAGE, uSERCODEParameter, oRGCODEParameter, pAGENUMBERParameter, pAGESIZEParameter);
        }
    
        public virtual ObjectResult<BID_LIST_PUBLISHED_CATEGORY_Result> BID_LIST_PUBLISHED_CATEGORY(ObjectParameter rESULTCODE, ObjectParameter rESULTMESSAGE, string uSERCODE, string oRGCODE, Nullable<int> pAGENUMBER, Nullable<int> pAGESIZE)
        {
            var uSERCODEParameter = uSERCODE != null ?
                new ObjectParameter("USERCODE", uSERCODE) :
                new ObjectParameter("USERCODE", typeof(string));
    
            var oRGCODEParameter = oRGCODE != null ?
                new ObjectParameter("ORGCODE", oRGCODE) :
                new ObjectParameter("ORGCODE", typeof(string));
    
            var pAGENUMBERParameter = pAGENUMBER.HasValue ?
                new ObjectParameter("PAGENUMBER", pAGENUMBER) :
                new ObjectParameter("PAGENUMBER", typeof(int));
    
            var pAGESIZEParameter = pAGESIZE.HasValue ?
                new ObjectParameter("PAGESIZE", pAGESIZE) :
                new ObjectParameter("PAGESIZE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BID_LIST_PUBLISHED_CATEGORY_Result>("BID_LIST_PUBLISHED_CATEGORY", rESULTCODE, rESULTMESSAGE, uSERCODEParameter, oRGCODEParameter, pAGENUMBERParameter, pAGESIZEParameter);
        }
    
        public virtual ObjectResult<BID_LIST_SAVED_BUT_NOT_ENTERED_Result> BID_LIST_SAVED_BUT_NOT_ENTERED(ObjectParameter rESULTCODE, ObjectParameter rESULTMESSAGE, string uSERCODE, string oRGCODE, Nullable<int> pAGENUMBER, Nullable<int> pAGESIZE)
        {
            var uSERCODEParameter = uSERCODE != null ?
                new ObjectParameter("USERCODE", uSERCODE) :
                new ObjectParameter("USERCODE", typeof(string));
    
            var oRGCODEParameter = oRGCODE != null ?
                new ObjectParameter("ORGCODE", oRGCODE) :
                new ObjectParameter("ORGCODE", typeof(string));
    
            var pAGENUMBERParameter = pAGENUMBER.HasValue ?
                new ObjectParameter("PAGENUMBER", pAGENUMBER) :
                new ObjectParameter("PAGENUMBER", typeof(int));
    
            var pAGESIZEParameter = pAGESIZE.HasValue ?
                new ObjectParameter("PAGESIZE", pAGESIZE) :
                new ObjectParameter("PAGESIZE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BID_LIST_SAVED_BUT_NOT_ENTERED_Result>("BID_LIST_SAVED_BUT_NOT_ENTERED", rESULTCODE, rESULTMESSAGE, uSERCODEParameter, oRGCODEParameter, pAGENUMBERParameter, pAGESIZEParameter);
        }
    
        public virtual ObjectResult<BID_LIST_WHERE_I_CAN_ASK_QUESTIONS_Result> BID_LIST_WHERE_I_CAN_ASK_QUESTIONS(ObjectParameter rESULTCODE, ObjectParameter rESULTMESSAGE, string uSERCODE, string oRGCODE, Nullable<int> pAGENUMBER, Nullable<int> pAGESIZE)
        {
            var uSERCODEParameter = uSERCODE != null ?
                new ObjectParameter("USERCODE", uSERCODE) :
                new ObjectParameter("USERCODE", typeof(string));
    
            var oRGCODEParameter = oRGCODE != null ?
                new ObjectParameter("ORGCODE", oRGCODE) :
                new ObjectParameter("ORGCODE", typeof(string));
    
            var pAGENUMBERParameter = pAGENUMBER.HasValue ?
                new ObjectParameter("PAGENUMBER", pAGENUMBER) :
                new ObjectParameter("PAGENUMBER", typeof(int));
    
            var pAGESIZEParameter = pAGESIZE.HasValue ?
                new ObjectParameter("PAGESIZE", pAGESIZE) :
                new ObjectParameter("PAGESIZE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BID_LIST_WHERE_I_CAN_ASK_QUESTIONS_Result>("BID_LIST_WHERE_I_CAN_ASK_QUESTIONS", rESULTCODE, rESULTMESSAGE, uSERCODEParameter, oRGCODEParameter, pAGENUMBERParameter, pAGESIZEParameter);
        }
    
        public virtual ObjectResult<BID_LIST_WITH_BID_ADJ_Result> BID_LIST_WITH_BID_ADJ(ObjectParameter rESULTCODE, ObjectParameter rESULTMESSAGE, string uSERCODE, string oRGCODE, Nullable<int> pAGENUMBER, Nullable<int> pAGESIZE)
        {
            var uSERCODEParameter = uSERCODE != null ?
                new ObjectParameter("USERCODE", uSERCODE) :
                new ObjectParameter("USERCODE", typeof(string));
    
            var oRGCODEParameter = oRGCODE != null ?
                new ObjectParameter("ORGCODE", oRGCODE) :
                new ObjectParameter("ORGCODE", typeof(string));
    
            var pAGENUMBERParameter = pAGENUMBER.HasValue ?
                new ObjectParameter("PAGENUMBER", pAGENUMBER) :
                new ObjectParameter("PAGENUMBER", typeof(int));
    
            var pAGESIZEParameter = pAGESIZE.HasValue ?
                new ObjectParameter("PAGESIZE", pAGESIZE) :
                new ObjectParameter("PAGESIZE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BID_LIST_WITH_BID_ADJ_Result>("BID_LIST_WITH_BID_ADJ", rESULTCODE, rESULTMESSAGE, uSERCODEParameter, oRGCODEParameter, pAGENUMBERParameter, pAGESIZEParameter);
        }
    
        public virtual ObjectResult<BID_LIST_WITH_BID_ADJ_OTHER_SUPPLIER_Result> BID_LIST_WITH_BID_ADJ_OTHER_SUPPLIER(ObjectParameter resultCode, ObjectParameter resultMessage, string userCode, string orgCode, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            var orgCodeParameter = orgCode != null ?
                new ObjectParameter("OrgCode", orgCode) :
                new ObjectParameter("OrgCode", typeof(string));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BID_LIST_WITH_BID_ADJ_OTHER_SUPPLIER_Result>("BID_LIST_WITH_BID_ADJ_OTHER_SUPPLIER", resultCode, resultMessage, userCodeParameter, orgCodeParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<BID_LIST_WITH_INVITATION_Result> BID_LIST_WITH_INVITATION(ObjectParameter rESULTCODE, ObjectParameter rESULTMESSAGE, string uSERCODE, string oRGCODE, Nullable<int> pAGENUMBER, Nullable<int> pAGESIZE)
        {
            var uSERCODEParameter = uSERCODE != null ?
                new ObjectParameter("USERCODE", uSERCODE) :
                new ObjectParameter("USERCODE", typeof(string));
    
            var oRGCODEParameter = oRGCODE != null ?
                new ObjectParameter("ORGCODE", oRGCODE) :
                new ObjectParameter("ORGCODE", typeof(string));
    
            var pAGENUMBERParameter = pAGENUMBER.HasValue ?
                new ObjectParameter("PAGENUMBER", pAGENUMBER) :
                new ObjectParameter("PAGENUMBER", typeof(int));
    
            var pAGESIZEParameter = pAGESIZE.HasValue ?
                new ObjectParameter("PAGESIZE", pAGESIZE) :
                new ObjectParameter("PAGESIZE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BID_LIST_WITH_INVITATION_Result>("BID_LIST_WITH_INVITATION", rESULTCODE, rESULTMESSAGE, uSERCODEParameter, oRGCODEParameter, pAGENUMBERParameter, pAGESIZEParameter);
        }
    
        public virtual ObjectResult<BusquedaLicitacionesSeguimiento_Result> BusquedaLicitacionesSeguimiento(string rbhOwnerOrganizationCode, Nullable<int> rbhDocumentStatus, string usrCode, Nullable<System.DateTime> rbhFromDate, Nullable<System.DateTime> rbhToDate, Nullable<System.DateTime> serverDate)
        {
            var rbhOwnerOrganizationCodeParameter = rbhOwnerOrganizationCode != null ?
                new ObjectParameter("rbhOwnerOrganizationCode", rbhOwnerOrganizationCode) :
                new ObjectParameter("rbhOwnerOrganizationCode", typeof(string));
    
            var rbhDocumentStatusParameter = rbhDocumentStatus.HasValue ?
                new ObjectParameter("rbhDocumentStatus", rbhDocumentStatus) :
                new ObjectParameter("rbhDocumentStatus", typeof(int));
    
            var usrCodeParameter = usrCode != null ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(string));
    
            var rbhFromDateParameter = rbhFromDate.HasValue ?
                new ObjectParameter("rbhFromDate", rbhFromDate) :
                new ObjectParameter("rbhFromDate", typeof(System.DateTime));
    
            var rbhToDateParameter = rbhToDate.HasValue ?
                new ObjectParameter("rbhToDate", rbhToDate) :
                new ObjectParameter("rbhToDate", typeof(System.DateTime));
    
            var serverDateParameter = serverDate.HasValue ?
                new ObjectParameter("ServerDate", serverDate) :
                new ObjectParameter("ServerDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BusquedaLicitacionesSeguimiento_Result>("BusquedaLicitacionesSeguimiento", rbhOwnerOrganizationCodeParameter, rbhDocumentStatusParameter, usrCodeParameter, rbhFromDateParameter, rbhToDateParameter, serverDateParameter);
        }
    
        public virtual ObjectResult<BusquedaLicitacionesSeguimiento_Excel_Result> BusquedaLicitacionesSeguimiento_Excel(string rbhOwnerOrganizationCode, Nullable<int> rbhDocumentStatus, string usrCode, Nullable<System.DateTime> rbhFromDate, Nullable<System.DateTime> rbhToDate, Nullable<System.DateTime> serverDate)
        {
            var rbhOwnerOrganizationCodeParameter = rbhOwnerOrganizationCode != null ?
                new ObjectParameter("rbhOwnerOrganizationCode", rbhOwnerOrganizationCode) :
                new ObjectParameter("rbhOwnerOrganizationCode", typeof(string));
    
            var rbhDocumentStatusParameter = rbhDocumentStatus.HasValue ?
                new ObjectParameter("rbhDocumentStatus", rbhDocumentStatus) :
                new ObjectParameter("rbhDocumentStatus", typeof(int));
    
            var usrCodeParameter = usrCode != null ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(string));
    
            var rbhFromDateParameter = rbhFromDate.HasValue ?
                new ObjectParameter("rbhFromDate", rbhFromDate) :
                new ObjectParameter("rbhFromDate", typeof(System.DateTime));
    
            var rbhToDateParameter = rbhToDate.HasValue ?
                new ObjectParameter("rbhToDate", rbhToDate) :
                new ObjectParameter("rbhToDate", typeof(System.DateTime));
    
            var serverDateParameter = serverDate.HasValue ?
                new ObjectParameter("ServerDate", serverDate) :
                new ObjectParameter("ServerDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BusquedaLicitacionesSeguimiento_Excel_Result>("BusquedaLicitacionesSeguimiento_Excel", rbhOwnerOrganizationCodeParameter, rbhDocumentStatusParameter, usrCodeParameter, rbhFromDateParameter, rbhToDateParameter, serverDateParameter);
        }
    
        public virtual int BusquedaLicitacionesSeguimiento_Nombre(string rbhOwnerOrganizationCode, Nullable<int> rbhDocumentStatus, string usrCode, Nullable<System.DateTime> rbhFromDate, Nullable<System.DateTime> rbhToDate, Nullable<System.DateTime> serverDate, string rbhName)
        {
            var rbhOwnerOrganizationCodeParameter = rbhOwnerOrganizationCode != null ?
                new ObjectParameter("rbhOwnerOrganizationCode", rbhOwnerOrganizationCode) :
                new ObjectParameter("rbhOwnerOrganizationCode", typeof(string));
    
            var rbhDocumentStatusParameter = rbhDocumentStatus.HasValue ?
                new ObjectParameter("rbhDocumentStatus", rbhDocumentStatus) :
                new ObjectParameter("rbhDocumentStatus", typeof(int));
    
            var usrCodeParameter = usrCode != null ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(string));
    
            var rbhFromDateParameter = rbhFromDate.HasValue ?
                new ObjectParameter("rbhFromDate", rbhFromDate) :
                new ObjectParameter("rbhFromDate", typeof(System.DateTime));
    
            var rbhToDateParameter = rbhToDate.HasValue ?
                new ObjectParameter("rbhToDate", rbhToDate) :
                new ObjectParameter("rbhToDate", typeof(System.DateTime));
    
            var serverDateParameter = serverDate.HasValue ?
                new ObjectParameter("ServerDate", serverDate) :
                new ObjectParameter("ServerDate", typeof(System.DateTime));
    
            var rbhNameParameter = rbhName != null ?
                new ObjectParameter("rbhName", rbhName) :
                new ObjectParameter("rbhName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BusquedaLicitacionesSeguimiento_Nombre", rbhOwnerOrganizationCodeParameter, rbhDocumentStatusParameter, usrCodeParameter, rbhFromDateParameter, rbhToDateParameter, serverDateParameter, rbhNameParameter);
        }
    
        public virtual int BusquedaLicitacionesSeguimiento_Nombre_Excel(string rbhOwnerOrganizationCode, Nullable<int> rbhDocumentStatus, string usrCode, Nullable<System.DateTime> rbhFromDate, Nullable<System.DateTime> rbhToDate, Nullable<System.DateTime> serverDate, string rbhName)
        {
            var rbhOwnerOrganizationCodeParameter = rbhOwnerOrganizationCode != null ?
                new ObjectParameter("rbhOwnerOrganizationCode", rbhOwnerOrganizationCode) :
                new ObjectParameter("rbhOwnerOrganizationCode", typeof(string));
    
            var rbhDocumentStatusParameter = rbhDocumentStatus.HasValue ?
                new ObjectParameter("rbhDocumentStatus", rbhDocumentStatus) :
                new ObjectParameter("rbhDocumentStatus", typeof(int));
    
            var usrCodeParameter = usrCode != null ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(string));
    
            var rbhFromDateParameter = rbhFromDate.HasValue ?
                new ObjectParameter("rbhFromDate", rbhFromDate) :
                new ObjectParameter("rbhFromDate", typeof(System.DateTime));
    
            var rbhToDateParameter = rbhToDate.HasValue ?
                new ObjectParameter("rbhToDate", rbhToDate) :
                new ObjectParameter("rbhToDate", typeof(System.DateTime));
    
            var serverDateParameter = serverDate.HasValue ?
                new ObjectParameter("ServerDate", serverDate) :
                new ObjectParameter("ServerDate", typeof(System.DateTime));
    
            var rbhNameParameter = rbhName != null ?
                new ObjectParameter("rbhName", rbhName) :
                new ObjectParameter("rbhName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BusquedaLicitacionesSeguimiento_Nombre_Excel", rbhOwnerOrganizationCodeParameter, rbhDocumentStatusParameter, usrCodeParameter, rbhFromDateParameter, rbhToDateParameter, serverDateParameter, rbhNameParameter);
        }
    
        public virtual int BusquedaLicitacionesSeguimiento_Nombre_Organismo(string rbhOwnerOrganizationCode, Nullable<int> rbhDocumentStatus, string usrCode, Nullable<System.DateTime> rbhFromDate, Nullable<System.DateTime> rbhToDate, Nullable<System.DateTime> serverDate, string rbhName, string rbhEnterprise)
        {
            var rbhOwnerOrganizationCodeParameter = rbhOwnerOrganizationCode != null ?
                new ObjectParameter("rbhOwnerOrganizationCode", rbhOwnerOrganizationCode) :
                new ObjectParameter("rbhOwnerOrganizationCode", typeof(string));
    
            var rbhDocumentStatusParameter = rbhDocumentStatus.HasValue ?
                new ObjectParameter("rbhDocumentStatus", rbhDocumentStatus) :
                new ObjectParameter("rbhDocumentStatus", typeof(int));
    
            var usrCodeParameter = usrCode != null ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(string));
    
            var rbhFromDateParameter = rbhFromDate.HasValue ?
                new ObjectParameter("rbhFromDate", rbhFromDate) :
                new ObjectParameter("rbhFromDate", typeof(System.DateTime));
    
            var rbhToDateParameter = rbhToDate.HasValue ?
                new ObjectParameter("rbhToDate", rbhToDate) :
                new ObjectParameter("rbhToDate", typeof(System.DateTime));
    
            var serverDateParameter = serverDate.HasValue ?
                new ObjectParameter("ServerDate", serverDate) :
                new ObjectParameter("ServerDate", typeof(System.DateTime));
    
            var rbhNameParameter = rbhName != null ?
                new ObjectParameter("rbhName", rbhName) :
                new ObjectParameter("rbhName", typeof(string));
    
            var rbhEnterpriseParameter = rbhEnterprise != null ?
                new ObjectParameter("rbhEnterprise", rbhEnterprise) :
                new ObjectParameter("rbhEnterprise", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BusquedaLicitacionesSeguimiento_Nombre_Organismo", rbhOwnerOrganizationCodeParameter, rbhDocumentStatusParameter, usrCodeParameter, rbhFromDateParameter, rbhToDateParameter, serverDateParameter, rbhNameParameter, rbhEnterpriseParameter);
        }
    
        public virtual int BusquedaLicitacionesSeguimiento_Nombre_Organismo_Excel(string rbhOwnerOrganizationCode, Nullable<int> rbhDocumentStatus, string usrCode, Nullable<System.DateTime> rbhFromDate, Nullable<System.DateTime> rbhToDate, Nullable<System.DateTime> serverDate, string rbhName, string rbhEnterprise)
        {
            var rbhOwnerOrganizationCodeParameter = rbhOwnerOrganizationCode != null ?
                new ObjectParameter("rbhOwnerOrganizationCode", rbhOwnerOrganizationCode) :
                new ObjectParameter("rbhOwnerOrganizationCode", typeof(string));
    
            var rbhDocumentStatusParameter = rbhDocumentStatus.HasValue ?
                new ObjectParameter("rbhDocumentStatus", rbhDocumentStatus) :
                new ObjectParameter("rbhDocumentStatus", typeof(int));
    
            var usrCodeParameter = usrCode != null ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(string));
    
            var rbhFromDateParameter = rbhFromDate.HasValue ?
                new ObjectParameter("rbhFromDate", rbhFromDate) :
                new ObjectParameter("rbhFromDate", typeof(System.DateTime));
    
            var rbhToDateParameter = rbhToDate.HasValue ?
                new ObjectParameter("rbhToDate", rbhToDate) :
                new ObjectParameter("rbhToDate", typeof(System.DateTime));
    
            var serverDateParameter = serverDate.HasValue ?
                new ObjectParameter("ServerDate", serverDate) :
                new ObjectParameter("ServerDate", typeof(System.DateTime));
    
            var rbhNameParameter = rbhName != null ?
                new ObjectParameter("rbhName", rbhName) :
                new ObjectParameter("rbhName", typeof(string));
    
            var rbhEnterpriseParameter = rbhEnterprise != null ?
                new ObjectParameter("rbhEnterprise", rbhEnterprise) :
                new ObjectParameter("rbhEnterprise", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BusquedaLicitacionesSeguimiento_Nombre_Organismo_Excel", rbhOwnerOrganizationCodeParameter, rbhDocumentStatusParameter, usrCodeParameter, rbhFromDateParameter, rbhToDateParameter, serverDateParameter, rbhNameParameter, rbhEnterpriseParameter);
        }
    
        public virtual int BusquedaLicitacionesSeguimiento_Nombre_Region(string rbhOwnerOrganizationCode, Nullable<int> rbhDocumentStatus, string usrCode, Nullable<System.DateTime> rbhFromDate, Nullable<System.DateTime> rbhToDate, Nullable<System.DateTime> serverDate, string rbhName, string rbhOwnerCity)
        {
            var rbhOwnerOrganizationCodeParameter = rbhOwnerOrganizationCode != null ?
                new ObjectParameter("rbhOwnerOrganizationCode", rbhOwnerOrganizationCode) :
                new ObjectParameter("rbhOwnerOrganizationCode", typeof(string));
    
            var rbhDocumentStatusParameter = rbhDocumentStatus.HasValue ?
                new ObjectParameter("rbhDocumentStatus", rbhDocumentStatus) :
                new ObjectParameter("rbhDocumentStatus", typeof(int));
    
            var usrCodeParameter = usrCode != null ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(string));
    
            var rbhFromDateParameter = rbhFromDate.HasValue ?
                new ObjectParameter("rbhFromDate", rbhFromDate) :
                new ObjectParameter("rbhFromDate", typeof(System.DateTime));
    
            var rbhToDateParameter = rbhToDate.HasValue ?
                new ObjectParameter("rbhToDate", rbhToDate) :
                new ObjectParameter("rbhToDate", typeof(System.DateTime));
    
            var serverDateParameter = serverDate.HasValue ?
                new ObjectParameter("ServerDate", serverDate) :
                new ObjectParameter("ServerDate", typeof(System.DateTime));
    
            var rbhNameParameter = rbhName != null ?
                new ObjectParameter("rbhName", rbhName) :
                new ObjectParameter("rbhName", typeof(string));
    
            var rbhOwnerCityParameter = rbhOwnerCity != null ?
                new ObjectParameter("rbhOwnerCity", rbhOwnerCity) :
                new ObjectParameter("rbhOwnerCity", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BusquedaLicitacionesSeguimiento_Nombre_Region", rbhOwnerOrganizationCodeParameter, rbhDocumentStatusParameter, usrCodeParameter, rbhFromDateParameter, rbhToDateParameter, serverDateParameter, rbhNameParameter, rbhOwnerCityParameter);
        }
    
        public virtual int BusquedaLicitacionesSeguimiento_Nombre_Region_Excel(string rbhOwnerOrganizationCode, Nullable<int> rbhDocumentStatus, string usrCode, Nullable<System.DateTime> rbhFromDate, Nullable<System.DateTime> rbhToDate, Nullable<System.DateTime> serverDate, string rbhName, string rbhOwnerCity)
        {
            var rbhOwnerOrganizationCodeParameter = rbhOwnerOrganizationCode != null ?
                new ObjectParameter("rbhOwnerOrganizationCode", rbhOwnerOrganizationCode) :
                new ObjectParameter("rbhOwnerOrganizationCode", typeof(string));
    
            var rbhDocumentStatusParameter = rbhDocumentStatus.HasValue ?
                new ObjectParameter("rbhDocumentStatus", rbhDocumentStatus) :
                new ObjectParameter("rbhDocumentStatus", typeof(int));
    
            var usrCodeParameter = usrCode != null ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(string));
    
            var rbhFromDateParameter = rbhFromDate.HasValue ?
                new ObjectParameter("rbhFromDate", rbhFromDate) :
                new ObjectParameter("rbhFromDate", typeof(System.DateTime));
    
            var rbhToDateParameter = rbhToDate.HasValue ?
                new ObjectParameter("rbhToDate", rbhToDate) :
                new ObjectParameter("rbhToDate", typeof(System.DateTime));
    
            var serverDateParameter = serverDate.HasValue ?
                new ObjectParameter("ServerDate", serverDate) :
                new ObjectParameter("ServerDate", typeof(System.DateTime));
    
            var rbhNameParameter = rbhName != null ?
                new ObjectParameter("rbhName", rbhName) :
                new ObjectParameter("rbhName", typeof(string));
    
            var rbhOwnerCityParameter = rbhOwnerCity != null ?
                new ObjectParameter("rbhOwnerCity", rbhOwnerCity) :
                new ObjectParameter("rbhOwnerCity", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BusquedaLicitacionesSeguimiento_Nombre_Region_Excel", rbhOwnerOrganizationCodeParameter, rbhDocumentStatusParameter, usrCodeParameter, rbhFromDateParameter, rbhToDateParameter, serverDateParameter, rbhNameParameter, rbhOwnerCityParameter);
        }
    
        public virtual ObjectResult<BusquedaLicitacionesSeguimiento_Nombre_Region_Organismo_Result> BusquedaLicitacionesSeguimiento_Nombre_Region_Organismo(string rbhOwnerOrganizationCode, Nullable<int> rbhDocumentStatus, string usrCode, Nullable<System.DateTime> rbhFromDate, Nullable<System.DateTime> rbhToDate, Nullable<System.DateTime> serverDate, string rbhName, string rbhOwnerCity, string rbhEnterprise)
        {
            var rbhOwnerOrganizationCodeParameter = rbhOwnerOrganizationCode != null ?
                new ObjectParameter("rbhOwnerOrganizationCode", rbhOwnerOrganizationCode) :
                new ObjectParameter("rbhOwnerOrganizationCode", typeof(string));
    
            var rbhDocumentStatusParameter = rbhDocumentStatus.HasValue ?
                new ObjectParameter("rbhDocumentStatus", rbhDocumentStatus) :
                new ObjectParameter("rbhDocumentStatus", typeof(int));
    
            var usrCodeParameter = usrCode != null ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(string));
    
            var rbhFromDateParameter = rbhFromDate.HasValue ?
                new ObjectParameter("rbhFromDate", rbhFromDate) :
                new ObjectParameter("rbhFromDate", typeof(System.DateTime));
    
            var rbhToDateParameter = rbhToDate.HasValue ?
                new ObjectParameter("rbhToDate", rbhToDate) :
                new ObjectParameter("rbhToDate", typeof(System.DateTime));
    
            var serverDateParameter = serverDate.HasValue ?
                new ObjectParameter("ServerDate", serverDate) :
                new ObjectParameter("ServerDate", typeof(System.DateTime));
    
            var rbhNameParameter = rbhName != null ?
                new ObjectParameter("rbhName", rbhName) :
                new ObjectParameter("rbhName", typeof(string));
    
            var rbhOwnerCityParameter = rbhOwnerCity != null ?
                new ObjectParameter("rbhOwnerCity", rbhOwnerCity) :
                new ObjectParameter("rbhOwnerCity", typeof(string));
    
            var rbhEnterpriseParameter = rbhEnterprise != null ?
                new ObjectParameter("rbhEnterprise", rbhEnterprise) :
                new ObjectParameter("rbhEnterprise", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BusquedaLicitacionesSeguimiento_Nombre_Region_Organismo_Result>("BusquedaLicitacionesSeguimiento_Nombre_Region_Organismo", rbhOwnerOrganizationCodeParameter, rbhDocumentStatusParameter, usrCodeParameter, rbhFromDateParameter, rbhToDateParameter, serverDateParameter, rbhNameParameter, rbhOwnerCityParameter, rbhEnterpriseParameter);
        }
    
        public virtual ObjectResult<BusquedaLicitacionesSeguimiento_Nombre_Region_Organismo_Excel_Result> BusquedaLicitacionesSeguimiento_Nombre_Region_Organismo_Excel(string rbhOwnerOrganizationCode, Nullable<int> rbhDocumentStatus, string usrCode, Nullable<System.DateTime> rbhFromDate, Nullable<System.DateTime> rbhToDate, Nullable<System.DateTime> serverDate, string rbhName, string rbhOwnerCity, string rbhEnterprise)
        {
            var rbhOwnerOrganizationCodeParameter = rbhOwnerOrganizationCode != null ?
                new ObjectParameter("rbhOwnerOrganizationCode", rbhOwnerOrganizationCode) :
                new ObjectParameter("rbhOwnerOrganizationCode", typeof(string));
    
            var rbhDocumentStatusParameter = rbhDocumentStatus.HasValue ?
                new ObjectParameter("rbhDocumentStatus", rbhDocumentStatus) :
                new ObjectParameter("rbhDocumentStatus", typeof(int));
    
            var usrCodeParameter = usrCode != null ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(string));
    
            var rbhFromDateParameter = rbhFromDate.HasValue ?
                new ObjectParameter("rbhFromDate", rbhFromDate) :
                new ObjectParameter("rbhFromDate", typeof(System.DateTime));
    
            var rbhToDateParameter = rbhToDate.HasValue ?
                new ObjectParameter("rbhToDate", rbhToDate) :
                new ObjectParameter("rbhToDate", typeof(System.DateTime));
    
            var serverDateParameter = serverDate.HasValue ?
                new ObjectParameter("ServerDate", serverDate) :
                new ObjectParameter("ServerDate", typeof(System.DateTime));
    
            var rbhNameParameter = rbhName != null ?
                new ObjectParameter("rbhName", rbhName) :
                new ObjectParameter("rbhName", typeof(string));
    
            var rbhOwnerCityParameter = rbhOwnerCity != null ?
                new ObjectParameter("rbhOwnerCity", rbhOwnerCity) :
                new ObjectParameter("rbhOwnerCity", typeof(string));
    
            var rbhEnterpriseParameter = rbhEnterprise != null ?
                new ObjectParameter("rbhEnterprise", rbhEnterprise) :
                new ObjectParameter("rbhEnterprise", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BusquedaLicitacionesSeguimiento_Nombre_Region_Organismo_Excel_Result>("BusquedaLicitacionesSeguimiento_Nombre_Region_Organismo_Excel", rbhOwnerOrganizationCodeParameter, rbhDocumentStatusParameter, usrCodeParameter, rbhFromDateParameter, rbhToDateParameter, serverDateParameter, rbhNameParameter, rbhOwnerCityParameter, rbhEnterpriseParameter);
        }
    
        public virtual ObjectResult<BusquedaLicitacionesSeguimiento_Organismo_Result> BusquedaLicitacionesSeguimiento_Organismo(string rbhOwnerOrganizationCode, Nullable<int> rbhDocumentStatus, string usrCode, Nullable<System.DateTime> rbhFromDate, Nullable<System.DateTime> rbhToDate, Nullable<System.DateTime> serverDate, string rbhEnterprise)
        {
            var rbhOwnerOrganizationCodeParameter = rbhOwnerOrganizationCode != null ?
                new ObjectParameter("rbhOwnerOrganizationCode", rbhOwnerOrganizationCode) :
                new ObjectParameter("rbhOwnerOrganizationCode", typeof(string));
    
            var rbhDocumentStatusParameter = rbhDocumentStatus.HasValue ?
                new ObjectParameter("rbhDocumentStatus", rbhDocumentStatus) :
                new ObjectParameter("rbhDocumentStatus", typeof(int));
    
            var usrCodeParameter = usrCode != null ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(string));
    
            var rbhFromDateParameter = rbhFromDate.HasValue ?
                new ObjectParameter("rbhFromDate", rbhFromDate) :
                new ObjectParameter("rbhFromDate", typeof(System.DateTime));
    
            var rbhToDateParameter = rbhToDate.HasValue ?
                new ObjectParameter("rbhToDate", rbhToDate) :
                new ObjectParameter("rbhToDate", typeof(System.DateTime));
    
            var serverDateParameter = serverDate.HasValue ?
                new ObjectParameter("ServerDate", serverDate) :
                new ObjectParameter("ServerDate", typeof(System.DateTime));
    
            var rbhEnterpriseParameter = rbhEnterprise != null ?
                new ObjectParameter("rbhEnterprise", rbhEnterprise) :
                new ObjectParameter("rbhEnterprise", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BusquedaLicitacionesSeguimiento_Organismo_Result>("BusquedaLicitacionesSeguimiento_Organismo", rbhOwnerOrganizationCodeParameter, rbhDocumentStatusParameter, usrCodeParameter, rbhFromDateParameter, rbhToDateParameter, serverDateParameter, rbhEnterpriseParameter);
        }
    
        public virtual ObjectResult<BusquedaLicitacionesSeguimiento_Organismo_Excel_Result> BusquedaLicitacionesSeguimiento_Organismo_Excel(string rbhOwnerOrganizationCode, Nullable<int> rbhDocumentStatus, string usrCode, Nullable<System.DateTime> rbhFromDate, Nullable<System.DateTime> rbhToDate, Nullable<System.DateTime> serverDate, string rbhEnterprise)
        {
            var rbhOwnerOrganizationCodeParameter = rbhOwnerOrganizationCode != null ?
                new ObjectParameter("rbhOwnerOrganizationCode", rbhOwnerOrganizationCode) :
                new ObjectParameter("rbhOwnerOrganizationCode", typeof(string));
    
            var rbhDocumentStatusParameter = rbhDocumentStatus.HasValue ?
                new ObjectParameter("rbhDocumentStatus", rbhDocumentStatus) :
                new ObjectParameter("rbhDocumentStatus", typeof(int));
    
            var usrCodeParameter = usrCode != null ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(string));
    
            var rbhFromDateParameter = rbhFromDate.HasValue ?
                new ObjectParameter("rbhFromDate", rbhFromDate) :
                new ObjectParameter("rbhFromDate", typeof(System.DateTime));
    
            var rbhToDateParameter = rbhToDate.HasValue ?
                new ObjectParameter("rbhToDate", rbhToDate) :
                new ObjectParameter("rbhToDate", typeof(System.DateTime));
    
            var serverDateParameter = serverDate.HasValue ?
                new ObjectParameter("ServerDate", serverDate) :
                new ObjectParameter("ServerDate", typeof(System.DateTime));
    
            var rbhEnterpriseParameter = rbhEnterprise != null ?
                new ObjectParameter("rbhEnterprise", rbhEnterprise) :
                new ObjectParameter("rbhEnterprise", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BusquedaLicitacionesSeguimiento_Organismo_Excel_Result>("BusquedaLicitacionesSeguimiento_Organismo_Excel", rbhOwnerOrganizationCodeParameter, rbhDocumentStatusParameter, usrCodeParameter, rbhFromDateParameter, rbhToDateParameter, serverDateParameter, rbhEnterpriseParameter);
        }
    
        public virtual ObjectResult<BusquedaLicitacionesSeguimiento_Region_Result> BusquedaLicitacionesSeguimiento_Region(string rbhOwnerOrganizationCode, Nullable<int> rbhDocumentStatus, string usrCode, Nullable<System.DateTime> rbhFromDate, Nullable<System.DateTime> rbhToDate, Nullable<System.DateTime> serverDate, string rbhOwnerCity)
        {
            var rbhOwnerOrganizationCodeParameter = rbhOwnerOrganizationCode != null ?
                new ObjectParameter("rbhOwnerOrganizationCode", rbhOwnerOrganizationCode) :
                new ObjectParameter("rbhOwnerOrganizationCode", typeof(string));
    
            var rbhDocumentStatusParameter = rbhDocumentStatus.HasValue ?
                new ObjectParameter("rbhDocumentStatus", rbhDocumentStatus) :
                new ObjectParameter("rbhDocumentStatus", typeof(int));
    
            var usrCodeParameter = usrCode != null ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(string));
    
            var rbhFromDateParameter = rbhFromDate.HasValue ?
                new ObjectParameter("rbhFromDate", rbhFromDate) :
                new ObjectParameter("rbhFromDate", typeof(System.DateTime));
    
            var rbhToDateParameter = rbhToDate.HasValue ?
                new ObjectParameter("rbhToDate", rbhToDate) :
                new ObjectParameter("rbhToDate", typeof(System.DateTime));
    
            var serverDateParameter = serverDate.HasValue ?
                new ObjectParameter("ServerDate", serverDate) :
                new ObjectParameter("ServerDate", typeof(System.DateTime));
    
            var rbhOwnerCityParameter = rbhOwnerCity != null ?
                new ObjectParameter("rbhOwnerCity", rbhOwnerCity) :
                new ObjectParameter("rbhOwnerCity", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BusquedaLicitacionesSeguimiento_Region_Result>("BusquedaLicitacionesSeguimiento_Region", rbhOwnerOrganizationCodeParameter, rbhDocumentStatusParameter, usrCodeParameter, rbhFromDateParameter, rbhToDateParameter, serverDateParameter, rbhOwnerCityParameter);
        }
    
        public virtual ObjectResult<BusquedaLicitacionesSeguimiento_Region_Excel_Result> BusquedaLicitacionesSeguimiento_Region_Excel(string rbhOwnerOrganizationCode, Nullable<int> rbhDocumentStatus, string usrCode, Nullable<System.DateTime> rbhFromDate, Nullable<System.DateTime> rbhToDate, Nullable<System.DateTime> serverDate, string rbhOwnerCity)
        {
            var rbhOwnerOrganizationCodeParameter = rbhOwnerOrganizationCode != null ?
                new ObjectParameter("rbhOwnerOrganizationCode", rbhOwnerOrganizationCode) :
                new ObjectParameter("rbhOwnerOrganizationCode", typeof(string));
    
            var rbhDocumentStatusParameter = rbhDocumentStatus.HasValue ?
                new ObjectParameter("rbhDocumentStatus", rbhDocumentStatus) :
                new ObjectParameter("rbhDocumentStatus", typeof(int));
    
            var usrCodeParameter = usrCode != null ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(string));
    
            var rbhFromDateParameter = rbhFromDate.HasValue ?
                new ObjectParameter("rbhFromDate", rbhFromDate) :
                new ObjectParameter("rbhFromDate", typeof(System.DateTime));
    
            var rbhToDateParameter = rbhToDate.HasValue ?
                new ObjectParameter("rbhToDate", rbhToDate) :
                new ObjectParameter("rbhToDate", typeof(System.DateTime));
    
            var serverDateParameter = serverDate.HasValue ?
                new ObjectParameter("ServerDate", serverDate) :
                new ObjectParameter("ServerDate", typeof(System.DateTime));
    
            var rbhOwnerCityParameter = rbhOwnerCity != null ?
                new ObjectParameter("rbhOwnerCity", rbhOwnerCity) :
                new ObjectParameter("rbhOwnerCity", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BusquedaLicitacionesSeguimiento_Region_Excel_Result>("BusquedaLicitacionesSeguimiento_Region_Excel", rbhOwnerOrganizationCodeParameter, rbhDocumentStatusParameter, usrCodeParameter, rbhFromDateParameter, rbhToDateParameter, serverDateParameter, rbhOwnerCityParameter);
        }
    
        public virtual ObjectResult<BusquedaLicitacionesSeguimiento_Region_Organismo_Result> BusquedaLicitacionesSeguimiento_Region_Organismo(string rbhOwnerOrganizationCode, Nullable<int> rbhDocumentStatus, string usrCode, Nullable<System.DateTime> rbhFromDate, Nullable<System.DateTime> rbhToDate, Nullable<System.DateTime> serverDate, string rbhOwnerCity, string rbhEnterprise)
        {
            var rbhOwnerOrganizationCodeParameter = rbhOwnerOrganizationCode != null ?
                new ObjectParameter("rbhOwnerOrganizationCode", rbhOwnerOrganizationCode) :
                new ObjectParameter("rbhOwnerOrganizationCode", typeof(string));
    
            var rbhDocumentStatusParameter = rbhDocumentStatus.HasValue ?
                new ObjectParameter("rbhDocumentStatus", rbhDocumentStatus) :
                new ObjectParameter("rbhDocumentStatus", typeof(int));
    
            var usrCodeParameter = usrCode != null ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(string));
    
            var rbhFromDateParameter = rbhFromDate.HasValue ?
                new ObjectParameter("rbhFromDate", rbhFromDate) :
                new ObjectParameter("rbhFromDate", typeof(System.DateTime));
    
            var rbhToDateParameter = rbhToDate.HasValue ?
                new ObjectParameter("rbhToDate", rbhToDate) :
                new ObjectParameter("rbhToDate", typeof(System.DateTime));
    
            var serverDateParameter = serverDate.HasValue ?
                new ObjectParameter("ServerDate", serverDate) :
                new ObjectParameter("ServerDate", typeof(System.DateTime));
    
            var rbhOwnerCityParameter = rbhOwnerCity != null ?
                new ObjectParameter("rbhOwnerCity", rbhOwnerCity) :
                new ObjectParameter("rbhOwnerCity", typeof(string));
    
            var rbhEnterpriseParameter = rbhEnterprise != null ?
                new ObjectParameter("rbhEnterprise", rbhEnterprise) :
                new ObjectParameter("rbhEnterprise", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BusquedaLicitacionesSeguimiento_Region_Organismo_Result>("BusquedaLicitacionesSeguimiento_Region_Organismo", rbhOwnerOrganizationCodeParameter, rbhDocumentStatusParameter, usrCodeParameter, rbhFromDateParameter, rbhToDateParameter, serverDateParameter, rbhOwnerCityParameter, rbhEnterpriseParameter);
        }
    
        public virtual ObjectResult<BusquedaLicitacionesSeguimiento_Region_Organismo_Excel_Result> BusquedaLicitacionesSeguimiento_Region_Organismo_Excel(string rbhOwnerOrganizationCode, Nullable<int> rbhDocumentStatus, string usrCode, Nullable<System.DateTime> rbhFromDate, Nullable<System.DateTime> rbhToDate, Nullable<System.DateTime> serverDate, string rbhOwnerCity, string rbhEnterprise)
        {
            var rbhOwnerOrganizationCodeParameter = rbhOwnerOrganizationCode != null ?
                new ObjectParameter("rbhOwnerOrganizationCode", rbhOwnerOrganizationCode) :
                new ObjectParameter("rbhOwnerOrganizationCode", typeof(string));
    
            var rbhDocumentStatusParameter = rbhDocumentStatus.HasValue ?
                new ObjectParameter("rbhDocumentStatus", rbhDocumentStatus) :
                new ObjectParameter("rbhDocumentStatus", typeof(int));
    
            var usrCodeParameter = usrCode != null ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(string));
    
            var rbhFromDateParameter = rbhFromDate.HasValue ?
                new ObjectParameter("rbhFromDate", rbhFromDate) :
                new ObjectParameter("rbhFromDate", typeof(System.DateTime));
    
            var rbhToDateParameter = rbhToDate.HasValue ?
                new ObjectParameter("rbhToDate", rbhToDate) :
                new ObjectParameter("rbhToDate", typeof(System.DateTime));
    
            var serverDateParameter = serverDate.HasValue ?
                new ObjectParameter("ServerDate", serverDate) :
                new ObjectParameter("ServerDate", typeof(System.DateTime));
    
            var rbhOwnerCityParameter = rbhOwnerCity != null ?
                new ObjectParameter("rbhOwnerCity", rbhOwnerCity) :
                new ObjectParameter("rbhOwnerCity", typeof(string));
    
            var rbhEnterpriseParameter = rbhEnterprise != null ?
                new ObjectParameter("rbhEnterprise", rbhEnterprise) :
                new ObjectParameter("rbhEnterprise", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BusquedaLicitacionesSeguimiento_Region_Organismo_Excel_Result>("BusquedaLicitacionesSeguimiento_Region_Organismo_Excel", rbhOwnerOrganizationCodeParameter, rbhDocumentStatusParameter, usrCodeParameter, rbhFromDateParameter, rbhToDateParameter, serverDateParameter, rbhOwnerCityParameter, rbhEnterpriseParameter);
        }
    
        public virtual ObjectResult<CampañaActaEvaluacionJulio2011_Result> CampañaActaEvaluacionJulio2011()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CampañaActaEvaluacionJulio2011_Result>("CampañaActaEvaluacionJulio2011");
        }
    
        public virtual ObjectResult<CampañaPregSinRespuestasDurante_Result> CampañaPregSinRespuestasDurante()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CampañaPregSinRespuestasDurante_Result>("CampañaPregSinRespuestasDurante");
        }
    
        public virtual ObjectResult<CampañaPregSinRespuestasPreventiva_Result> CampañaPregSinRespuestasPreventiva()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CampañaPregSinRespuestasPreventiva_Result>("CampañaPregSinRespuestasPreventiva");
        }
    
        public virtual ObjectResult<CampañaTiemposDePublicacionJulio2011_Result> CampañaTiemposDePublicacionJulio2011()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CampañaTiemposDePublicacionJulio2011_Result>("CampañaTiemposDePublicacionJulio2011");
        }
    
        public virtual ObjectResult<Nullable<int>> CantidadLicitacionesSeguidasTwitter(ObjectParameter resultCode, ObjectParameter resultMessage, string usrCode)
        {
            var usrCodeParameter = usrCode != null ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CantidadLicitacionesSeguidasTwitter", resultCode, resultMessage, usrCodeParameter);
        }
    
        public virtual ObjectResult<cargaDatosDE_Ofertas_MPCRM_Result> cargaDatosDE_Ofertas_MPCRM(string idOferta)
        {
            var idOfertaParameter = idOferta != null ?
                new ObjectParameter("idOferta", idOferta) :
                new ObjectParameter("idOferta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cargaDatosDE_Ofertas_MPCRM_Result>("cargaDatosDE_Ofertas_MPCRM", idOfertaParameter);
        }
    
        public virtual ObjectResult<cargaDatosLI_Ofertas_MPCRM_Result> cargaDatosLI_Ofertas_MPCRM(string idLicitacion)
        {
            var idLicitacionParameter = idLicitacion != null ?
                new ObjectParameter("idLicitacion", idLicitacion) :
                new ObjectParameter("idLicitacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cargaDatosLI_Ofertas_MPCRM_Result>("cargaDatosLI_Ofertas_MPCRM", idLicitacionParameter);
        }
    
        public virtual ObjectResult<cargaDatosObservatorioCRM_Result> cargaDatosObservatorioCRM()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cargaDatosObservatorioCRM_Result>("cargaDatosObservatorioCRM");
        }
    
        public virtual int CerrarPeriodoNegociacion(Nullable<int> rbhCode)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CerrarPeriodoNegociacion", rbhCodeParameter);
        }
    
        public virtual int CerrarPeriodoNegociacionSinNegociarConProv(Nullable<int> rbhCode)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CerrarPeriodoNegociacionSinNegociarConProv", rbhCodeParameter);
        }
    
        public virtual int chcGetPendingQualificationsSubSet(string pOCode, string buyerName, string documentName, string amountFrom, string amountTo, Nullable<int> startRowIndex, Nullable<int> maximumRows)
        {
            var pOCodeParameter = pOCode != null ?
                new ObjectParameter("POCode", pOCode) :
                new ObjectParameter("POCode", typeof(string));
    
            var buyerNameParameter = buyerName != null ?
                new ObjectParameter("buyerName", buyerName) :
                new ObjectParameter("buyerName", typeof(string));
    
            var documentNameParameter = documentName != null ?
                new ObjectParameter("documentName", documentName) :
                new ObjectParameter("documentName", typeof(string));
    
            var amountFromParameter = amountFrom != null ?
                new ObjectParameter("amountFrom", amountFrom) :
                new ObjectParameter("amountFrom", typeof(string));
    
            var amountToParameter = amountTo != null ?
                new ObjectParameter("amountTo", amountTo) :
                new ObjectParameter("amountTo", typeof(string));
    
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));
    
            var maximumRowsParameter = maximumRows.HasValue ?
                new ObjectParameter("maximumRows", maximumRows) :
                new ObjectParameter("maximumRows", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("chcGetPendingQualificationsSubSet", pOCodeParameter, buyerNameParameter, documentNameParameter, amountFromParameter, amountToParameter, startRowIndexParameter, maximumRowsParameter);
        }
    
        public virtual int chcGetPendingQualificationsSubSetSorted(string sortExpression, string pOCode, string buyerName, string documentName, string amountFrom, string amountTo, Nullable<int> startRowIndex, Nullable<int> maximumRows)
        {
            var sortExpressionParameter = sortExpression != null ?
                new ObjectParameter("sortExpression", sortExpression) :
                new ObjectParameter("sortExpression", typeof(string));
    
            var pOCodeParameter = pOCode != null ?
                new ObjectParameter("POCode", pOCode) :
                new ObjectParameter("POCode", typeof(string));
    
            var buyerNameParameter = buyerName != null ?
                new ObjectParameter("buyerName", buyerName) :
                new ObjectParameter("buyerName", typeof(string));
    
            var documentNameParameter = documentName != null ?
                new ObjectParameter("documentName", documentName) :
                new ObjectParameter("documentName", typeof(string));
    
            var amountFromParameter = amountFrom != null ?
                new ObjectParameter("amountFrom", amountFrom) :
                new ObjectParameter("amountFrom", typeof(string));
    
            var amountToParameter = amountTo != null ?
                new ObjectParameter("amountTo", amountTo) :
                new ObjectParameter("amountTo", typeof(string));
    
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));
    
            var maximumRowsParameter = maximumRows.HasValue ?
                new ObjectParameter("maximumRows", maximumRows) :
                new ObjectParameter("maximumRows", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("chcGetPendingQualificationsSubSetSorted", sortExpressionParameter, pOCodeParameter, buyerNameParameter, documentNameParameter, amountFromParameter, amountToParameter, startRowIndexParameter, maximumRowsParameter);
        }
    
        public virtual int chcSpcGetPendingQualificationsCount(ObjectParameter resultCode, ObjectParameter resultMessage, string pOCode, string buyerName, string documentName, string amountFrom, string amountTo)
        {
            var pOCodeParameter = pOCode != null ?
                new ObjectParameter("POCode", pOCode) :
                new ObjectParameter("POCode", typeof(string));
    
            var buyerNameParameter = buyerName != null ?
                new ObjectParameter("buyerName", buyerName) :
                new ObjectParameter("buyerName", typeof(string));
    
            var documentNameParameter = documentName != null ?
                new ObjectParameter("documentName", documentName) :
                new ObjectParameter("documentName", typeof(string));
    
            var amountFromParameter = amountFrom != null ?
                new ObjectParameter("amountFrom", amountFrom) :
                new ObjectParameter("amountFrom", typeof(string));
    
            var amountToParameter = amountTo != null ?
                new ObjectParameter("amountTo", amountTo) :
                new ObjectParameter("amountTo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("chcSpcGetPendingQualificationsCount", resultCode, resultMessage, pOCodeParameter, buyerNameParameter, documentNameParameter, amountFromParameter, amountToParameter);
        }
    
        public virtual int cpCorreccionLC_1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cpCorreccionLC_1");
        }
    
        public virtual ObjectResult<cpEnvioMailCompradores_Result> cpEnvioMailCompradores()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cpEnvioMailCompradores_Result>("cpEnvioMailCompradores");
        }
    
        public virtual ObjectResult<cpEnvioMailProveedores_Result> cpEnvioMailProveedores()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cpEnvioMailProveedores_Result>("cpEnvioMailProveedores");
        }
    
        public virtual ObjectResult<cpExcel_Licitacion_Adjudicada_Historico_Result> cpExcel_Licitacion_Adjudicada_Historico()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cpExcel_Licitacion_Adjudicada_Historico_Result>("cpExcel_Licitacion_Adjudicada_Historico");
        }
    
        public virtual ObjectResult<cpExcel_Licitacion_Adjudicada_Historico_Mes_Semana_Result> cpExcel_Licitacion_Adjudicada_Historico_Mes_Semana()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cpExcel_Licitacion_Adjudicada_Historico_Mes_Semana_Result>("cpExcel_Licitacion_Adjudicada_Historico_Mes_Semana");
        }
    
        public virtual ObjectResult<cpExcel_Licitacion_Adjudicada_Historico_Mes_UMedida_Cantidad_Result> cpExcel_Licitacion_Adjudicada_Historico_Mes_UMedida_Cantidad()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cpExcel_Licitacion_Adjudicada_Historico_Mes_UMedida_Cantidad_Result>("cpExcel_Licitacion_Adjudicada_Historico_Mes_UMedida_Cantidad");
        }
    
        public virtual ObjectResult<cpExcel_Licitacion_Cerrada_Result> cpExcel_Licitacion_Cerrada()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cpExcel_Licitacion_Cerrada_Result>("cpExcel_Licitacion_Cerrada");
        }
    
        public virtual ObjectResult<cpExcel_Licitacion_Of_Recibida_Result> cpExcel_Licitacion_Of_Recibida()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cpExcel_Licitacion_Of_Recibida_Result>("cpExcel_Licitacion_Of_Recibida");
        }
    
        public virtual ObjectResult<cpExcel_Licitacion_Opor_Negocio_Result> cpExcel_Licitacion_Opor_Negocio()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cpExcel_Licitacion_Opor_Negocio_Result>("cpExcel_Licitacion_Opor_Negocio");
        }
    
        public virtual int cpExcel_Licitacion_Publicada()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cpExcel_Licitacion_Publicada");
        }
    
        public virtual ObjectResult<cpExcel_Licitacion_Publicada_Historica_Result> cpExcel_Licitacion_Publicada_Historica()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cpExcel_Licitacion_Publicada_Historica_Result>("cpExcel_Licitacion_Publicada_Historica");
        }
    
        public virtual ObjectResult<cpExcel_Licitacion_Publicada_LP_Result> cpExcel_Licitacion_Publicada_LP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cpExcel_Licitacion_Publicada_LP_Result>("cpExcel_Licitacion_Publicada_LP");
        }
    
        public virtual ObjectResult<cpExcel_OC_Enviadas_Result> cpExcel_OC_Enviadas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cpExcel_OC_Enviadas_Result>("cpExcel_OC_Enviadas");
        }
    
        public virtual ObjectResult<cpExcel_Opor_Negocio_Result> cpExcel_Opor_Negocio()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cpExcel_Opor_Negocio_Result>("cpExcel_Opor_Negocio");
        }
    
        public virtual int cpInformeDiario(string fecha)
        {
            var fechaParameter = fecha != null ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cpInformeDiario", fechaParameter);
        }
    
        public virtual int cpInformeMensualLCAcumulado()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cpInformeMensualLCAcumulado");
        }
    
        public virtual int cpInformeMensualLCDetallado()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cpInformeMensualLCDetallado");
        }
    
        public virtual int cpInformeMensualOCAcumulado()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cpInformeMensualOCAcumulado");
        }
    
        public virtual int cpInformeMensualOCDetallado()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cpInformeMensualOCDetallado");
        }
    
        public virtual ObjectResult<cpInformeMonitoreoComprasSustentables_Result> cpInformeMonitoreoComprasSustentables()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cpInformeMonitoreoComprasSustentables_Result>("cpInformeMonitoreoComprasSustentables");
        }
    
        public virtual ObjectResult<cpInformeMonitoreoFechasMinimas_Result> cpInformeMonitoreoFechasMinimas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cpInformeMonitoreoFechasMinimas_Result>("cpInformeMonitoreoFechasMinimas");
        }
    
        public virtual ObjectResult<cpInformeMonitoreoLCGuardadasDiario_Result> cpInformeMonitoreoLCGuardadasDiario()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cpInformeMonitoreoLCGuardadasDiario_Result>("cpInformeMonitoreoLCGuardadasDiario");
        }
    
        public virtual ObjectResult<cpInformeMonitoreoLCPublicadasDiario_Result> cpInformeMonitoreoLCPublicadasDiario()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cpInformeMonitoreoLCPublicadasDiario_Result>("cpInformeMonitoreoLCPublicadasDiario");
        }
    
        public virtual ObjectResult<cpInformeMonitoreoLCSinActaEval_Result> cpInformeMonitoreoLCSinActaEval()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cpInformeMonitoreoLCSinActaEval_Result>("cpInformeMonitoreoLCSinActaEval");
        }
    
        public virtual int cpListarCertificado(Nullable<int> idIncidente)
        {
            var idIncidenteParameter = idIncidente.HasValue ?
                new ObjectParameter("idIncidente", idIncidente) :
                new ObjectParameter("idIncidente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cpListarCertificado", idIncidenteParameter);
        }
    
        public virtual int cpLogOc(string guid, Nullable<int> idoc, string accion, string valor)
        {
            var guidParameter = guid != null ?
                new ObjectParameter("guid", guid) :
                new ObjectParameter("guid", typeof(string));
    
            var idocParameter = idoc.HasValue ?
                new ObjectParameter("idoc", idoc) :
                new ObjectParameter("idoc", typeof(int));
    
            var accionParameter = accion != null ?
                new ObjectParameter("accion", accion) :
                new ObjectParameter("accion", typeof(string));
    
            var valorParameter = valor != null ?
                new ObjectParameter("valor", valor) :
                new ObjectParameter("valor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cpLogOc", guidParameter, idocParameter, accionParameter, valorParameter);
        }
    
        public virtual int cpMigracionOfertasFinal()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cpMigracionOfertasFinal");
        }
    
        public virtual int cpMigraOCMP(string numero, string tipo)
        {
            var numeroParameter = numero != null ?
                new ObjectParameter("numero", numero) :
                new ObjectParameter("numero", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cpMigraOCMP", numeroParameter, tipoParameter);
        }
    
        public virtual int cpMigraOCMPCompleto()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cpMigraOCMPCompleto");
        }
    
        public virtual int cpMigraOfertas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cpMigraOfertas");
        }
    
        public virtual int cpMigraRFBCompleto()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cpMigraRFBCompleto");
        }
    
        public virtual int cpMigraRFBPerdidas(string numlc)
        {
            var numlcParameter = numlc != null ?
                new ObjectParameter("numlc", numlc) :
                new ObjectParameter("numlc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cpMigraRFBPerdidas", numlcParameter);
        }
    
        public virtual int cpOP_MigraLCTicket()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cpOP_MigraLCTicket");
        }
    
        public virtual int cpOP_MigraOCTicket()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cpOP_MigraOCTicket");
        }
    
        public virtual int CrearBidItem(Nullable<int> bitBID, Nullable<int> bidRFBCode)
        {
            var bitBIDParameter = bitBID.HasValue ?
                new ObjectParameter("bitBID", bitBID) :
                new ObjectParameter("bitBID", typeof(int));
    
            var bidRFBCodeParameter = bidRFBCode.HasValue ?
                new ObjectParameter("bidRFBCode", bidRFBCode) :
                new ObjectParameter("bidRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CrearBidItem", bitBIDParameter, bidRFBCodeParameter);
        }
    
        public virtual int CrearCabeceraOrdenCompra(string nombreOrden, Nullable<int> solicitud, Nullable<int> estadoComprador, string organizacionComprador, string usuarioComprador, string organizacionVendedor, Nullable<int> tipoOrden, string codigo, string descripcion, string cuenta)
        {
            var nombreOrdenParameter = nombreOrden != null ?
                new ObjectParameter("NombreOrden", nombreOrden) :
                new ObjectParameter("NombreOrden", typeof(string));
    
            var solicitudParameter = solicitud.HasValue ?
                new ObjectParameter("Solicitud", solicitud) :
                new ObjectParameter("Solicitud", typeof(int));
    
            var estadoCompradorParameter = estadoComprador.HasValue ?
                new ObjectParameter("EstadoComprador", estadoComprador) :
                new ObjectParameter("EstadoComprador", typeof(int));
    
            var organizacionCompradorParameter = organizacionComprador != null ?
                new ObjectParameter("OrganizacionComprador", organizacionComprador) :
                new ObjectParameter("OrganizacionComprador", typeof(string));
    
            var usuarioCompradorParameter = usuarioComprador != null ?
                new ObjectParameter("UsuarioComprador", usuarioComprador) :
                new ObjectParameter("UsuarioComprador", typeof(string));
    
            var organizacionVendedorParameter = organizacionVendedor != null ?
                new ObjectParameter("OrganizacionVendedor", organizacionVendedor) :
                new ObjectParameter("OrganizacionVendedor", typeof(string));
    
            var tipoOrdenParameter = tipoOrden.HasValue ?
                new ObjectParameter("TipoOrden", tipoOrden) :
                new ObjectParameter("TipoOrden", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var cuentaParameter = cuenta != null ?
                new ObjectParameter("Cuenta", cuenta) :
                new ObjectParameter("Cuenta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CrearCabeceraOrdenCompra", nombreOrdenParameter, solicitudParameter, estadoCompradorParameter, organizacionCompradorParameter, usuarioCompradorParameter, organizacionVendedorParameter, tipoOrdenParameter, codigoParameter, descripcionParameter, cuentaParameter);
        }
    
        public virtual int CrearItemOrdenCompra(Nullable<int> idCabecera, Nullable<double> cantidad, Nullable<double> precioNeto, Nullable<int> bienesYServicios, string nombre, string descripcion, Nullable<int> esquema, string categoria, Nullable<double> totalDescuento, Nullable<double> totalCargos, Nullable<double> totalImpuestos, string definicionUsuario, string piezaVendedor, Nullable<int> poiIdConvenioMarco, string poiNroLicitacionPublica)
        {
            var idCabeceraParameter = idCabecera.HasValue ?
                new ObjectParameter("IdCabecera", idCabecera) :
                new ObjectParameter("IdCabecera", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(double));
    
            var precioNetoParameter = precioNeto.HasValue ?
                new ObjectParameter("PrecioNeto", precioNeto) :
                new ObjectParameter("PrecioNeto", typeof(double));
    
            var bienesYServiciosParameter = bienesYServicios.HasValue ?
                new ObjectParameter("BienesYServicios", bienesYServicios) :
                new ObjectParameter("BienesYServicios", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var esquemaParameter = esquema.HasValue ?
                new ObjectParameter("Esquema", esquema) :
                new ObjectParameter("Esquema", typeof(int));
    
            var categoriaParameter = categoria != null ?
                new ObjectParameter("Categoria", categoria) :
                new ObjectParameter("Categoria", typeof(string));
    
            var totalDescuentoParameter = totalDescuento.HasValue ?
                new ObjectParameter("TotalDescuento", totalDescuento) :
                new ObjectParameter("TotalDescuento", typeof(double));
    
            var totalCargosParameter = totalCargos.HasValue ?
                new ObjectParameter("TotalCargos", totalCargos) :
                new ObjectParameter("TotalCargos", typeof(double));
    
            var totalImpuestosParameter = totalImpuestos.HasValue ?
                new ObjectParameter("TotalImpuestos", totalImpuestos) :
                new ObjectParameter("TotalImpuestos", typeof(double));
    
            var definicionUsuarioParameter = definicionUsuario != null ?
                new ObjectParameter("DefinicionUsuario", definicionUsuario) :
                new ObjectParameter("DefinicionUsuario", typeof(string));
    
            var piezaVendedorParameter = piezaVendedor != null ?
                new ObjectParameter("PiezaVendedor", piezaVendedor) :
                new ObjectParameter("PiezaVendedor", typeof(string));
    
            var poiIdConvenioMarcoParameter = poiIdConvenioMarco.HasValue ?
                new ObjectParameter("poiIdConvenioMarco", poiIdConvenioMarco) :
                new ObjectParameter("poiIdConvenioMarco", typeof(int));
    
            var poiNroLicitacionPublicaParameter = poiNroLicitacionPublica != null ?
                new ObjectParameter("poiNroLicitacionPublica", poiNroLicitacionPublica) :
                new ObjectParameter("poiNroLicitacionPublica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CrearItemOrdenCompra", idCabeceraParameter, cantidadParameter, precioNetoParameter, bienesYServiciosParameter, nombreParameter, descripcionParameter, esquemaParameter, categoriaParameter, totalDescuentoParameter, totalCargosParameter, totalImpuestosParameter, definicionUsuarioParameter, piezaVendedorParameter, poiIdConvenioMarcoParameter, poiNroLicitacionPublicaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CriterioCotizacion(Nullable<int> idOC)
        {
            var idOCParameter = idOC.HasValue ?
                new ObjectParameter("idOC", idOC) :
                new ObjectParameter("idOC", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CriterioCotizacion", idOCParameter);
        }
    
        public virtual int EliminaComprobantePDF(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> docNumber, Nullable<int> rfbCode, Nullable<int> type, Nullable<int> subType)
        {
            var docNumberParameter = docNumber.HasValue ?
                new ObjectParameter("DocNumber", docNumber) :
                new ObjectParameter("DocNumber", typeof(int));
    
            var rfbCodeParameter = rfbCode.HasValue ?
                new ObjectParameter("rfbCode", rfbCode) :
                new ObjectParameter("rfbCode", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var subTypeParameter = subType.HasValue ?
                new ObjectParameter("SubType", subType) :
                new ObjectParameter("SubType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminaComprobantePDF", resultCode, resultMessage, docNumberParameter, rfbCodeParameter, typeParameter, subTypeParameter);
        }
    
        public virtual int EliminaOfertaEncriptada(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminaOfertaEncriptada", idParameter);
        }
    
        public virtual int EliminarSeguimientoLicitacion(ObjectParameter resultCode, ObjectParameter resultMessage, string usrCode, Nullable<int> rbhCode, string rbhExternalCode)
        {
            var usrCodeParameter = usrCode != null ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(string));
    
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            var rbhExternalCodeParameter = rbhExternalCode != null ?
                new ObjectParameter("rbhExternalCode", rbhExternalCode) :
                new ObjectParameter("rbhExternalCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarSeguimientoLicitacion", resultCode, resultMessage, usrCodeParameter, rbhCodeParameter, rbhExternalCodeParameter);
        }
    
        public virtual int EnvioProveedorInhabilitado(string codigoOC, string codigoComprador, string codigoUsuarioComprador, string codigoProveedor, string motivo, Nullable<int> estado)
        {
            var codigoOCParameter = codigoOC != null ?
                new ObjectParameter("CodigoOC", codigoOC) :
                new ObjectParameter("CodigoOC", typeof(string));
    
            var codigoCompradorParameter = codigoComprador != null ?
                new ObjectParameter("CodigoComprador", codigoComprador) :
                new ObjectParameter("CodigoComprador", typeof(string));
    
            var codigoUsuarioCompradorParameter = codigoUsuarioComprador != null ?
                new ObjectParameter("CodigoUsuarioComprador", codigoUsuarioComprador) :
                new ObjectParameter("CodigoUsuarioComprador", typeof(string));
    
            var codigoProveedorParameter = codigoProveedor != null ?
                new ObjectParameter("CodigoProveedor", codigoProveedor) :
                new ObjectParameter("CodigoProveedor", typeof(string));
    
            var motivoParameter = motivo != null ?
                new ObjectParameter("Motivo", motivo) :
                new ObjectParameter("Motivo", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EnvioProveedorInhabilitado", codigoOCParameter, codigoCompradorParameter, codigoUsuarioCompradorParameter, codigoProveedorParameter, motivoParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EsLicitacionObraEnviada(string codigoExterno)
        {
            var codigoExternoParameter = codigoExterno != null ?
                new ObjectParameter("CodigoExterno", codigoExterno) :
                new ObjectParameter("CodigoExterno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EsLicitacionObraEnviada", codigoExternoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EstadoSeguimientoLicitacion(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbhCode, string usrCode)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            var usrCodeParameter = usrCode != null ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EstadoSeguimientoLicitacion", resultCode, resultMessage, rbhCodeParameter, usrCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EstaEncritada(Nullable<int> idLicitacion, Nullable<int> idOferta)
        {
            var idLicitacionParameter = idLicitacion.HasValue ?
                new ObjectParameter("idLicitacion", idLicitacion) :
                new ObjectParameter("idLicitacion", typeof(int));
    
            var idOfertaParameter = idOferta.HasValue ?
                new ObjectParameter("idOferta", idOferta) :
                new ObjectParameter("idOferta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EstaEncritada", idLicitacionParameter, idOfertaParameter);
        }
    
        public virtual ObjectResult<ExisteSolicitudModificacion_Result> ExisteSolicitudModificacion(Nullable<int> porID, ObjectParameter resultado)
        {
            var porIDParameter = porID.HasValue ?
                new ObjectParameter("porID", porID) :
                new ObjectParameter("porID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ExisteSolicitudModificacion_Result>("ExisteSolicitudModificacion", porIDParameter, resultado);
        }
    
        public virtual ObjectResult<string> FMCOU_getNombreInstitucionLicitacion(string idLicitacion)
        {
            var idLicitacionParameter = idLicitacion != null ?
                new ObjectParameter("idLicitacion", idLicitacion) :
                new ObjectParameter("idLicitacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("FMCOU_getNombreInstitucionLicitacion", idLicitacionParameter);
        }
    
        public virtual ObjectResult<string> FMCOU_getNombreLicitacion(string idLicitacion)
        {
            var idLicitacionParameter = idLicitacion != null ?
                new ObjectParameter("idLicitacion", idLicitacion) :
                new ObjectParameter("idLicitacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("FMCOU_getNombreLicitacion", idLicitacionParameter);
        }
    
        [DbFunction("DCCPProcurementEntities", "fn_TablaIdInt")]
        public virtual IQueryable<Nullable<int>> fn_TablaIdInt(string ids, string delimitador)
        {
            var idsParameter = ids != null ?
                new ObjectParameter("ids", ids) :
                new ObjectParameter("ids", typeof(string));
    
            var delimitadorParameter = delimitador != null ?
                new ObjectParameter("delimitador", delimitador) :
                new ObjectParameter("delimitador", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Nullable<int>>("[DCCPProcurementEntities].[fn_TablaIdInt](@ids, @delimitador)", idsParameter, delimitadorParameter);
        }
    
        [DbFunction("DCCPProcurementEntities", "fn_TablaIdString")]
        public virtual IQueryable<string> fn_TablaIdString(string ids, string delimitador)
        {
            var idsParameter = ids != null ?
                new ObjectParameter("ids", ids) :
                new ObjectParameter("ids", typeof(string));
    
            var delimitadorParameter = delimitador != null ?
                new ObjectParameter("delimitador", delimitador) :
                new ObjectParameter("delimitador", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<string>("[DCCPProcurementEntities].[fn_TablaIdString](@ids, @delimitador)", idsParameter, delimitadorParameter);
        }
    
        [DbFunction("DCCPProcurementEntities", "fn_TablaIdStringPrueba")]
        public virtual IQueryable<string> fn_TablaIdStringPrueba(string ids, string delimitador)
        {
            var idsParameter = ids != null ?
                new ObjectParameter("ids", ids) :
                new ObjectParameter("ids", typeof(string));
    
            var delimitadorParameter = delimitador != null ?
                new ObjectParameter("delimitador", delimitador) :
                new ObjectParameter("delimitador", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<string>("[DCCPProcurementEntities].[fn_TablaIdStringPrueba](@ids, @delimitador)", idsParameter, delimitadorParameter);
        }
    
        public virtual int FSOActualizarFechaLicitacionFastIndex(Nullable<int> idLicitacion)
        {
            var idLicitacionParameter = idLicitacion.HasValue ?
                new ObjectParameter("IdLicitacion", idLicitacion) :
                new ObjectParameter("IdLicitacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FSOActualizarFechaLicitacionFastIndex", idLicitacionParameter);
        }
    
        public virtual ObjectResult<FSObtenerCompradores_Result> FSObtenerCompradores(Nullable<int> licitacionID)
        {
            var licitacionIDParameter = licitacionID.HasValue ?
                new ObjectParameter("LicitacionID", licitacionID) :
                new ObjectParameter("LicitacionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FSObtenerCompradores_Result>("FSObtenerCompradores", licitacionIDParameter);
        }
    
        public virtual ObjectResult<FSObtenerDatosLicitacion_Result> FSObtenerDatosLicitacion(Nullable<int> licitacionID)
        {
            var licitacionIDParameter = licitacionID.HasValue ?
                new ObjectParameter("LicitacionID", licitacionID) :
                new ObjectParameter("LicitacionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FSObtenerDatosLicitacion_Result>("FSObtenerDatosLicitacion", licitacionIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> FSObtenerDatosLicitacionParaIndexar(Nullable<System.DateTime> fechaMinCambio, Nullable<System.DateTime> fechaMaxCambio, Nullable<System.DateTime> umbralIndex, Nullable<int> batchSize)
        {
            var fechaMinCambioParameter = fechaMinCambio.HasValue ?
                new ObjectParameter("FechaMinCambio", fechaMinCambio) :
                new ObjectParameter("FechaMinCambio", typeof(System.DateTime));
    
            var fechaMaxCambioParameter = fechaMaxCambio.HasValue ?
                new ObjectParameter("FechaMaxCambio", fechaMaxCambio) :
                new ObjectParameter("FechaMaxCambio", typeof(System.DateTime));
    
            var umbralIndexParameter = umbralIndex.HasValue ?
                new ObjectParameter("UmbralIndex", umbralIndex) :
                new ObjectParameter("UmbralIndex", typeof(System.DateTime));
    
            var batchSizeParameter = batchSize.HasValue ?
                new ObjectParameter("BatchSize", batchSize) :
                new ObjectParameter("BatchSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("FSObtenerDatosLicitacionParaIndexar", fechaMinCambioParameter, fechaMaxCambioParameter, umbralIndexParameter, batchSizeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> FSObtenerDatosLicitacionParaIndexarInicial(Nullable<int> maxDocsToProcess)
        {
            var maxDocsToProcessParameter = maxDocsToProcess.HasValue ?
                new ObjectParameter("MaxDocsToProcess", maxDocsToProcess) :
                new ObjectParameter("MaxDocsToProcess", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("FSObtenerDatosLicitacionParaIndexarInicial", maxDocsToProcessParameter);
        }
    
        public virtual ObjectResult<FSObtenerNombreRubro_Result> FSObtenerNombreRubro(Nullable<int> licitacionID)
        {
            var licitacionIDParameter = licitacionID.HasValue ?
                new ObjectParameter("LicitacionID", licitacionID) :
                new ObjectParameter("LicitacionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FSObtenerNombreRubro_Result>("FSObtenerNombreRubro", licitacionIDParameter);
        }
    
        public virtual ObjectResult<FSObtenerProveedores_Result> FSObtenerProveedores(Nullable<int> licitacionID)
        {
            var licitacionIDParameter = licitacionID.HasValue ?
                new ObjectParameter("LicitacionID", licitacionID) :
                new ObjectParameter("LicitacionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FSObtenerProveedores_Result>("FSObtenerProveedores", licitacionIDParameter);
        }
    
        public virtual int gblSpcCurrencyConverter(ObjectParameter resultCode, ObjectParameter resultMessage, string exrID, Nullable<double> valueToConvert, Nullable<System.DateTime> dateToCompare, ObjectParameter cONVERTEDVALUE)
        {
            var exrIDParameter = exrID != null ?
                new ObjectParameter("exrID", exrID) :
                new ObjectParameter("exrID", typeof(string));
    
            var valueToConvertParameter = valueToConvert.HasValue ?
                new ObjectParameter("valueToConvert", valueToConvert) :
                new ObjectParameter("valueToConvert", typeof(double));
    
            var dateToCompareParameter = dateToCompare.HasValue ?
                new ObjectParameter("DateToCompare", dateToCompare) :
                new ObjectParameter("DateToCompare", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("gblSpcCurrencyConverter", resultCode, resultMessage, exrIDParameter, valueToConvertParameter, dateToCompareParameter, cONVERTEDVALUE);
        }
    
        public virtual int gblSpcGetgblListOrganization(string parParametro)
        {
            var parParametroParameter = parParametro != null ?
                new ObjectParameter("parParametro", parParametro) :
                new ObjectParameter("parParametro", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("gblSpcGetgblListOrganization", parParametroParameter);
        }
    
        public virtual int gblSpcGetgblParameterValue(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> parameterType, string parameterValue)
        {
            var parameterTypeParameter = parameterType.HasValue ?
                new ObjectParameter("parameterType", parameterType) :
                new ObjectParameter("parameterType", typeof(int));
    
            var parameterValueParameter = parameterValue != null ?
                new ObjectParameter("parameterValue", parameterValue) :
                new ObjectParameter("parameterValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("gblSpcGetgblParameterValue", resultCode, resultMessage, parameterTypeParameter, parameterValueParameter);
        }
    
        public virtual ObjectResult<gblSpcGetSomeStatus_Result> gblSpcGetSomeStatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<gblSpcGetSomeStatus_Result>("gblSpcGetSomeStatus");
        }
    
        public virtual int gblSpcReadgblParameterValue(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> parameterType, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var parameterTypeParameter = parameterType.HasValue ?
                new ObjectParameter("parameterType", parameterType) :
                new ObjectParameter("parameterType", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("gblSpcReadgblParameterValue", resultCode, resultMessage, parameterTypeParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> gblSpcSearchDocument(ObjectParameter resultCode, ObjectParameter resultMessage, string txtSearch)
        {
            var txtSearchParameter = txtSearch != null ?
                new ObjectParameter("txtSearch", txtSearch) :
                new ObjectParameter("txtSearch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("gblSpcSearchDocument", resultCode, resultMessage, txtSearchParameter);
        }
    
        public virtual int GenerarCertificado(Nullable<int> idusr, Nullable<int> idIncidente, Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta, string numeroDocumento, string descripcion)
        {
            var idusrParameter = idusr.HasValue ?
                new ObjectParameter("idusr", idusr) :
                new ObjectParameter("idusr", typeof(int));
    
            var idIncidenteParameter = idIncidente.HasValue ?
                new ObjectParameter("idIncidente", idIncidente) :
                new ObjectParameter("idIncidente", typeof(int));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(System.DateTime));
    
            var numeroDocumentoParameter = numeroDocumento != null ?
                new ObjectParameter("NumeroDocumento", numeroDocumento) :
                new ObjectParameter("NumeroDocumento", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GenerarCertificado", idusrParameter, idIncidenteParameter, desdeParameter, hastaParameter, numeroDocumentoParameter, descripcionParameter);
        }
    
        public virtual ObjectResult<GetAllDocsAgregados_Result> GetAllDocsAgregados(string rlrRFBCode, Nullable<bool> isReport, Nullable<bool> activo)
        {
            var rlrRFBCodeParameter = rlrRFBCode != null ?
                new ObjectParameter("rlrRFBCode", rlrRFBCode) :
                new ObjectParameter("rlrRFBCode", typeof(string));
    
            var isReportParameter = isReport.HasValue ?
                new ObjectParameter("isReport", isReport) :
                new ObjectParameter("isReport", typeof(bool));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllDocsAgregados_Result>("GetAllDocsAgregados", rlrRFBCodeParameter, isReportParameter, activoParameter);
        }
    
        public virtual ObjectResult<GetAllDocsOfertar_Result> GetAllDocsOfertar(Nullable<int> rbrID, Nullable<int> rbrRequisiteType, Nullable<int> rbrRFBCode)
        {
            var rbrIDParameter = rbrID.HasValue ?
                new ObjectParameter("rbrID", rbrID) :
                new ObjectParameter("rbrID", typeof(int));
    
            var rbrRequisiteTypeParameter = rbrRequisiteType.HasValue ?
                new ObjectParameter("rbrRequisiteType", rbrRequisiteType) :
                new ObjectParameter("rbrRequisiteType", typeof(int));
    
            var rbrRFBCodeParameter = rbrRFBCode.HasValue ?
                new ObjectParameter("rbrRFBCode", rbrRFBCode) :
                new ObjectParameter("rbrRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllDocsOfertar_Result>("GetAllDocsOfertar", rbrIDParameter, rbrRequisiteTypeParameter, rbrRFBCodeParameter);
        }
    
        public virtual ObjectResult<GetAllDocsOfertarConAdjuntos_Result> GetAllDocsOfertarConAdjuntos(Nullable<int> rbrID, Nullable<int> rbrRFBCode, Nullable<int> rbrRequisiteType, Nullable<int> documentType, Nullable<int> documentSubType)
        {
            var rbrIDParameter = rbrID.HasValue ?
                new ObjectParameter("rbrID", rbrID) :
                new ObjectParameter("rbrID", typeof(int));
    
            var rbrRFBCodeParameter = rbrRFBCode.HasValue ?
                new ObjectParameter("rbrRFBCode", rbrRFBCode) :
                new ObjectParameter("rbrRFBCode", typeof(int));
    
            var rbrRequisiteTypeParameter = rbrRequisiteType.HasValue ?
                new ObjectParameter("rbrRequisiteType", rbrRequisiteType) :
                new ObjectParameter("rbrRequisiteType", typeof(int));
    
            var documentTypeParameter = documentType.HasValue ?
                new ObjectParameter("DocumentType", documentType) :
                new ObjectParameter("DocumentType", typeof(int));
    
            var documentSubTypeParameter = documentSubType.HasValue ?
                new ObjectParameter("DocumentSubType", documentSubType) :
                new ObjectParameter("DocumentSubType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllDocsOfertarConAdjuntos_Result>("GetAllDocsOfertarConAdjuntos", rbrIDParameter, rbrRFBCodeParameter, rbrRequisiteTypeParameter, documentTypeParameter, documentSubTypeParameter);
        }
    
        public virtual ObjectResult<GetAllDocsSolicitados_Result> GetAllDocsSolicitados(string rlrRFBCode)
        {
            var rlrRFBCodeParameter = rlrRFBCode != null ?
                new ObjectParameter("rlrRFBCode", rlrRFBCode) :
                new ObjectParameter("rlrRFBCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllDocsSolicitados_Result>("GetAllDocsSolicitados", rlrRFBCodeParameter);
        }
    
        public virtual ObjectResult<GetbuyerSelectList_Result> GetbuyerSelectList(Nullable<int> rFBCode)
        {
            var rFBCodeParameter = rFBCode.HasValue ?
                new ObjectParameter("RFBCode", rFBCode) :
                new ObjectParameter("RFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetbuyerSelectList_Result>("GetbuyerSelectList", rFBCodeParameter);
        }
    
        public virtual ObjectResult<GetbuyerSelectListProvided_Result> GetbuyerSelectListProvided(Nullable<int> rbhCode, Nullable<int> bidID, Nullable<int> orgCode)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            var bidIDParameter = bidID.HasValue ?
                new ObjectParameter("bidID", bidID) :
                new ObjectParameter("bidID", typeof(int));
    
            var orgCodeParameter = orgCode.HasValue ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetbuyerSelectListProvided_Result>("GetbuyerSelectListProvided", rbhCodeParameter, bidIDParameter, orgCodeParameter);
        }
    
        public virtual ObjectResult<GetCriteriaSelectList_Result> GetCriteriaSelectList(Nullable<int> rFBCode)
        {
            var rFBCodeParameter = rFBCode.HasValue ?
                new ObjectParameter("RFBCode", rFBCode) :
                new ObjectParameter("RFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCriteriaSelectList_Result>("GetCriteriaSelectList", rFBCodeParameter);
        }
    
        public virtual ObjectResult<GetCriteriaSelectListII_Result> GetCriteriaSelectListII(Nullable<int> bidID, Nullable<int> rFBCode, Nullable<int> orgCode, Nullable<int> usrCode)
        {
            var bidIDParameter = bidID.HasValue ?
                new ObjectParameter("bidID", bidID) :
                new ObjectParameter("bidID", typeof(int));
    
            var rFBCodeParameter = rFBCode.HasValue ?
                new ObjectParameter("RFBCode", rFBCode) :
                new ObjectParameter("RFBCode", typeof(int));
    
            var orgCodeParameter = orgCode.HasValue ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(int));
    
            var usrCodeParameter = usrCode.HasValue ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCriteriaSelectListII_Result>("GetCriteriaSelectListII", bidIDParameter, rFBCodeParameter, orgCodeParameter, usrCodeParameter);
        }
    
        public virtual ObjectResult<getUserProcessPending_Result> getUserProcessPending(ObjectParameter resultCode, ObjectParameter resultMessage, string rfbCode, string usrCode)
        {
            var rfbCodeParameter = rfbCode != null ?
                new ObjectParameter("rfbCode", rfbCode) :
                new ObjectParameter("rfbCode", typeof(string));
    
            var usrCodeParameter = usrCode != null ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getUserProcessPending_Result>("getUserProcessPending", resultCode, resultMessage, rfbCodeParameter, usrCodeParameter);
        }
    
        public virtual int GuardaLogEncriptacion(Nullable<int> id1, Nullable<int> id2, Nullable<int> id3, Nullable<int> id4, string valor1Crypt, string valor2Crypt, string valor3Crypt, Nullable<double> valor1, Nullable<double> valor2, Nullable<double> valor3, string nombreUsuario, string correo, string modulo, string observacion)
        {
            var id1Parameter = id1.HasValue ?
                new ObjectParameter("id1", id1) :
                new ObjectParameter("id1", typeof(int));
    
            var id2Parameter = id2.HasValue ?
                new ObjectParameter("id2", id2) :
                new ObjectParameter("id2", typeof(int));
    
            var id3Parameter = id3.HasValue ?
                new ObjectParameter("id3", id3) :
                new ObjectParameter("id3", typeof(int));
    
            var id4Parameter = id4.HasValue ?
                new ObjectParameter("id4", id4) :
                new ObjectParameter("id4", typeof(int));
    
            var valor1CryptParameter = valor1Crypt != null ?
                new ObjectParameter("Valor1Crypt", valor1Crypt) :
                new ObjectParameter("Valor1Crypt", typeof(string));
    
            var valor2CryptParameter = valor2Crypt != null ?
                new ObjectParameter("Valor2Crypt", valor2Crypt) :
                new ObjectParameter("Valor2Crypt", typeof(string));
    
            var valor3CryptParameter = valor3Crypt != null ?
                new ObjectParameter("Valor3Crypt", valor3Crypt) :
                new ObjectParameter("Valor3Crypt", typeof(string));
    
            var valor1Parameter = valor1.HasValue ?
                new ObjectParameter("Valor1", valor1) :
                new ObjectParameter("Valor1", typeof(double));
    
            var valor2Parameter = valor2.HasValue ?
                new ObjectParameter("Valor2", valor2) :
                new ObjectParameter("Valor2", typeof(double));
    
            var valor3Parameter = valor3.HasValue ?
                new ObjectParameter("Valor3", valor3) :
                new ObjectParameter("Valor3", typeof(double));
    
            var nombreUsuarioParameter = nombreUsuario != null ?
                new ObjectParameter("NombreUsuario", nombreUsuario) :
                new ObjectParameter("NombreUsuario", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var moduloParameter = modulo != null ?
                new ObjectParameter("Modulo", modulo) :
                new ObjectParameter("Modulo", typeof(string));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GuardaLogEncriptacion", id1Parameter, id2Parameter, id3Parameter, id4Parameter, valor1CryptParameter, valor2CryptParameter, valor3CryptParameter, valor1Parameter, valor2Parameter, valor3Parameter, nombreUsuarioParameter, correoParameter, moduloParameter, observacionParameter);
        }
    
        public virtual int GuardaLogPaso2(Nullable<int> porID, Nullable<int> usrCode, Nullable<int> orgCode, string antes, string despues)
        {
            var porIDParameter = porID.HasValue ?
                new ObjectParameter("porID", porID) :
                new ObjectParameter("porID", typeof(int));
    
            var usrCodeParameter = usrCode.HasValue ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(int));
    
            var orgCodeParameter = orgCode.HasValue ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(int));
    
            var antesParameter = antes != null ?
                new ObjectParameter("Antes", antes) :
                new ObjectParameter("Antes", typeof(string));
    
            var despuesParameter = despues != null ?
                new ObjectParameter("Despues", despues) :
                new ObjectParameter("Despues", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GuardaLogPaso2", porIDParameter, usrCodeParameter, orgCodeParameter, antesParameter, despuesParameter);
        }
    
        public virtual int GuardarLogOportunidadesNegocio(Nullable<int> idUsuario, Nullable<int> idLicitacion, Nullable<int> accion, string ip, Nullable<int> orgCode)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            var idLicitacionParameter = idLicitacion.HasValue ?
                new ObjectParameter("IdLicitacion", idLicitacion) :
                new ObjectParameter("IdLicitacion", typeof(int));
    
            var accionParameter = accion.HasValue ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(int));
    
            var ipParameter = ip != null ?
                new ObjectParameter("Ip", ip) :
                new ObjectParameter("Ip", typeof(string));
    
            var orgCodeParameter = orgCode.HasValue ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GuardarLogOportunidadesNegocio", idUsuarioParameter, idLicitacionParameter, accionParameter, ipParameter, orgCodeParameter);
        }
    
        public virtual int IG_cargaIndicador()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IG_cargaIndicador");
        }
    
        public virtual ObjectResult<string> IG_ExtraerAnhoIndicadores(ObjectParameter resultCode, ObjectParameter resultMessage)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("IG_ExtraerAnhoIndicadores", resultCode, resultMessage);
        }
    
        public virtual ObjectResult<IG_ExtraerIndicadorPorTipo_Result> IG_ExtraerIndicadorPorTipo(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> pTipoIndicador, string pAnhoIndicador)
        {
            var pTipoIndicadorParameter = pTipoIndicador.HasValue ?
                new ObjectParameter("pTipoIndicador", pTipoIndicador) :
                new ObjectParameter("pTipoIndicador", typeof(int));
    
            var pAnhoIndicadorParameter = pAnhoIndicador != null ?
                new ObjectParameter("pAnhoIndicador", pAnhoIndicador) :
                new ObjectParameter("pAnhoIndicador", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IG_ExtraerIndicadorPorTipo_Result>("IG_ExtraerIndicadorPorTipo", resultCode, resultMessage, pTipoIndicadorParameter, pAnhoIndicadorParameter);
        }
    
        public virtual ObjectResult<IG_ExtraerResultadoIndicadorPorTipo_Result> IG_ExtraerResultadoIndicadorPorTipo(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> pTipoIndicador, string pAnhoIndicador, string pCodigoEmpresa)
        {
            var pTipoIndicadorParameter = pTipoIndicador.HasValue ?
                new ObjectParameter("pTipoIndicador", pTipoIndicador) :
                new ObjectParameter("pTipoIndicador", typeof(int));
    
            var pAnhoIndicadorParameter = pAnhoIndicador != null ?
                new ObjectParameter("pAnhoIndicador", pAnhoIndicador) :
                new ObjectParameter("pAnhoIndicador", typeof(string));
    
            var pCodigoEmpresaParameter = pCodigoEmpresa != null ?
                new ObjectParameter("pCodigoEmpresa", pCodigoEmpresa) :
                new ObjectParameter("pCodigoEmpresa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IG_ExtraerResultadoIndicadorPorTipo_Result>("IG_ExtraerResultadoIndicadorPorTipo", resultCode, resultMessage, pTipoIndicadorParameter, pAnhoIndicadorParameter, pCodigoEmpresaParameter);
        }
    
        public virtual int IndexarLicitaciones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IndexarLicitaciones");
        }
    
        public virtual int IndexarLicitacionesAgregarEnCola(Nullable<int> idLicitacion)
        {
            var idLicitacionParameter = idLicitacion.HasValue ?
                new ObjectParameter("idLicitacion", idLicitacion) :
                new ObjectParameter("idLicitacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IndexarLicitacionesAgregarEnCola", idLicitacionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> IndexarLicitacionesServicio()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("IndexarLicitacionesServicio");
        }
    
        public virtual int IndexarLicitacionesServicioMarcarProcesado()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IndexarLicitacionesServicioMarcarProcesado");
        }
    
        public virtual int IndicadoresLicitacion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IndicadoresLicitacion");
        }
    
        public virtual int INGCM_GC_cancelarOCParaReadjudicacion(Nullable<int> porID)
        {
            var porIDParameter = porID.HasValue ?
                new ObjectParameter("porID", porID) :
                new ObjectParameter("porID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INGCM_GC_cancelarOCParaReadjudicacion", porIDParameter);
        }
    
        public virtual int INGCM_GC_ComprobanteOferta_Ins000(Nullable<int> idGranCompra, Nullable<int> idProveedor)
        {
            var idGranCompraParameter = idGranCompra.HasValue ?
                new ObjectParameter("idGranCompra", idGranCompra) :
                new ObjectParameter("idGranCompra", typeof(int));
    
            var idProveedorParameter = idProveedor.HasValue ?
                new ObjectParameter("idProveedor", idProveedor) :
                new ObjectParameter("idProveedor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INGCM_GC_ComprobanteOferta_Ins000", idGranCompraParameter, idProveedorParameter);
        }
    
        public virtual int INGCM_GC_prcSpObtenerOCReadjudicacion(string porCodes)
        {
            var porCodesParameter = porCodes != null ?
                new ObjectParameter("porCodes", porCodes) :
                new ObjectParameter("porCodes", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INGCM_GC_prcSpObtenerOCReadjudicacion", porCodesParameter);
        }
    
        public virtual int INGCM_GC_prcSpObtenerOCReadjudicacionSinFiltro(string porCodes)
        {
            var porCodesParameter = porCodes != null ?
                new ObjectParameter("porCodes", porCodes) :
                new ObjectParameter("porCodes", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INGCM_GC_prcSpObtenerOCReadjudicacionSinFiltro", porCodesParameter);
        }
    
        public virtual int IngresaJustificacionPaso2(Nullable<int> porID, Nullable<int> usrCode, Nullable<int> unidad, string justificacion, Nullable<int> activo)
        {
            var porIDParameter = porID.HasValue ?
                new ObjectParameter("porID", porID) :
                new ObjectParameter("porID", typeof(int));
    
            var usrCodeParameter = usrCode.HasValue ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(int));
    
            var unidadParameter = unidad.HasValue ?
                new ObjectParameter("Unidad", unidad) :
                new ObjectParameter("Unidad", typeof(int));
    
            var justificacionParameter = justificacion != null ?
                new ObjectParameter("Justificacion", justificacion) :
                new ObjectParameter("Justificacion", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IngresaJustificacionPaso2", porIDParameter, usrCodeParameter, unidadParameter, justificacionParameter, activoParameter);
        }
    
        public virtual int IngresaOfertaEncriptada(Nullable<int> idUsuarioCreacion, Nullable<int> idOferta, Nullable<int> idLicitacion, Nullable<int> idEstado, string xmlText)
        {
            var idUsuarioCreacionParameter = idUsuarioCreacion.HasValue ?
                new ObjectParameter("IdUsuarioCreacion", idUsuarioCreacion) :
                new ObjectParameter("IdUsuarioCreacion", typeof(int));
    
            var idOfertaParameter = idOferta.HasValue ?
                new ObjectParameter("IdOferta", idOferta) :
                new ObjectParameter("IdOferta", typeof(int));
    
            var idLicitacionParameter = idLicitacion.HasValue ?
                new ObjectParameter("IdLicitacion", idLicitacion) :
                new ObjectParameter("IdLicitacion", typeof(int));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(int));
    
            var xmlTextParameter = xmlText != null ?
                new ObjectParameter("XmlText", xmlText) :
                new ObjectParameter("XmlText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IngresaOfertaEncriptada", idUsuarioCreacionParameter, idOfertaParameter, idLicitacionParameter, idEstadoParameter, xmlTextParameter);
        }
    
        public virtual int IngresaPrecioCaro(ObjectParameter idLog, Nullable<int> idProducto, Nullable<int> idConvenioMarco, string nombreProducto, string entCodeComprador, string entNameComprador, string usrCode, string usrName, string nombreConvenio, string idLicCM, string precioReportado, string proveedorInformado, string linkProveedorInformado, string emailComprador, string fonoComprador)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            var idConvenioMarcoParameter = idConvenioMarco.HasValue ?
                new ObjectParameter("IdConvenioMarco", idConvenioMarco) :
                new ObjectParameter("IdConvenioMarco", typeof(int));
    
            var nombreProductoParameter = nombreProducto != null ?
                new ObjectParameter("NombreProducto", nombreProducto) :
                new ObjectParameter("NombreProducto", typeof(string));
    
            var entCodeCompradorParameter = entCodeComprador != null ?
                new ObjectParameter("entCodeComprador", entCodeComprador) :
                new ObjectParameter("entCodeComprador", typeof(string));
    
            var entNameCompradorParameter = entNameComprador != null ?
                new ObjectParameter("entNameComprador", entNameComprador) :
                new ObjectParameter("entNameComprador", typeof(string));
    
            var usrCodeParameter = usrCode != null ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(string));
    
            var usrNameParameter = usrName != null ?
                new ObjectParameter("usrName", usrName) :
                new ObjectParameter("usrName", typeof(string));
    
            var nombreConvenioParameter = nombreConvenio != null ?
                new ObjectParameter("NombreConvenio", nombreConvenio) :
                new ObjectParameter("NombreConvenio", typeof(string));
    
            var idLicCMParameter = idLicCM != null ?
                new ObjectParameter("IdLicCM", idLicCM) :
                new ObjectParameter("IdLicCM", typeof(string));
    
            var precioReportadoParameter = precioReportado != null ?
                new ObjectParameter("PrecioReportado", precioReportado) :
                new ObjectParameter("PrecioReportado", typeof(string));
    
            var proveedorInformadoParameter = proveedorInformado != null ?
                new ObjectParameter("ProveedorInformado", proveedorInformado) :
                new ObjectParameter("ProveedorInformado", typeof(string));
    
            var linkProveedorInformadoParameter = linkProveedorInformado != null ?
                new ObjectParameter("LinkProveedorInformado", linkProveedorInformado) :
                new ObjectParameter("LinkProveedorInformado", typeof(string));
    
            var emailCompradorParameter = emailComprador != null ?
                new ObjectParameter("emailComprador", emailComprador) :
                new ObjectParameter("emailComprador", typeof(string));
    
            var fonoCompradorParameter = fonoComprador != null ?
                new ObjectParameter("FonoComprador", fonoComprador) :
                new ObjectParameter("FonoComprador", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IngresaPrecioCaro", idLog, idProductoParameter, idConvenioMarcoParameter, nombreProductoParameter, entCodeCompradorParameter, entNameCompradorParameter, usrCodeParameter, usrNameParameter, nombreConvenioParameter, idLicCMParameter, precioReportadoParameter, proveedorInformadoParameter, linkProveedorInformadoParameter, emailCompradorParameter, fonoCompradorParameter);
        }
    
        public virtual int IngresaPrecioCaroDetalle(Nullable<int> idPrecioCaro, string entCodeProveedor, string entNameProveedor, string observacion, string precio, string precioMenor, string tipoMoneda, string xMLFormulario)
        {
            var idPrecioCaroParameter = idPrecioCaro.HasValue ?
                new ObjectParameter("IdPrecioCaro", idPrecioCaro) :
                new ObjectParameter("IdPrecioCaro", typeof(int));
    
            var entCodeProveedorParameter = entCodeProveedor != null ?
                new ObjectParameter("entCodeProveedor", entCodeProveedor) :
                new ObjectParameter("entCodeProveedor", typeof(string));
    
            var entNameProveedorParameter = entNameProveedor != null ?
                new ObjectParameter("entNameProveedor", entNameProveedor) :
                new ObjectParameter("entNameProveedor", typeof(string));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var precioParameter = precio != null ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(string));
    
            var precioMenorParameter = precioMenor != null ?
                new ObjectParameter("PrecioMenor", precioMenor) :
                new ObjectParameter("PrecioMenor", typeof(string));
    
            var tipoMonedaParameter = tipoMoneda != null ?
                new ObjectParameter("TipoMoneda", tipoMoneda) :
                new ObjectParameter("TipoMoneda", typeof(string));
    
            var xMLFormularioParameter = xMLFormulario != null ?
                new ObjectParameter("XMLFormulario", xMLFormulario) :
                new ObjectParameter("XMLFormulario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IngresaPrecioCaroDetalle", idPrecioCaroParameter, entCodeProveedorParameter, entNameProveedorParameter, observacionParameter, precioParameter, precioMenorParameter, tipoMonedaParameter, xMLFormularioParameter);
        }
    
        public virtual int IngresarLogLCPublicadas(string entCode)
        {
            var entCodeParameter = entCode != null ?
                new ObjectParameter("entCode", entCode) :
                new ObjectParameter("entCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IngresarLogLCPublicadas", entCodeParameter);
        }
    
        public virtual int insertaObraEnviada(string codigoExterno, string nombre, Nullable<System.DateTime> fechaAdjudicacion, Nullable<int> codigoEstado)
        {
            var codigoExternoParameter = codigoExterno != null ?
                new ObjectParameter("CodigoExterno", codigoExterno) :
                new ObjectParameter("CodigoExterno", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var fechaAdjudicacionParameter = fechaAdjudicacion.HasValue ?
                new ObjectParameter("FechaAdjudicacion", fechaAdjudicacion) :
                new ObjectParameter("FechaAdjudicacion", typeof(System.DateTime));
    
            var codigoEstadoParameter = codigoEstado.HasValue ?
                new ObjectParameter("CodigoEstado", codigoEstado) :
                new ObjectParameter("CodigoEstado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertaObraEnviada", codigoExternoParameter, nombreParameter, fechaAdjudicacionParameter, codigoEstadoParameter);
        }
    
        public virtual int InsertarLogProductoLCCMII(string logCodigoUsuario, string logUnidad, string logCodigoUNSPSC, Nullable<System.DateTime> logFecha, Nullable<int> logOpcionBusqueda, Nullable<int> logEstado)
        {
            var logCodigoUsuarioParameter = logCodigoUsuario != null ?
                new ObjectParameter("logCodigoUsuario", logCodigoUsuario) :
                new ObjectParameter("logCodigoUsuario", typeof(string));
    
            var logUnidadParameter = logUnidad != null ?
                new ObjectParameter("logUnidad", logUnidad) :
                new ObjectParameter("logUnidad", typeof(string));
    
            var logCodigoUNSPSCParameter = logCodigoUNSPSC != null ?
                new ObjectParameter("logCodigoUNSPSC", logCodigoUNSPSC) :
                new ObjectParameter("logCodigoUNSPSC", typeof(string));
    
            var logFechaParameter = logFecha.HasValue ?
                new ObjectParameter("LogFecha", logFecha) :
                new ObjectParameter("LogFecha", typeof(System.DateTime));
    
            var logOpcionBusquedaParameter = logOpcionBusqueda.HasValue ?
                new ObjectParameter("LogOpcionBusqueda", logOpcionBusqueda) :
                new ObjectParameter("LogOpcionBusqueda", typeof(int));
    
            var logEstadoParameter = logEstado.HasValue ?
                new ObjectParameter("LogEstado", logEstado) :
                new ObjectParameter("LogEstado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarLogProductoLCCMII", logCodigoUsuarioParameter, logUnidadParameter, logCodigoUNSPSCParameter, logFechaParameter, logOpcionBusquedaParameter, logEstadoParameter);
        }
    
        public virtual int InsertarSeguimientoLicitacion(ObjectParameter resultCode, ObjectParameter resultMessage, string usrCode, Nullable<int> rbhCode, string rbhExternalCode, Nullable<int> tipo)
        {
            var usrCodeParameter = usrCode != null ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(string));
    
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            var rbhExternalCodeParameter = rbhExternalCode != null ?
                new ObjectParameter("rbhExternalCode", rbhExternalCode) :
                new ObjectParameter("rbhExternalCode", typeof(string));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarSeguimientoLicitacion", resultCode, resultMessage, usrCodeParameter, rbhCodeParameter, rbhExternalCodeParameter, tipoParameter);
        }
    
        public virtual int InsertarTablaPrcPoItem(Nullable<int> poiOrder, Nullable<double> poiQuantity, string poiDescription, string poiName, Nullable<double> poiNetPrice, Nullable<double> poiTotalDiscounts, Nullable<double> poiTotalTaxes, Nullable<double> poiTotalAmount, string poiCurrency)
        {
            var poiOrderParameter = poiOrder.HasValue ?
                new ObjectParameter("poiOrder", poiOrder) :
                new ObjectParameter("poiOrder", typeof(int));
    
            var poiQuantityParameter = poiQuantity.HasValue ?
                new ObjectParameter("poiQuantity", poiQuantity) :
                new ObjectParameter("poiQuantity", typeof(double));
    
            var poiDescriptionParameter = poiDescription != null ?
                new ObjectParameter("poiDescription", poiDescription) :
                new ObjectParameter("poiDescription", typeof(string));
    
            var poiNameParameter = poiName != null ?
                new ObjectParameter("poiName", poiName) :
                new ObjectParameter("poiName", typeof(string));
    
            var poiNetPriceParameter = poiNetPrice.HasValue ?
                new ObjectParameter("poiNetPrice", poiNetPrice) :
                new ObjectParameter("poiNetPrice", typeof(double));
    
            var poiTotalDiscountsParameter = poiTotalDiscounts.HasValue ?
                new ObjectParameter("poiTotalDiscounts", poiTotalDiscounts) :
                new ObjectParameter("poiTotalDiscounts", typeof(double));
    
            var poiTotalTaxesParameter = poiTotalTaxes.HasValue ?
                new ObjectParameter("poiTotalTaxes", poiTotalTaxes) :
                new ObjectParameter("poiTotalTaxes", typeof(double));
    
            var poiTotalAmountParameter = poiTotalAmount.HasValue ?
                new ObjectParameter("poiTotalAmount", poiTotalAmount) :
                new ObjectParameter("poiTotalAmount", typeof(double));
    
            var poiCurrencyParameter = poiCurrency != null ?
                new ObjectParameter("poiCurrency", poiCurrency) :
                new ObjectParameter("poiCurrency", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarTablaPrcPoItem", poiOrderParameter, poiQuantityParameter, poiDescriptionParameter, poiNameParameter, poiNetPriceParameter, poiTotalDiscountsParameter, poiTotalTaxesParameter, poiTotalAmountParameter, poiCurrencyParameter);
        }
    
        public virtual int InsertaTokenCGR(string externalCode, string token, ObjectParameter resultCode, ObjectParameter resultMessage)
        {
            var externalCodeParameter = externalCode != null ?
                new ObjectParameter("ExternalCode", externalCode) :
                new ObjectParameter("ExternalCode", typeof(string));
    
            var tokenParameter = token != null ?
                new ObjectParameter("Token", token) :
                new ObjectParameter("Token", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertaTokenCGR", externalCodeParameter, tokenParameter, resultCode, resultMessage);
        }
    
        public virtual ObjectResult<LeerOferta_Result> LeerOferta(Nullable<int> bidBID, Nullable<int> bidRFBCode)
        {
            var bidBIDParameter = bidBID.HasValue ?
                new ObjectParameter("bidBID", bidBID) :
                new ObjectParameter("bidBID", typeof(int));
    
            var bidRFBCodeParameter = bidRFBCode.HasValue ?
                new ObjectParameter("bidRFBCode", bidRFBCode) :
                new ObjectParameter("bidRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LeerOferta_Result>("LeerOferta", bidBIDParameter, bidRFBCodeParameter);
        }
    
        public virtual ObjectResult<LeerOferta_Item_Result> LeerOferta_Item(Nullable<int> bidBID)
        {
            var bidBIDParameter = bidBID.HasValue ?
                new ObjectParameter("bidBID", bidBID) :
                new ObjectParameter("bidBID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LeerOferta_Item_Result>("LeerOferta_Item", bidBIDParameter);
        }
    
        public virtual ObjectResult<LeerPlazosOptativoTomaRazonContratacionServicio_Result> LeerPlazosOptativoTomaRazonContratacionServicio(Nullable<int> rbdRFBCode)
        {
            var rbdRFBCodeParameter = rbdRFBCode.HasValue ?
                new ObjectParameter("rbdRFBCode", rbdRFBCode) :
                new ObjectParameter("rbdRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LeerPlazosOptativoTomaRazonContratacionServicio_Result>("LeerPlazosOptativoTomaRazonContratacionServicio", rbdRFBCodeParameter);
        }
    
        public virtual ObjectResult<LicitacionesPorEntTodas_Result> LicitacionesPorEntTodas(string entCode)
        {
            var entCodeParameter = entCode != null ?
                new ObjectParameter("entCode", entCode) :
                new ObjectParameter("entCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LicitacionesPorEntTodas_Result>("LicitacionesPorEntTodas", entCodeParameter);
        }
    
        public virtual ObjectResult<LicitacionesPorEntTop3_Result> LicitacionesPorEntTop3(string entCode)
        {
            var entCodeParameter = entCode != null ?
                new ObjectParameter("entCode", entCode) :
                new ObjectParameter("entCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LicitacionesPorEntTop3_Result>("LicitacionesPorEntTop3", entCodeParameter);
        }
    
        public virtual ObjectResult<LlenaCanastaProducto_Result> LlenaCanastaProducto()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LlenaCanastaProducto_Result>("LlenaCanastaProducto");
        }
    
        public virtual ObjectResult<LlenaInfoLicitaciones_Result> LlenaInfoLicitaciones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LlenaInfoLicitaciones_Result>("LlenaInfoLicitaciones");
        }
    
        public virtual ObjectResult<MIGRACION_PMG_SGC_ObtenerEncabezadoLicitacion_Result> MIGRACION_PMG_SGC_ObtenerEncabezadoLicitacion(string externalCode)
        {
            var externalCodeParameter = externalCode != null ?
                new ObjectParameter("ExternalCode", externalCode) :
                new ObjectParameter("ExternalCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MIGRACION_PMG_SGC_ObtenerEncabezadoLicitacion_Result>("MIGRACION_PMG_SGC_ObtenerEncabezadoLicitacion", externalCodeParameter);
        }
    
        public virtual ObjectResult<MIGRACION_PMG_SGC_ObtenerEncabezadoOC_Result> MIGRACION_PMG_SGC_ObtenerEncabezadoOC(string externalcode)
        {
            var externalcodeParameter = externalcode != null ?
                new ObjectParameter("externalcode", externalcode) :
                new ObjectParameter("externalcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MIGRACION_PMG_SGC_ObtenerEncabezadoOC_Result>("MIGRACION_PMG_SGC_ObtenerEncabezadoOC", externalcodeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Migracion_PMG_SGC_ObtenerInformacionItemLicitacionPorProveedor(Nullable<int> codigolicitacion, Nullable<int> codigoorganizacion, Nullable<int> codigooferta)
        {
            var codigolicitacionParameter = codigolicitacion.HasValue ?
                new ObjectParameter("codigolicitacion", codigolicitacion) :
                new ObjectParameter("codigolicitacion", typeof(int));
    
            var codigoorganizacionParameter = codigoorganizacion.HasValue ?
                new ObjectParameter("codigoorganizacion", codigoorganizacion) :
                new ObjectParameter("codigoorganizacion", typeof(int));
    
            var codigoofertaParameter = codigooferta.HasValue ?
                new ObjectParameter("codigooferta", codigooferta) :
                new ObjectParameter("codigooferta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Migracion_PMG_SGC_ObtenerInformacionItemLicitacionPorProveedor", codigolicitacionParameter, codigoorganizacionParameter, codigoofertaParameter);
        }
    
        public virtual ObjectResult<string> MIGRACION_PMG_validaOrigenDocumento(string numeroDocumento, Nullable<int> tipoValidacion)
        {
            var numeroDocumentoParameter = numeroDocumento != null ?
                new ObjectParameter("numeroDocumento", numeroDocumento) :
                new ObjectParameter("numeroDocumento", typeof(string));
    
            var tipoValidacionParameter = tipoValidacion.HasValue ?
                new ObjectParameter("tipoValidacion", tipoValidacion) :
                new ObjectParameter("tipoValidacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("MIGRACION_PMG_validaOrigenDocumento", numeroDocumentoParameter, tipoValidacionParameter);
        }
    
        public virtual int ModificaDetalleOfertaEncriptada(Nullable<int> bitID, Nullable<short> bitIsBidded, Nullable<double> bitQuantity, string bitCurrency, Nullable<double> bitUnitNetPrice, Nullable<double> bitHomologatedPrice, Nullable<double> bitUniqueCurrencyPrice, string bitSupplierComment, Nullable<short> bitIsSelected)
        {
            var bitIDParameter = bitID.HasValue ?
                new ObjectParameter("bitID", bitID) :
                new ObjectParameter("bitID", typeof(int));
    
            var bitIsBiddedParameter = bitIsBidded.HasValue ?
                new ObjectParameter("bitIsBidded", bitIsBidded) :
                new ObjectParameter("bitIsBidded", typeof(short));
    
            var bitQuantityParameter = bitQuantity.HasValue ?
                new ObjectParameter("bitQuantity", bitQuantity) :
                new ObjectParameter("bitQuantity", typeof(double));
    
            var bitCurrencyParameter = bitCurrency != null ?
                new ObjectParameter("bitCurrency", bitCurrency) :
                new ObjectParameter("bitCurrency", typeof(string));
    
            var bitUnitNetPriceParameter = bitUnitNetPrice.HasValue ?
                new ObjectParameter("bitUnitNetPrice", bitUnitNetPrice) :
                new ObjectParameter("bitUnitNetPrice", typeof(double));
    
            var bitHomologatedPriceParameter = bitHomologatedPrice.HasValue ?
                new ObjectParameter("bitHomologatedPrice", bitHomologatedPrice) :
                new ObjectParameter("bitHomologatedPrice", typeof(double));
    
            var bitUniqueCurrencyPriceParameter = bitUniqueCurrencyPrice.HasValue ?
                new ObjectParameter("bitUniqueCurrencyPrice", bitUniqueCurrencyPrice) :
                new ObjectParameter("bitUniqueCurrencyPrice", typeof(double));
    
            var bitSupplierCommentParameter = bitSupplierComment != null ?
                new ObjectParameter("bitSupplierComment", bitSupplierComment) :
                new ObjectParameter("bitSupplierComment", typeof(string));
    
            var bitIsSelectedParameter = bitIsSelected.HasValue ?
                new ObjectParameter("bitIsSelected", bitIsSelected) :
                new ObjectParameter("bitIsSelected", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModificaDetalleOfertaEncriptada", bitIDParameter, bitIsBiddedParameter, bitQuantityParameter, bitCurrencyParameter, bitUnitNetPriceParameter, bitHomologatedPriceParameter, bitUniqueCurrencyPriceParameter, bitSupplierCommentParameter, bitIsSelectedParameter);
        }
    
        public virtual int ModificaOfertaEncriptada(Nullable<int> bidID, string bidDescription, string bidName, Nullable<int> bidDocumentStatus, Nullable<int> bidTechnicalStatus, Nullable<int> bidEconomicStatus, Nullable<System.DateTime> bidEconomicIssueDate, Nullable<System.DateTime> bidTechnicalIssueDate)
        {
            var bidIDParameter = bidID.HasValue ?
                new ObjectParameter("bidID", bidID) :
                new ObjectParameter("bidID", typeof(int));
    
            var bidDescriptionParameter = bidDescription != null ?
                new ObjectParameter("bidDescription", bidDescription) :
                new ObjectParameter("bidDescription", typeof(string));
    
            var bidNameParameter = bidName != null ?
                new ObjectParameter("bidName", bidName) :
                new ObjectParameter("bidName", typeof(string));
    
            var bidDocumentStatusParameter = bidDocumentStatus.HasValue ?
                new ObjectParameter("bidDocumentStatus", bidDocumentStatus) :
                new ObjectParameter("bidDocumentStatus", typeof(int));
    
            var bidTechnicalStatusParameter = bidTechnicalStatus.HasValue ?
                new ObjectParameter("bidTechnicalStatus", bidTechnicalStatus) :
                new ObjectParameter("bidTechnicalStatus", typeof(int));
    
            var bidEconomicStatusParameter = bidEconomicStatus.HasValue ?
                new ObjectParameter("bidEconomicStatus", bidEconomicStatus) :
                new ObjectParameter("bidEconomicStatus", typeof(int));
    
            var bidEconomicIssueDateParameter = bidEconomicIssueDate.HasValue ?
                new ObjectParameter("bidEconomicIssueDate", bidEconomicIssueDate) :
                new ObjectParameter("bidEconomicIssueDate", typeof(System.DateTime));
    
            var bidTechnicalIssueDateParameter = bidTechnicalIssueDate.HasValue ?
                new ObjectParameter("bidTechnicalIssueDate", bidTechnicalIssueDate) :
                new ObjectParameter("bidTechnicalIssueDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModificaOfertaEncriptada", bidIDParameter, bidDescriptionParameter, bidNameParameter, bidDocumentStatusParameter, bidTechnicalStatusParameter, bidEconomicStatusParameter, bidEconomicIssueDateParameter, bidTechnicalIssueDateParameter);
        }
    
        public virtual ObjectResult<MPM_ObtenerUltimasLicitacionesPublicadas_Result> MPM_ObtenerUltimasLicitacionesPublicadas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MPM_ObtenerUltimasLicitacionesPublicadas_Result>("MPM_ObtenerUltimasLicitacionesPublicadas");
        }
    
        public virtual int NBAExisteFichaLicitacion(ObjectParameter resultCode, Nullable<int> rbhCode)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NBAExisteFichaLicitacion", resultCode, rbhCodeParameter);
        }
    
        public virtual ObjectResult<ObtenerCrossTablaPrcBIDQuoteConPrcRFBHeader_Result> ObtenerCrossTablaPrcBIDQuoteConPrcRFBHeader(string bidID)
        {
            var bidIDParameter = bidID != null ?
                new ObjectParameter("bidID", bidID) :
                new ObjectParameter("bidID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerCrossTablaPrcBIDQuoteConPrcRFBHeader_Result>("ObtenerCrossTablaPrcBIDQuoteConPrcRFBHeader", bidIDParameter);
        }
    
        public virtual ObjectResult<ObtenerDetalleReportePC_Result> ObtenerDetalleReportePC(Nullable<int> idPrecioCaro)
        {
            var idPrecioCaroParameter = idPrecioCaro.HasValue ?
                new ObjectParameter("idPrecioCaro", idPrecioCaro) :
                new ObjectParameter("idPrecioCaro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerDetalleReportePC_Result>("ObtenerDetalleReportePC", idPrecioCaroParameter);
        }
    
        public virtual ObjectResult<string> ObtenerEstadoLicitacionAdjudicada(string codigo)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ObtenerEstadoLicitacionAdjudicada", codigoParameter);
        }
    
        public virtual int ObtenerIdsGrandesCompras()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ObtenerIdsGrandesCompras");
        }
    
        public virtual ObjectResult<Nullable<int>> ObtenerIdsLicitaciones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ObtenerIdsLicitaciones");
        }
    
        public virtual ObjectResult<Nullable<decimal>> ObtenerImpuestoEspecifico(Nullable<int> porID)
        {
            var porIDParameter = porID.HasValue ?
                new ObjectParameter("porID", porID) :
                new ObjectParameter("porID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("ObtenerImpuestoEspecifico", porIDParameter);
        }
    
        public virtual ObjectResult<ObtenerInformacionGeoCgr_Result> ObtenerInformacionGeoCgr(string licitacion, string llave)
        {
            var licitacionParameter = licitacion != null ?
                new ObjectParameter("Licitacion", licitacion) :
                new ObjectParameter("Licitacion", typeof(string));
    
            var llaveParameter = llave != null ?
                new ObjectParameter("Llave", llave) :
                new ObjectParameter("Llave", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerInformacionGeoCgr_Result>("ObtenerInformacionGeoCgr", licitacionParameter, llaveParameter);
        }
    
        public virtual ObjectResult<ObtenerInformacionOC_Result> ObtenerInformacionOC(Nullable<int> porId, Nullable<int> porIdGranCompra)
        {
            var porIdParameter = porId.HasValue ?
                new ObjectParameter("porId", porId) :
                new ObjectParameter("porId", typeof(int));
    
            var porIdGranCompraParameter = porIdGranCompra.HasValue ?
                new ObjectParameter("porIdGranCompra", porIdGranCompra) :
                new ObjectParameter("porIdGranCompra", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerInformacionOC_Result>("ObtenerInformacionOC", porIdParameter, porIdGranCompraParameter);
        }
    
        public virtual ObjectResult<ObtenerLicitacionesObrasAdjudicadasPendientes_Result> ObtenerLicitacionesObrasAdjudicadasPendientes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerLicitacionesObrasAdjudicadasPendientes_Result>("ObtenerLicitacionesObrasAdjudicadasPendientes");
        }
    
        public virtual ObjectResult<ObtenerLicitacionesSugeridas_Result> ObtenerLicitacionesSugeridas(string usrCode)
        {
            var usrCodeParameter = usrCode != null ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerLicitacionesSugeridas_Result>("ObtenerLicitacionesSugeridas", usrCodeParameter);
        }
    
        public virtual ObjectResult<ObtenerLicitacionesSugeridasDS_Result> ObtenerLicitacionesSugeridasDS(string usrCode)
        {
            var usrCodeParameter = usrCode != null ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerLicitacionesSugeridasDS_Result>("ObtenerLicitacionesSugeridasDS", usrCodeParameter);
        }
    
        public virtual ObjectResult<ObtenerLlaveQA_Result> ObtenerLlaveQA(Nullable<int> idOfertaEncriptada)
        {
            var idOfertaEncriptadaParameter = idOfertaEncriptada.HasValue ?
                new ObjectParameter("IdOfertaEncriptada", idOfertaEncriptada) :
                new ObjectParameter("IdOfertaEncriptada", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerLlaveQA_Result>("ObtenerLlaveQA", idOfertaEncriptadaParameter);
        }
    
        public virtual ObjectResult<ObtenerLlaveQAporLicitacion_Result> ObtenerLlaveQAporLicitacion(Nullable<int> idLC)
        {
            var idLCParameter = idLC.HasValue ?
                new ObjectParameter("idLC", idLC) :
                new ObjectParameter("idLC", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerLlaveQAporLicitacion_Result>("ObtenerLlaveQAporLicitacion", idLCParameter);
        }
    
        public virtual ObjectResult<string> ObtenerMailCompradorPAF(string rbhCodeExternal)
        {
            var rbhCodeExternalParameter = rbhCodeExternal != null ?
                new ObjectParameter("rbhCodeExternal", rbhCodeExternal) :
                new ObjectParameter("rbhCodeExternal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ObtenerMailCompradorPAF", rbhCodeExternalParameter);
        }
    
        public virtual ObjectResult<ObtenerOfertaEncriptada_Result> ObtenerOfertaEncriptada(Nullable<int> bidID)
        {
            var bidIDParameter = bidID.HasValue ?
                new ObjectParameter("bidID", bidID) :
                new ObjectParameter("bidID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerOfertaEncriptada_Result>("ObtenerOfertaEncriptada", bidIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ObtenerPoiHeaderCode(string idChileCompra)
        {
            var idChileCompraParameter = idChileCompra != null ?
                new ObjectParameter("idChileCompra", idChileCompra) :
                new ObjectParameter("idChileCompra", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ObtenerPoiHeaderCode", idChileCompraParameter);
        }
    
        public virtual int ObtenerPorIDPlanVuelo(Nullable<int> idPlan, ObjectParameter retorno)
        {
            var idPlanParameter = idPlan.HasValue ?
                new ObjectParameter("idPlan", idPlan) :
                new ObjectParameter("idPlan", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ObtenerPorIDPlanVuelo", idPlanParameter, retorno);
        }
    
        public virtual ObjectResult<Nullable<int>> ObtenerPorTaxCode(string idChileCompra)
        {
            var idChileCompraParameter = idChileCompra != null ?
                new ObjectParameter("idChileCompra", idChileCompra) :
                new ObjectParameter("idChileCompra", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ObtenerPorTaxCode", idChileCompraParameter);
        }
    
        public virtual ObjectResult<ObtenerPrcPOHeaderPorCode_Result> ObtenerPrcPOHeaderPorCode(string tablaPorCode)
        {
            var tablaPorCodeParameter = tablaPorCode != null ?
                new ObjectParameter("tablaPorCode", tablaPorCode) :
                new ObjectParameter("tablaPorCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerPrcPOHeaderPorCode_Result>("ObtenerPrcPOHeaderPorCode", tablaPorCodeParameter);
        }
    
        public virtual ObjectResult<ObtenerPrcPOItem_Result> ObtenerPrcPOItem(Nullable<int> poiHeaderCode)
        {
            var poiHeaderCodeParameter = poiHeaderCode.HasValue ?
                new ObjectParameter("poiHeaderCode", poiHeaderCode) :
                new ObjectParameter("poiHeaderCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerPrcPOItem_Result>("ObtenerPrcPOItem", poiHeaderCodeParameter);
        }
    
        public virtual ObjectResult<ObtenerTablas_Result> ObtenerTablas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerTablas_Result>("ObtenerTablas");
        }
    
        public virtual int ObtenerUltimoPrecioReportado(Nullable<int> idProducto, Nullable<int> idConvenioMarco, string usrCode, ObjectParameter ultimoPrecio)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            var idConvenioMarcoParameter = idConvenioMarco.HasValue ?
                new ObjectParameter("IdConvenioMarco", idConvenioMarco) :
                new ObjectParameter("IdConvenioMarco", typeof(int));
    
            var usrCodeParameter = usrCode != null ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ObtenerUltimoPrecioReportado", idProductoParameter, idConvenioMarcoParameter, usrCodeParameter, ultimoPrecio);
        }
    
        public virtual ObjectResult<ObtieneLicitacionesBase_Result> ObtieneLicitacionesBase(Nullable<int> anio, Nullable<int> mes)
        {
            var anioParameter = anio.HasValue ?
                new ObjectParameter("anio", anio) :
                new ObjectParameter("anio", typeof(int));
    
            var mesParameter = mes.HasValue ?
                new ObjectParameter("mes", mes) :
                new ObjectParameter("mes", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtieneLicitacionesBase_Result>("ObtieneLicitacionesBase", anioParameter, mesParameter);
        }
    
        public virtual ObjectResult<ObtieneLicitacionesSeguimiento_Result> ObtieneLicitacionesSeguimiento(string rbhOwnerOrganizationCode, string usrCode, Nullable<System.DateTime> serverDate)
        {
            var rbhOwnerOrganizationCodeParameter = rbhOwnerOrganizationCode != null ?
                new ObjectParameter("rbhOwnerOrganizationCode", rbhOwnerOrganizationCode) :
                new ObjectParameter("rbhOwnerOrganizationCode", typeof(string));
    
            var usrCodeParameter = usrCode != null ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(string));
    
            var serverDateParameter = serverDate.HasValue ?
                new ObjectParameter("ServerDate", serverDate) :
                new ObjectParameter("ServerDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtieneLicitacionesSeguimiento_Result>("ObtieneLicitacionesSeguimiento", rbhOwnerOrganizationCodeParameter, usrCodeParameter, serverDateParameter);
        }
    
        public virtual ObjectResult<ObtieneOCBase_Result> ObtieneOCBase(Nullable<int> anio, Nullable<int> mes)
        {
            var anioParameter = anio.HasValue ?
                new ObjectParameter("anio", anio) :
                new ObjectParameter("anio", typeof(int));
    
            var mesParameter = mes.HasValue ?
                new ObjectParameter("mes", mes) :
                new ObjectParameter("mes", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtieneOCBase_Result>("ObtieneOCBase", anioParameter, mesParameter);
        }
    
        public virtual int ObtieneOferta(Nullable<long> idOfertaEnc)
        {
            var idOfertaEncParameter = idOfertaEnc.HasValue ?
                new ObjectParameter("IdOfertaEnc", idOfertaEnc) :
                new ObjectParameter("IdOfertaEnc", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ObtieneOferta", idOfertaEncParameter);
        }
    
        public virtual int ObtieneOfertaPrueba(Nullable<long> idOfertaEnc)
        {
            var idOfertaEncParameter = idOfertaEnc.HasValue ?
                new ObjectParameter("IdOfertaEnc", idOfertaEnc) :
                new ObjectParameter("IdOfertaEnc", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ObtieneOfertaPrueba", idOfertaEncParameter);
        }
    
        public virtual int ObtieneOfertas(Nullable<long> idLC)
        {
            var idLCParameter = idLC.HasValue ?
                new ObjectParameter("IdLC", idLC) :
                new ObjectParameter("IdLC", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ObtieneOfertas", idLCParameter);
        }
    
        public virtual int ObtieneOfertasPrueba(Nullable<long> idLC)
        {
            var idLCParameter = idLC.HasValue ?
                new ObjectParameter("IdLC", idLC) :
                new ObjectParameter("IdLC", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ObtieneOfertasPrueba", idLCParameter);
        }
    
        public virtual ObjectResult<ObtieneTablaPrcRFBHeader_Result> ObtieneTablaPrcRFBHeader(string numeroLicitacion)
        {
            var numeroLicitacionParameter = numeroLicitacion != null ?
                new ObjectParameter("numeroLicitacion", numeroLicitacion) :
                new ObjectParameter("numeroLicitacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtieneTablaPrcRFBHeader_Result>("ObtieneTablaPrcRFBHeader", numeroLicitacionParameter);
        }
    
        public virtual ObjectResult<ObtieneUsuariosLicitaciones_Result> ObtieneUsuariosLicitaciones(Nullable<int> anio, Nullable<int> mes)
        {
            var anioParameter = anio.HasValue ?
                new ObjectParameter("anio", anio) :
                new ObjectParameter("anio", typeof(int));
    
            var mesParameter = mes.HasValue ?
                new ObjectParameter("mes", mes) :
                new ObjectParameter("mes", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtieneUsuariosLicitaciones_Result>("ObtieneUsuariosLicitaciones", anioParameter, mesParameter);
        }
    
        public virtual ObjectResult<ObtieneUsuariosOC_Result> ObtieneUsuariosOC(Nullable<int> anio, Nullable<int> mes)
        {
            var anioParameter = anio.HasValue ?
                new ObjectParameter("anio", anio) :
                new ObjectParameter("anio", typeof(int));
    
            var mesParameter = mes.HasValue ?
                new ObjectParameter("mes", mes) :
                new ObjectParameter("mes", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtieneUsuariosOC_Result>("ObtieneUsuariosOC", anioParameter, mesParameter);
        }
    
        public virtual int pa_TablaTamano(string orderby)
        {
            var orderbyParameter = orderby != null ?
                new ObjectParameter("orderby", orderby) :
                new ObjectParameter("orderby", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pa_TablaTamano", orderbyParameter);
        }
    
        public virtual int PDC_EliminarPlanPorId(Nullable<int> idPlan, string usrCode)
        {
            var idPlanParameter = idPlan.HasValue ?
                new ObjectParameter("idPlan", idPlan) :
                new ObjectParameter("idPlan", typeof(int));
    
            var usrCodeParameter = usrCode != null ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PDC_EliminarPlanPorId", idPlanParameter, usrCodeParameter);
        }
    
        public virtual int PDC_EliminarProductosPlan(Nullable<int> idPlan, Nullable<int> idProducto)
        {
            var idPlanParameter = idPlan.HasValue ?
                new ObjectParameter("idPlan", idPlan) :
                new ObjectParameter("idPlan", typeof(int));
    
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("idProducto", idProducto) :
                new ObjectParameter("idProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PDC_EliminarProductosPlan", idPlanParameter, idProductoParameter);
        }
    
        public virtual int PDC_FechaPlazoEditarPublicadoPDC()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PDC_FechaPlazoEditarPublicadoPDC");
        }
    
        public virtual ObjectResult<PDC_FechaPlazoTerminoPublicacionPDC_Result> PDC_FechaPlazoTerminoPublicacionPDC()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PDC_FechaPlazoTerminoPublicacionPDC_Result>("PDC_FechaPlazoTerminoPublicacionPDC");
        }
    
        public virtual ObjectResult<PDC_FechasPlazoPDC_Result> PDC_FechasPlazoPDC()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PDC_FechasPlazoPDC_Result>("PDC_FechasPlazoPDC");
        }
    
        public virtual int PDC_GuardarLogEtapa3(Nullable<int> idPlan, string usrCode, Nullable<int> estadoPlan)
        {
            var idPlanParameter = idPlan.HasValue ?
                new ObjectParameter("idPlan", idPlan) :
                new ObjectParameter("idPlan", typeof(int));
    
            var usrCodeParameter = usrCode != null ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(string));
    
            var estadoPlanParameter = estadoPlan.HasValue ?
                new ObjectParameter("EstadoPlan", estadoPlan) :
                new ObjectParameter("EstadoPlan", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PDC_GuardarLogEtapa3", idPlanParameter, usrCodeParameter, estadoPlanParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> PDC_GuardarPlanDescripcion(Nullable<int> idPlan, string descripcionPlan, string propositoPlan, string usrCode, Nullable<int> estadoPlan)
        {
            var idPlanParameter = idPlan.HasValue ?
                new ObjectParameter("idPlan", idPlan) :
                new ObjectParameter("idPlan", typeof(int));
    
            var descripcionPlanParameter = descripcionPlan != null ?
                new ObjectParameter("DescripcionPlan", descripcionPlan) :
                new ObjectParameter("DescripcionPlan", typeof(string));
    
            var propositoPlanParameter = propositoPlan != null ?
                new ObjectParameter("PropositoPlan", propositoPlan) :
                new ObjectParameter("PropositoPlan", typeof(string));
    
            var usrCodeParameter = usrCode != null ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(string));
    
            var estadoPlanParameter = estadoPlan.HasValue ?
                new ObjectParameter("EstadoPlan", estadoPlan) :
                new ObjectParameter("EstadoPlan", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("PDC_GuardarPlanDescripcion", idPlanParameter, descripcionPlanParameter, propositoPlanParameter, usrCodeParameter, estadoPlanParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> PDC_GuardarPlanProducto(Nullable<int> idProducto, Nullable<int> idPlan, Nullable<int> codLineaProducto, Nullable<System.DateTime> fechaEstimadaPublicacion, Nullable<int> locacion, Nullable<int> cantidadEstimada, Nullable<long> valorUnitario, Nullable<System.DateTime> fechaEstimadaRecepcion, string detalleProducto, Nullable<int> codTipoDeCompra, Nullable<decimal> montoTotal, Nullable<int> estado)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("idProducto", idProducto) :
                new ObjectParameter("idProducto", typeof(int));
    
            var idPlanParameter = idPlan.HasValue ?
                new ObjectParameter("idPlan", idPlan) :
                new ObjectParameter("idPlan", typeof(int));
    
            var codLineaProductoParameter = codLineaProducto.HasValue ?
                new ObjectParameter("CodLineaProducto", codLineaProducto) :
                new ObjectParameter("CodLineaProducto", typeof(int));
    
            var fechaEstimadaPublicacionParameter = fechaEstimadaPublicacion.HasValue ?
                new ObjectParameter("FechaEstimadaPublicacion", fechaEstimadaPublicacion) :
                new ObjectParameter("FechaEstimadaPublicacion", typeof(System.DateTime));
    
            var locacionParameter = locacion.HasValue ?
                new ObjectParameter("Locacion", locacion) :
                new ObjectParameter("Locacion", typeof(int));
    
            var cantidadEstimadaParameter = cantidadEstimada.HasValue ?
                new ObjectParameter("CantidadEstimada", cantidadEstimada) :
                new ObjectParameter("CantidadEstimada", typeof(int));
    
            var valorUnitarioParameter = valorUnitario.HasValue ?
                new ObjectParameter("ValorUnitario", valorUnitario) :
                new ObjectParameter("ValorUnitario", typeof(long));
    
            var fechaEstimadaRecepcionParameter = fechaEstimadaRecepcion.HasValue ?
                new ObjectParameter("FechaEstimadaRecepcion", fechaEstimadaRecepcion) :
                new ObjectParameter("FechaEstimadaRecepcion", typeof(System.DateTime));
    
            var detalleProductoParameter = detalleProducto != null ?
                new ObjectParameter("DetalleProducto", detalleProducto) :
                new ObjectParameter("DetalleProducto", typeof(string));
    
            var codTipoDeCompraParameter = codTipoDeCompra.HasValue ?
                new ObjectParameter("CodTipoDeCompra", codTipoDeCompra) :
                new ObjectParameter("CodTipoDeCompra", typeof(int));
    
            var montoTotalParameter = montoTotal.HasValue ?
                new ObjectParameter("MontoTotal", montoTotal) :
                new ObjectParameter("MontoTotal", typeof(decimal));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("PDC_GuardarPlanProducto", idProductoParameter, idPlanParameter, codLineaProductoParameter, fechaEstimadaPublicacionParameter, locacionParameter, cantidadEstimadaParameter, valorUnitarioParameter, fechaEstimadaRecepcionParameter, detalleProductoParameter, codTipoDeCompraParameter, montoTotalParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> PDC_GuardarPlanProyecto(Nullable<int> idPlan, string entCode, string orgCode, string nombrePlan, string usrCode, Nullable<int> estadoPlan, Nullable<int> tipoPlan)
        {
            var idPlanParameter = idPlan.HasValue ?
                new ObjectParameter("idPlan", idPlan) :
                new ObjectParameter("idPlan", typeof(int));
    
            var entCodeParameter = entCode != null ?
                new ObjectParameter("entCode", entCode) :
                new ObjectParameter("entCode", typeof(string));
    
            var orgCodeParameter = orgCode != null ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(string));
    
            var nombrePlanParameter = nombrePlan != null ?
                new ObjectParameter("NombrePlan", nombrePlan) :
                new ObjectParameter("NombrePlan", typeof(string));
    
            var usrCodeParameter = usrCode != null ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(string));
    
            var estadoPlanParameter = estadoPlan.HasValue ?
                new ObjectParameter("EstadoPlan", estadoPlan) :
                new ObjectParameter("EstadoPlan", typeof(int));
    
            var tipoPlanParameter = tipoPlan.HasValue ?
                new ObjectParameter("TipoPlan", tipoPlan) :
                new ObjectParameter("TipoPlan", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("PDC_GuardarPlanProyecto", idPlanParameter, entCodeParameter, orgCodeParameter, nombrePlanParameter, usrCodeParameter, estadoPlanParameter, tipoPlanParameter);
        }
    
        public virtual int PDC_GuardarResponsablePlan(Nullable<int> idPlan, string nombreResponsable, string cargoResponsable, string fono, string email)
        {
            var idPlanParameter = idPlan.HasValue ?
                new ObjectParameter("idPlan", idPlan) :
                new ObjectParameter("idPlan", typeof(int));
    
            var nombreResponsableParameter = nombreResponsable != null ?
                new ObjectParameter("nombreResponsable", nombreResponsable) :
                new ObjectParameter("nombreResponsable", typeof(string));
    
            var cargoResponsableParameter = cargoResponsable != null ?
                new ObjectParameter("cargoResponsable", cargoResponsable) :
                new ObjectParameter("cargoResponsable", typeof(string));
    
            var fonoParameter = fono != null ?
                new ObjectParameter("fono", fono) :
                new ObjectParameter("fono", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PDC_GuardarResponsablePlan", idPlanParameter, nombreResponsableParameter, cargoResponsableParameter, fonoParameter, emailParameter);
        }
    
        public virtual ObjectResult<PDC_ListadoEmpresaEstadoPublicado_Result> PDC_ListadoEmpresaEstadoPublicado(Nullable<int> yearPDC)
        {
            var yearPDCParameter = yearPDC.HasValue ?
                new ObjectParameter("yearPDC", yearPDC) :
                new ObjectParameter("yearPDC", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PDC_ListadoEmpresaEstadoPublicado_Result>("PDC_ListadoEmpresaEstadoPublicado", yearPDCParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> PDC_MontoTotal_Empresa(string entCode, string estadoPDC, Nullable<int> anioPDC)
        {
            var entCodeParameter = entCode != null ?
                new ObjectParameter("entCode", entCode) :
                new ObjectParameter("entCode", typeof(string));
    
            var estadoPDCParameter = estadoPDC != null ?
                new ObjectParameter("estadoPDC", estadoPDC) :
                new ObjectParameter("estadoPDC", typeof(string));
    
            var anioPDCParameter = anioPDC.HasValue ?
                new ObjectParameter("anioPDC", anioPDC) :
                new ObjectParameter("anioPDC", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("PDC_MontoTotal_Empresa", entCodeParameter, estadoPDCParameter, anioPDCParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> PDC_MontoTotal_Empresa_Publico(string entCode, Nullable<int> anioPDC)
        {
            var entCodeParameter = entCode != null ?
                new ObjectParameter("entCode", entCode) :
                new ObjectParameter("entCode", typeof(string));
    
            var anioPDCParameter = anioPDC.HasValue ?
                new ObjectParameter("anioPDC", anioPDC) :
                new ObjectParameter("anioPDC", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("PDC_MontoTotal_Empresa_Publico", entCodeParameter, anioPDCParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> PDC_MontoTotal_Unidad(string entCode, string orgCode, string estadoPDC, Nullable<int> anioPDC)
        {
            var entCodeParameter = entCode != null ?
                new ObjectParameter("entCode", entCode) :
                new ObjectParameter("entCode", typeof(string));
    
            var orgCodeParameter = orgCode != null ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(string));
    
            var estadoPDCParameter = estadoPDC != null ?
                new ObjectParameter("estadoPDC", estadoPDC) :
                new ObjectParameter("estadoPDC", typeof(string));
    
            var anioPDCParameter = anioPDC.HasValue ?
                new ObjectParameter("anioPDC", anioPDC) :
                new ObjectParameter("anioPDC", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("PDC_MontoTotal_Unidad", entCodeParameter, orgCodeParameter, estadoPDCParameter, anioPDCParameter);
        }
    
        public virtual ObjectResult<PDC_ObtenerControlCambiosPorID_Result> PDC_ObtenerControlCambiosPorID(Nullable<int> idPlan)
        {
            var idPlanParameter = idPlan.HasValue ?
                new ObjectParameter("idPlan", idPlan) :
                new ObjectParameter("idPlan", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PDC_ObtenerControlCambiosPorID_Result>("PDC_ObtenerControlCambiosPorID", idPlanParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> PDC_ObtenerCountPlanesPorEnviarPorEntCode(string entCode)
        {
            var entCodeParameter = entCode != null ?
                new ObjectParameter("entCode", entCode) :
                new ObjectParameter("entCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("PDC_ObtenerCountPlanesPorEnviarPorEntCode", entCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> PDC_ObtenerCountPlanesPorEnviarRePublicarPorEntCode(string entCode)
        {
            var entCodeParameter = entCode != null ?
                new ObjectParameter("entCode", entCode) :
                new ObjectParameter("entCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("PDC_ObtenerCountPlanesPorEnviarRePublicarPorEntCode", entCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> PDC_ObtenerCountPlanesPorPublicarPorEntCode(string entCode)
        {
            var entCodeParameter = entCode != null ?
                new ObjectParameter("entCode", entCode) :
                new ObjectParameter("entCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("PDC_ObtenerCountPlanesPorPublicarPorEntCode", entCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> PDC_ObtenerCountPlanesPorRePublicarPorEntCode(string entCode)
        {
            var entCodeParameter = entCode != null ?
                new ObjectParameter("entCode", entCode) :
                new ObjectParameter("entCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("PDC_ObtenerCountPlanesPorRePublicarPorEntCode", entCodeParameter);
        }
    
        public virtual ObjectResult<PDC_ObtenerLineaProductosServicios_Result> PDC_ObtenerLineaProductosServicios()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PDC_ObtenerLineaProductosServicios_Result>("PDC_ObtenerLineaProductosServicios");
        }
    
        public virtual ObjectResult<PDC_ObtenerListadoPlanes_Result> PDC_ObtenerListadoPlanes(string entCode, string orgCode, string estadoPDC, string yearPDC)
        {
            var entCodeParameter = entCode != null ?
                new ObjectParameter("entCode", entCode) :
                new ObjectParameter("entCode", typeof(string));
    
            var orgCodeParameter = orgCode != null ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(string));
    
            var estadoPDCParameter = estadoPDC != null ?
                new ObjectParameter("estadoPDC", estadoPDC) :
                new ObjectParameter("estadoPDC", typeof(string));
    
            var yearPDCParameter = yearPDC != null ?
                new ObjectParameter("yearPDC", yearPDC) :
                new ObjectParameter("yearPDC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PDC_ObtenerListadoPlanes_Result>("PDC_ObtenerListadoPlanes", entCodeParameter, orgCodeParameter, estadoPDCParameter, yearPDCParameter);
        }
    
        public virtual ObjectResult<PDC_ObtenerListadoPlanesPublicados_Result> PDC_ObtenerListadoPlanesPublicados(string entCode, string yearPDC)
        {
            var entCodeParameter = entCode != null ?
                new ObjectParameter("entCode", entCode) :
                new ObjectParameter("entCode", typeof(string));
    
            var yearPDCParameter = yearPDC != null ?
                new ObjectParameter("yearPDC", yearPDC) :
                new ObjectParameter("yearPDC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PDC_ObtenerListadoPlanesPublicados_Result>("PDC_ObtenerListadoPlanesPublicados", entCodeParameter, yearPDCParameter);
        }
    
        public virtual ObjectResult<PDC_ObtenerPlaneEstado_Result> PDC_ObtenerPlaneEstado()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PDC_ObtenerPlaneEstado_Result>("PDC_ObtenerPlaneEstado");
        }
    
        public virtual int PDC_ObtenerPlanes(string entCode, Nullable<int> anioActivo)
        {
            var entCodeParameter = entCode != null ?
                new ObjectParameter("entCode", entCode) :
                new ObjectParameter("entCode", typeof(string));
    
            var anioActivoParameter = anioActivo.HasValue ?
                new ObjectParameter("anioActivo", anioActivo) :
                new ObjectParameter("anioActivo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PDC_ObtenerPlanes", entCodeParameter, anioActivoParameter);
        }
    
        public virtual int PDC_ObtenerPlanesEnviados(string entCode, Nullable<int> anioActivo)
        {
            var entCodeParameter = entCode != null ?
                new ObjectParameter("entCode", entCode) :
                new ObjectParameter("entCode", typeof(string));
    
            var anioActivoParameter = anioActivo.HasValue ?
                new ObjectParameter("anioActivo", anioActivo) :
                new ObjectParameter("anioActivo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PDC_ObtenerPlanesEnviados", entCodeParameter, anioActivoParameter);
        }
    
        public virtual ObjectResult<PDC_ObtenerPlanesPorEmpresa_Result> PDC_ObtenerPlanesPorEmpresa(string entCode, string orgCode, string estadoPDC, Nullable<int> yearPDC)
        {
            var entCodeParameter = entCode != null ?
                new ObjectParameter("entCode", entCode) :
                new ObjectParameter("entCode", typeof(string));
    
            var orgCodeParameter = orgCode != null ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(string));
    
            var estadoPDCParameter = estadoPDC != null ?
                new ObjectParameter("estadoPDC", estadoPDC) :
                new ObjectParameter("estadoPDC", typeof(string));
    
            var yearPDCParameter = yearPDC.HasValue ?
                new ObjectParameter("yearPDC", yearPDC) :
                new ObjectParameter("yearPDC", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PDC_ObtenerPlanesPorEmpresa_Result>("PDC_ObtenerPlanesPorEmpresa", entCodeParameter, orgCodeParameter, estadoPDCParameter, yearPDCParameter);
        }
    
        public virtual ObjectResult<PDC_ObtenerPlanesPorEmpresaTodosPDC_Result> PDC_ObtenerPlanesPorEmpresaTodosPDC(string entCode, string orgCode)
        {
            var entCodeParameter = entCode != null ?
                new ObjectParameter("entCode", entCode) :
                new ObjectParameter("entCode", typeof(string));
    
            var orgCodeParameter = orgCode != null ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PDC_ObtenerPlanesPorEmpresaTodosPDC_Result>("PDC_ObtenerPlanesPorEmpresaTodosPDC", entCodeParameter, orgCodeParameter);
        }
    
        public virtual ObjectResult<PDC_ObtenerPlanesPorUnidad_Result> PDC_ObtenerPlanesPorUnidad(string entCode, string orgCode, string estadoPDC, Nullable<int> yearPDC)
        {
            var entCodeParameter = entCode != null ?
                new ObjectParameter("entCode", entCode) :
                new ObjectParameter("entCode", typeof(string));
    
            var orgCodeParameter = orgCode != null ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(string));
    
            var estadoPDCParameter = estadoPDC != null ?
                new ObjectParameter("estadoPDC", estadoPDC) :
                new ObjectParameter("estadoPDC", typeof(string));
    
            var yearPDCParameter = yearPDC.HasValue ?
                new ObjectParameter("yearPDC", yearPDC) :
                new ObjectParameter("yearPDC", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PDC_ObtenerPlanesPorUnidad_Result>("PDC_ObtenerPlanesPorUnidad", entCodeParameter, orgCodeParameter, estadoPDCParameter, yearPDCParameter);
        }
    
        public virtual ObjectResult<PDC_ObtenerPlanesPorUnidadTodosPDC_Result> PDC_ObtenerPlanesPorUnidadTodosPDC(string entCode, string orgCode)
        {
            var entCodeParameter = entCode != null ?
                new ObjectParameter("entCode", entCode) :
                new ObjectParameter("entCode", typeof(string));
    
            var orgCodeParameter = orgCode != null ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PDC_ObtenerPlanesPorUnidadTodosPDC_Result>("PDC_ObtenerPlanesPorUnidadTodosPDC", entCodeParameter, orgCodeParameter);
        }
    
        public virtual ObjectResult<PDC_ObtenerPlanesPublicadosPorEmpresa_Result> PDC_ObtenerPlanesPublicadosPorEmpresa(string entCode, Nullable<int> yearPDC)
        {
            var entCodeParameter = entCode != null ?
                new ObjectParameter("entCode", entCode) :
                new ObjectParameter("entCode", typeof(string));
    
            var yearPDCParameter = yearPDC.HasValue ?
                new ObjectParameter("yearPDC", yearPDC) :
                new ObjectParameter("yearPDC", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PDC_ObtenerPlanesPublicadosPorEmpresa_Result>("PDC_ObtenerPlanesPublicadosPorEmpresa", entCodeParameter, yearPDCParameter);
        }
    
        public virtual int PDC_ObtenerPlanesTipo(string entCode, Nullable<int> anioActivo)
        {
            var entCodeParameter = entCode != null ?
                new ObjectParameter("entCode", entCode) :
                new ObjectParameter("entCode", typeof(string));
    
            var anioActivoParameter = anioActivo.HasValue ?
                new ObjectParameter("anioActivo", anioActivo) :
                new ObjectParameter("anioActivo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PDC_ObtenerPlanesTipo", entCodeParameter, anioActivoParameter);
        }
    
        public virtual ObjectResult<PDC_ObtenerPlanProyectoPorID_Result> PDC_ObtenerPlanProyectoPorID(Nullable<int> idPlan)
        {
            var idPlanParameter = idPlan.HasValue ?
                new ObjectParameter("idPlan", idPlan) :
                new ObjectParameter("idPlan", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PDC_ObtenerPlanProyectoPorID_Result>("PDC_ObtenerPlanProyectoPorID", idPlanParameter);
        }
    
        public virtual ObjectResult<PDC_ObtenerProductosPorId_Result> PDC_ObtenerProductosPorId(Nullable<int> idPlan)
        {
            var idPlanParameter = idPlan.HasValue ?
                new ObjectParameter("idPlan", idPlan) :
                new ObjectParameter("idPlan", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PDC_ObtenerProductosPorId_Result>("PDC_ObtenerProductosPorId", idPlanParameter);
        }
    
        public virtual ObjectResult<PDC_ObtenerRegiones_Result> PDC_ObtenerRegiones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PDC_ObtenerRegiones_Result>("PDC_ObtenerRegiones");
        }
    
        public virtual ObjectResult<PDC_ObtenerTipoDeCompras_Result> PDC_ObtenerTipoDeCompras()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PDC_ObtenerTipoDeCompras_Result>("PDC_ObtenerTipoDeCompras");
        }
    
        public virtual ObjectResult<PDC_ObtenerTipoProyecto_Result> PDC_ObtenerTipoProyecto()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PDC_ObtenerTipoProyecto_Result>("PDC_ObtenerTipoProyecto");
        }
    
        public virtual int PDC_PublicarPlanesPorEnterprise(string entCode, string usrCode)
        {
            var entCodeParameter = entCode != null ?
                new ObjectParameter("entCode", entCode) :
                new ObjectParameter("entCode", typeof(string));
    
            var usrCodeParameter = usrCode != null ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PDC_PublicarPlanesPorEnterprise", entCodeParameter, usrCodeParameter);
        }
    
        public virtual int PDC_ReporteOCCompradores(string orgEnterprise, string orgCode, string anho)
        {
            var orgEnterpriseParameter = orgEnterprise != null ?
                new ObjectParameter("orgEnterprise", orgEnterprise) :
                new ObjectParameter("orgEnterprise", typeof(string));
    
            var orgCodeParameter = orgCode != null ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(string));
    
            var anhoParameter = anho != null ?
                new ObjectParameter("Anho", anho) :
                new ObjectParameter("Anho", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PDC_ReporteOCCompradores", orgEnterpriseParameter, orgCodeParameter, anhoParameter);
        }
    
        public virtual ObjectResult<PDC_ReporteOCCompradoresCM_Result> PDC_ReporteOCCompradoresCM(string orgEnterprise, string orgCode, string anho)
        {
            var orgEnterpriseParameter = orgEnterprise != null ?
                new ObjectParameter("orgEnterprise", orgEnterprise) :
                new ObjectParameter("orgEnterprise", typeof(string));
    
            var orgCodeParameter = orgCode != null ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(string));
    
            var anhoParameter = anho != null ?
                new ObjectParameter("Anho", anho) :
                new ObjectParameter("Anho", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PDC_ReporteOCCompradoresCM_Result>("PDC_ReporteOCCompradoresCM", orgEnterpriseParameter, orgCodeParameter, anhoParameter);
        }
    
        public virtual ObjectResult<PDC_ReporteOCCompradoresLC_Result> PDC_ReporteOCCompradoresLC(string orgEnterprise, string orgCode, string anho)
        {
            var orgEnterpriseParameter = orgEnterprise != null ?
                new ObjectParameter("orgEnterprise", orgEnterprise) :
                new ObjectParameter("orgEnterprise", typeof(string));
    
            var orgCodeParameter = orgCode != null ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(string));
    
            var anhoParameter = anho != null ?
                new ObjectParameter("Anho", anho) :
                new ObjectParameter("Anho", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PDC_ReporteOCCompradoresLC_Result>("PDC_ReporteOCCompradoresLC", orgEnterpriseParameter, orgCodeParameter, anhoParameter);
        }
    
        public virtual ObjectResult<PDC_ReporteOCCompradoresTD_Result> PDC_ReporteOCCompradoresTD(string orgEnterprise, string orgCode, string anho)
        {
            var orgEnterpriseParameter = orgEnterprise != null ?
                new ObjectParameter("orgEnterprise", orgEnterprise) :
                new ObjectParameter("orgEnterprise", typeof(string));
    
            var orgCodeParameter = orgCode != null ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(string));
    
            var anhoParameter = anho != null ?
                new ObjectParameter("Anho", anho) :
                new ObjectParameter("Anho", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PDC_ReporteOCCompradoresTD_Result>("PDC_ReporteOCCompradoresTD", orgEnterpriseParameter, orgCodeParameter, anhoParameter);
        }
    
        public virtual int PDC_ReporteOCCompradoresTodos(string orgEnterprise, string anho)
        {
            var orgEnterpriseParameter = orgEnterprise != null ?
                new ObjectParameter("orgEnterprise", orgEnterprise) :
                new ObjectParameter("orgEnterprise", typeof(string));
    
            var anhoParameter = anho != null ?
                new ObjectParameter("Anho", anho) :
                new ObjectParameter("Anho", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PDC_ReporteOCCompradoresTodos", orgEnterpriseParameter, anhoParameter);
        }
    
        public virtual ObjectResult<PDC_ReporteOCCompradoresTodosCM_Result> PDC_ReporteOCCompradoresTodosCM(string orgEnterprise, string anho)
        {
            var orgEnterpriseParameter = orgEnterprise != null ?
                new ObjectParameter("orgEnterprise", orgEnterprise) :
                new ObjectParameter("orgEnterprise", typeof(string));
    
            var anhoParameter = anho != null ?
                new ObjectParameter("Anho", anho) :
                new ObjectParameter("Anho", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PDC_ReporteOCCompradoresTodosCM_Result>("PDC_ReporteOCCompradoresTodosCM", orgEnterpriseParameter, anhoParameter);
        }
    
        public virtual ObjectResult<PDC_ReporteOCCompradoresTodosLC_Result> PDC_ReporteOCCompradoresTodosLC(string orgEnterprise, string anho)
        {
            var orgEnterpriseParameter = orgEnterprise != null ?
                new ObjectParameter("orgEnterprise", orgEnterprise) :
                new ObjectParameter("orgEnterprise", typeof(string));
    
            var anhoParameter = anho != null ?
                new ObjectParameter("Anho", anho) :
                new ObjectParameter("Anho", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PDC_ReporteOCCompradoresTodosLC_Result>("PDC_ReporteOCCompradoresTodosLC", orgEnterpriseParameter, anhoParameter);
        }
    
        public virtual ObjectResult<PDC_ReporteOCCompradoresTodosTD_Result> PDC_ReporteOCCompradoresTodosTD(string orgEnterprise, string anho)
        {
            var orgEnterpriseParameter = orgEnterprise != null ?
                new ObjectParameter("orgEnterprise", orgEnterprise) :
                new ObjectParameter("orgEnterprise", typeof(string));
    
            var anhoParameter = anho != null ?
                new ObjectParameter("Anho", anho) :
                new ObjectParameter("Anho", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PDC_ReporteOCCompradoresTodosTD_Result>("PDC_ReporteOCCompradoresTodosTD", orgEnterpriseParameter, anhoParameter);
        }
    
        public virtual int PDC_RePublicarPlanesPorEnterprise(string entCode, string usrCode)
        {
            var entCodeParameter = entCode != null ?
                new ObjectParameter("entCode", entCode) :
                new ObjectParameter("entCode", typeof(string));
    
            var usrCodeParameter = usrCode != null ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PDC_RePublicarPlanesPorEnterprise", entCodeParameter, usrCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> PDC_VerificarFechasPlazos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("PDC_VerificarFechasPlazos");
        }
    
        public virtual ObjectResult<pimSpcGetAdjudicationSIGFE_Result> pimSpcGetAdjudicationSIGFE(string rbhExternalCode)
        {
            var rbhExternalCodeParameter = rbhExternalCode != null ?
                new ObjectParameter("rbhExternalCode", rbhExternalCode) :
                new ObjectParameter("rbhExternalCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pimSpcGetAdjudicationSIGFE_Result>("pimSpcGetAdjudicationSIGFE", rbhExternalCodeParameter);
        }
    
        public virtual ObjectResult<pimSpcGetPublicationSIGFE_Result> pimSpcGetPublicationSIGFE(string rbhExternalCode)
        {
            var rbhExternalCodeParameter = rbhExternalCode != null ?
                new ObjectParameter("rbhExternalCode", rbhExternalCode) :
                new ObjectParameter("rbhExternalCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pimSpcGetPublicationSIGFE_Result>("pimSpcGetPublicationSIGFE", rbhExternalCodeParameter);
        }
    
        public virtual ObjectResult<pimSpcGetPurchaseOrderSIGFE_Result> pimSpcGetPurchaseOrderSIGFE(string porCode)
        {
            var porCodeParameter = porCode != null ?
                new ObjectParameter("porCode", porCode) :
                new ObjectParameter("porCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pimSpcGetPurchaseOrderSIGFE_Result>("pimSpcGetPurchaseOrderSIGFE", porCodeParameter);
        }
    
        public virtual ObjectResult<string> pimSpcGetRbhExternalCodeByporCode(string porCode)
        {
            var porCodeParameter = porCode != null ?
                new ObjectParameter("porCode", porCode) :
                new ObjectParameter("porCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("pimSpcGetRbhExternalCodeByporCode", porCodeParameter);
        }
    
        public virtual ObjectResult<pimSpcGetSIGFEAcquisitionInformationByOC_Result> pimSpcGetSIGFEAcquisitionInformationByOC(string porCode)
        {
            var porCodeParameter = porCode != null ?
                new ObjectParameter("porCode", porCode) :
                new ObjectParameter("porCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pimSpcGetSIGFEAcquisitionInformationByOC_Result>("pimSpcGetSIGFEAcquisitionInformationByOC", porCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> pimSpcGetTreatamentType(string porCode)
        {
            var porCodeParameter = porCode != null ?
                new ObjectParameter("porCode", porCode) :
                new ObjectParameter("porCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("pimSpcGetTreatamentType", porCodeParameter);
        }
    
        public virtual ObjectResult<string> prcCierraLicitacion(string rbhExternalCode)
        {
            var rbhExternalCodeParameter = rbhExternalCode != null ?
                new ObjectParameter("rbhExternalCode", rbhExternalCode) :
                new ObjectParameter("rbhExternalCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("prcCierraLicitacion", rbhExternalCodeParameter);
        }
    
        public virtual int prcCreaLCDesdeBaseTipo(Nullable<int> codLic, string idOrgC, Nullable<int> processSubType, ObjectParameter rbhExternalCode)
        {
            var codLicParameter = codLic.HasValue ?
                new ObjectParameter("codLic", codLic) :
                new ObjectParameter("codLic", typeof(int));
    
            var idOrgCParameter = idOrgC != null ?
                new ObjectParameter("idOrgC", idOrgC) :
                new ObjectParameter("idOrgC", typeof(string));
    
            var processSubTypeParameter = processSubType.HasValue ?
                new ObjectParameter("processSubType", processSubType) :
                new ObjectParameter("processSubType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcCreaLCDesdeBaseTipo", codLicParameter, idOrgCParameter, processSubTypeParameter, rbhExternalCode);
        }
    
        public virtual int prcCreateHistoryDTE(Nullable<int> idBill, string internalStatus, string externalStatus, string email, string idSeller, string reason, string message, Nullable<System.DateTime> dateUpdate, string user)
        {
            var idBillParameter = idBill.HasValue ?
                new ObjectParameter("idBill", idBill) :
                new ObjectParameter("idBill", typeof(int));
    
            var internalStatusParameter = internalStatus != null ?
                new ObjectParameter("internalStatus", internalStatus) :
                new ObjectParameter("internalStatus", typeof(string));
    
            var externalStatusParameter = externalStatus != null ?
                new ObjectParameter("externalStatus", externalStatus) :
                new ObjectParameter("externalStatus", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var idSellerParameter = idSeller != null ?
                new ObjectParameter("idSeller", idSeller) :
                new ObjectParameter("idSeller", typeof(string));
    
            var reasonParameter = reason != null ?
                new ObjectParameter("reason", reason) :
                new ObjectParameter("reason", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("message", message) :
                new ObjectParameter("message", typeof(string));
    
            var dateUpdateParameter = dateUpdate.HasValue ?
                new ObjectParameter("DateUpdate", dateUpdate) :
                new ObjectParameter("DateUpdate", typeof(System.DateTime));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcCreateHistoryDTE", idBillParameter, internalStatusParameter, externalStatusParameter, emailParameter, idSellerParameter, reasonParameter, messageParameter, dateUpdateParameter, userParameter);
        }
    
        public virtual int prcEncActualizaValores(Nullable<int> id2, Nullable<int> id3, Nullable<double> valor1, Nullable<double> valor2)
        {
            var id2Parameter = id2.HasValue ?
                new ObjectParameter("id2", id2) :
                new ObjectParameter("id2", typeof(int));
    
            var id3Parameter = id3.HasValue ?
                new ObjectParameter("id3", id3) :
                new ObjectParameter("id3", typeof(int));
    
            var valor1Parameter = valor1.HasValue ?
                new ObjectParameter("valor1", valor1) :
                new ObjectParameter("valor1", typeof(double));
    
            var valor2Parameter = valor2.HasValue ?
                new ObjectParameter("valor2", valor2) :
                new ObjectParameter("valor2", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcEncActualizaValores", id2Parameter, id3Parameter, valor1Parameter, valor2Parameter);
        }
    
        public virtual int prcEncObtenerLlave(ObjectParameter id, ObjectParameter valor)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcEncObtenerLlave", id, valor);
        }
    
        public virtual ObjectResult<prcEncObtenerValoresId1_Result> prcEncObtenerValoresId1(Nullable<int> id1)
        {
            var id1Parameter = id1.HasValue ?
                new ObjectParameter("id1", id1) :
                new ObjectParameter("id1", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcEncObtenerValoresId1_Result>("prcEncObtenerValoresId1", id1Parameter);
        }
    
        public virtual ObjectResult<prcEncObtenerValoresId2_Result> prcEncObtenerValoresId2(Nullable<int> id2)
        {
            var id2Parameter = id2.HasValue ?
                new ObjectParameter("id2", id2) :
                new ObjectParameter("id2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcEncObtenerValoresId2_Result>("prcEncObtenerValoresId2", id2Parameter);
        }
    
        public virtual int prcEncRegistra(Nullable<int> id1, Nullable<int> id2, Nullable<int> id3, string valor1, string valor2)
        {
            var id1Parameter = id1.HasValue ?
                new ObjectParameter("id1", id1) :
                new ObjectParameter("id1", typeof(int));
    
            var id2Parameter = id2.HasValue ?
                new ObjectParameter("id2", id2) :
                new ObjectParameter("id2", typeof(int));
    
            var id3Parameter = id3.HasValue ?
                new ObjectParameter("id3", id3) :
                new ObjectParameter("id3", typeof(int));
    
            var valor1Parameter = valor1 != null ?
                new ObjectParameter("valor1", valor1) :
                new ObjectParameter("valor1", typeof(string));
    
            var valor2Parameter = valor2 != null ?
                new ObjectParameter("valor2", valor2) :
                new ObjectParameter("valor2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcEncRegistra", id1Parameter, id2Parameter, id3Parameter, valor1Parameter, valor2Parameter);
        }
    
        public virtual ObjectResult<prcGetDetailSite_Result> prcGetDetailSite(Nullable<int> iSACTIVE)
        {
            var iSACTIVEParameter = iSACTIVE.HasValue ?
                new ObjectParameter("ISACTIVE", iSACTIVE) :
                new ObjectParameter("ISACTIVE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcGetDetailSite_Result>("prcGetDetailSite", iSACTIVEParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> prcGetPavValue(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> pavType, string pavExtraValue)
        {
            var pavTypeParameter = pavType.HasValue ?
                new ObjectParameter("pavType", pavType) :
                new ObjectParameter("pavType", typeof(int));
    
            var pavExtraValueParameter = pavExtraValue != null ?
                new ObjectParameter("pavExtraValue", pavExtraValue) :
                new ObjectParameter("pavExtraValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("prcGetPavValue", resultCode, resultMessage, pavTypeParameter, pavExtraValueParameter);
        }
    
        public virtual int prcInsertHistoryDTE(Nullable<int> idDTE, string accion, Nullable<int> idUser, string estadoAnterior, string estadoCambio)
        {
            var idDTEParameter = idDTE.HasValue ?
                new ObjectParameter("IdDTE", idDTE) :
                new ObjectParameter("IdDTE", typeof(int));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("IdUser", idUser) :
                new ObjectParameter("IdUser", typeof(int));
    
            var estadoAnteriorParameter = estadoAnterior != null ?
                new ObjectParameter("EstadoAnterior", estadoAnterior) :
                new ObjectParameter("EstadoAnterior", typeof(string));
    
            var estadoCambioParameter = estadoCambio != null ?
                new ObjectParameter("EstadoCambio", estadoCambio) :
                new ObjectParameter("EstadoCambio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcInsertHistoryDTE", idDTEParameter, accionParameter, idUserParameter, estadoAnteriorParameter, estadoCambioParameter);
        }
    
        public virtual ObjectResult<prcLicitacionesSinCertificado_Result> prcLicitacionesSinCertificado(ObjectParameter resultCode, ObjectParameter resultMessage)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcLicitacionesSinCertificado_Result>("prcLicitacionesSinCertificado", resultCode, resultMessage);
        }
    
        public virtual int prcLicitaEstadoCerradaConOfertasDesertadas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcLicitaEstadoCerradaConOfertasDesertadas");
        }
    
        public virtual ObjectResult<prcObtenerInformacionLicitacion_Result> prcObtenerInformacionLicitacion(Nullable<int> rbhCode)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcObtenerInformacionLicitacion_Result>("prcObtenerInformacionLicitacion", rbhCodeParameter);
        }
    
        public virtual ObjectResult<prcObtenerInformacionOrdenCompra_Result> prcObtenerInformacionOrdenCompra(Nullable<int> porID)
        {
            var porIDParameter = porID.HasValue ?
                new ObjectParameter("porID", porID) :
                new ObjectParameter("porID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcObtenerInformacionOrdenCompra_Result>("prcObtenerInformacionOrdenCompra", porIDParameter);
        }
    
        public virtual int prcPOActualizaCotizaciones(Nullable<int> cotizacionId, string atcCode, string adjuntoNombre, string proveedorRut, string proveedorCorreo, string proveedorFono)
        {
            var cotizacionIdParameter = cotizacionId.HasValue ?
                new ObjectParameter("CotizacionId", cotizacionId) :
                new ObjectParameter("CotizacionId", typeof(int));
    
            var atcCodeParameter = atcCode != null ?
                new ObjectParameter("atcCode", atcCode) :
                new ObjectParameter("atcCode", typeof(string));
    
            var adjuntoNombreParameter = adjuntoNombre != null ?
                new ObjectParameter("adjuntoNombre", adjuntoNombre) :
                new ObjectParameter("adjuntoNombre", typeof(string));
    
            var proveedorRutParameter = proveedorRut != null ?
                new ObjectParameter("proveedorRut", proveedorRut) :
                new ObjectParameter("proveedorRut", typeof(string));
    
            var proveedorCorreoParameter = proveedorCorreo != null ?
                new ObjectParameter("proveedorCorreo", proveedorCorreo) :
                new ObjectParameter("proveedorCorreo", typeof(string));
    
            var proveedorFonoParameter = proveedorFono != null ?
                new ObjectParameter("proveedorFono", proveedorFono) :
                new ObjectParameter("proveedorFono", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcPOActualizaCotizaciones", cotizacionIdParameter, atcCodeParameter, adjuntoNombreParameter, proveedorRutParameter, proveedorCorreoParameter, proveedorFonoParameter);
        }
    
        public virtual int prcPOEliminaAdjuntoCotizacion(Nullable<int> cotizacionId)
        {
            var cotizacionIdParameter = cotizacionId.HasValue ?
                new ObjectParameter("CotizacionId", cotizacionId) :
                new ObjectParameter("CotizacionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcPOEliminaAdjuntoCotizacion", cotizacionIdParameter);
        }
    
        public virtual int prcPOEliminaCotizacion(Nullable<int> cotizacionId)
        {
            var cotizacionIdParameter = cotizacionId.HasValue ?
                new ObjectParameter("CotizacionId", cotizacionId) :
                new ObjectParameter("CotizacionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcPOEliminaCotizacion", cotizacionIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> prcPOInsertaCotizaciones(Nullable<int> porId, string atcCode, string adjuntoNombre, string proveedorRut, string proveedorCorreo, string proveedorFono)
        {
            var porIdParameter = porId.HasValue ?
                new ObjectParameter("porId", porId) :
                new ObjectParameter("porId", typeof(int));
    
            var atcCodeParameter = atcCode != null ?
                new ObjectParameter("atcCode", atcCode) :
                new ObjectParameter("atcCode", typeof(string));
    
            var adjuntoNombreParameter = adjuntoNombre != null ?
                new ObjectParameter("adjuntoNombre", adjuntoNombre) :
                new ObjectParameter("adjuntoNombre", typeof(string));
    
            var proveedorRutParameter = proveedorRut != null ?
                new ObjectParameter("proveedorRut", proveedorRut) :
                new ObjectParameter("proveedorRut", typeof(string));
    
            var proveedorCorreoParameter = proveedorCorreo != null ?
                new ObjectParameter("proveedorCorreo", proveedorCorreo) :
                new ObjectParameter("proveedorCorreo", typeof(string));
    
            var proveedorFonoParameter = proveedorFono != null ?
                new ObjectParameter("proveedorFono", proveedorFono) :
                new ObjectParameter("proveedorFono", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("prcPOInsertaCotizaciones", porIdParameter, atcCodeParameter, adjuntoNombreParameter, proveedorRutParameter, proveedorCorreoParameter, proveedorFonoParameter);
        }
    
        public virtual ObjectResult<prcPOObtieneCotizaciones_Result> prcPOObtieneCotizaciones(Nullable<int> porId)
        {
            var porIdParameter = porId.HasValue ?
                new ObjectParameter("porId", porId) :
                new ObjectParameter("porId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcPOObtieneCotizaciones_Result>("prcPOObtieneCotizaciones", porIdParameter);
        }
    
        public virtual ObjectResult<prcPOPrintReport_Result> prcPOPrintReport(Nullable<int> porId)
        {
            var porIdParameter = porId.HasValue ?
                new ObjectParameter("porId", porId) :
                new ObjectParameter("porId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcPOPrintReport_Result>("prcPOPrintReport", porIdParameter);
        }
    
        public virtual int prcPrueba(ObjectParameter resultCode, ObjectParameter resultMessage, string bidId)
        {
            var bidIdParameter = bidId != null ?
                new ObjectParameter("BidId", bidId) :
                new ObjectParameter("BidId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcPrueba", resultCode, resultMessage, bidIdParameter);
        }
    
        public virtual int prcRegistraLogLicitacionesOfertas(Nullable<int> tipo, Nullable<int> codigo, string userCode, string orgCode, string iP, Nullable<int> paso, Nullable<int> accion, string nombrePagina, string detalle, string detalleExtra)
        {
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(int));
    
            var userCodeParameter = userCode != null ?
                new ObjectParameter("userCode", userCode) :
                new ObjectParameter("userCode", typeof(string));
    
            var orgCodeParameter = orgCode != null ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(string));
    
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            var pasoParameter = paso.HasValue ?
                new ObjectParameter("paso", paso) :
                new ObjectParameter("paso", typeof(int));
    
            var accionParameter = accion.HasValue ?
                new ObjectParameter("accion", accion) :
                new ObjectParameter("accion", typeof(int));
    
            var nombrePaginaParameter = nombrePagina != null ?
                new ObjectParameter("nombrePagina", nombrePagina) :
                new ObjectParameter("nombrePagina", typeof(string));
    
            var detalleParameter = detalle != null ?
                new ObjectParameter("detalle", detalle) :
                new ObjectParameter("detalle", typeof(string));
    
            var detalleExtraParameter = detalleExtra != null ?
                new ObjectParameter("detalleExtra", detalleExtra) :
                new ObjectParameter("detalleExtra", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcRegistraLogLicitacionesOfertas", tipoParameter, codigoParameter, userCodeParameter, orgCodeParameter, iPParameter, pasoParameter, accionParameter, nombrePaginaParameter, detalleParameter, detalleExtraParameter);
        }
    
        public virtual int prcRFBValidateDatePublication(Nullable<int> rbhCode, ObjectParameter boError, ObjectParameter strMsjError)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcRFBValidateDatePublication", rbhCodeParameter, boError, strMsjError);
        }
    
        public virtual int prcRFBValidateDatePublish(Nullable<int> rbhCode, Nullable<System.DateTime> fechaCierre, Nullable<System.DateTime> fechaAperturaTecnica, Nullable<System.DateTime> fechaAperturaEconomica, Nullable<System.DateTime> fechaInicioPregunta, Nullable<System.DateTime> fechaTerminoPregunta, Nullable<System.DateTime> fechaPublicacionPregunta, Nullable<System.DateTime> fechaEstimadaAdjudicacion, ObjectParameter boError, ObjectParameter strMsjError)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            var fechaCierreParameter = fechaCierre.HasValue ?
                new ObjectParameter("FechaCierre", fechaCierre) :
                new ObjectParameter("FechaCierre", typeof(System.DateTime));
    
            var fechaAperturaTecnicaParameter = fechaAperturaTecnica.HasValue ?
                new ObjectParameter("FechaAperturaTecnica", fechaAperturaTecnica) :
                new ObjectParameter("FechaAperturaTecnica", typeof(System.DateTime));
    
            var fechaAperturaEconomicaParameter = fechaAperturaEconomica.HasValue ?
                new ObjectParameter("FechaAperturaEconomica", fechaAperturaEconomica) :
                new ObjectParameter("FechaAperturaEconomica", typeof(System.DateTime));
    
            var fechaInicioPreguntaParameter = fechaInicioPregunta.HasValue ?
                new ObjectParameter("FechaInicioPregunta", fechaInicioPregunta) :
                new ObjectParameter("FechaInicioPregunta", typeof(System.DateTime));
    
            var fechaTerminoPreguntaParameter = fechaTerminoPregunta.HasValue ?
                new ObjectParameter("FechaTerminoPregunta", fechaTerminoPregunta) :
                new ObjectParameter("FechaTerminoPregunta", typeof(System.DateTime));
    
            var fechaPublicacionPreguntaParameter = fechaPublicacionPregunta.HasValue ?
                new ObjectParameter("FechaPublicacionPregunta", fechaPublicacionPregunta) :
                new ObjectParameter("FechaPublicacionPregunta", typeof(System.DateTime));
    
            var fechaEstimadaAdjudicacionParameter = fechaEstimadaAdjudicacion.HasValue ?
                new ObjectParameter("FechaEstimadaAdjudicacion", fechaEstimadaAdjudicacion) :
                new ObjectParameter("FechaEstimadaAdjudicacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcRFBValidateDatePublish", rbhCodeParameter, fechaCierreParameter, fechaAperturaTecnicaParameter, fechaAperturaEconomicaParameter, fechaInicioPreguntaParameter, fechaTerminoPreguntaParameter, fechaPublicacionPreguntaParameter, fechaEstimadaAdjudicacionParameter, boError, strMsjError);
        }
    
        public virtual ObjectResult<prcRFBValidateDatePublishLS_Result> prcRFBValidateDatePublishLS(Nullable<int> rbhCode, Nullable<System.DateTime> fechaCierre, Nullable<System.DateTime> fechaInicioPregunta, Nullable<System.DateTime> fechaTerminoPregunta, Nullable<System.DateTime> fechaPublicacionPregunta, ObjectParameter boError, ObjectParameter strMsjError)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            var fechaCierreParameter = fechaCierre.HasValue ?
                new ObjectParameter("FechaCierre", fechaCierre) :
                new ObjectParameter("FechaCierre", typeof(System.DateTime));
    
            var fechaInicioPreguntaParameter = fechaInicioPregunta.HasValue ?
                new ObjectParameter("FechaInicioPregunta", fechaInicioPregunta) :
                new ObjectParameter("FechaInicioPregunta", typeof(System.DateTime));
    
            var fechaTerminoPreguntaParameter = fechaTerminoPregunta.HasValue ?
                new ObjectParameter("FechaTerminoPregunta", fechaTerminoPregunta) :
                new ObjectParameter("FechaTerminoPregunta", typeof(System.DateTime));
    
            var fechaPublicacionPreguntaParameter = fechaPublicacionPregunta.HasValue ?
                new ObjectParameter("FechaPublicacionPregunta", fechaPublicacionPregunta) :
                new ObjectParameter("FechaPublicacionPregunta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcRFBValidateDatePublishLS_Result>("prcRFBValidateDatePublishLS", rbhCodeParameter, fechaCierreParameter, fechaInicioPreguntaParameter, fechaTerminoPreguntaParameter, fechaPublicacionPreguntaParameter, boError, strMsjError);
        }
    
        public virtual ObjectResult<prcSearchAcquisitionClosed_Result> prcSearchAcquisitionClosed(ObjectParameter resultCode, ObjectParameter resultMessage, string bidId)
        {
            var bidIdParameter = bidId != null ?
                new ObjectParameter("BidId", bidId) :
                new ObjectParameter("BidId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSearchAcquisitionClosed_Result>("prcSearchAcquisitionClosed", resultCode, resultMessage, bidIdParameter);
        }
    
        public virtual int prcSearchCmiiBIDRFB(ObjectParameter resultCode, ObjectParameter resultMessage, string bidId)
        {
            var bidIdParameter = bidId != null ?
                new ObjectParameter("BidId", bidId) :
                new ObjectParameter("BidId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSearchCmiiBIDRFB", resultCode, resultMessage, bidIdParameter);
        }
    
        public virtual int prcSearchCMIIExternalCode(string rbhExternalCode, ObjectParameter intExiste)
        {
            var rbhExternalCodeParameter = rbhExternalCode != null ?
                new ObjectParameter("rbhExternalCode", rbhExternalCode) :
                new ObjectParameter("rbhExternalCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSearchCMIIExternalCode", rbhExternalCodeParameter, intExiste);
        }
    
        public virtual ObjectResult<prcSearchVerifyAcquisitionClosed_Result> prcSearchVerifyAcquisitionClosed(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> bidRFBCode)
        {
            var bidRFBCodeParameter = bidRFBCode.HasValue ?
                new ObjectParameter("bidRFBCode", bidRFBCode) :
                new ObjectParameter("bidRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSearchVerifyAcquisitionClosed_Result>("prcSearchVerifyAcquisitionClosed", resultCode, resultMessage, bidRFBCodeParameter);
        }
    
        public virtual int prcSpcActivateprcRFBHeader(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbhCode)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcActivateprcRFBHeader", resultCode, resultMessage, rbhCodeParameter);
        }
    
        public virtual int prcSpcActualizaExtensionPlazo(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbhCode, Nullable<int> valor)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            var valorParameter = valor.HasValue ?
                new ObjectParameter("Valor", valor) :
                new ObjectParameter("Valor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcActualizaExtensionPlazo", resultCode, resultMessage, rbhCodeParameter, valorParameter);
        }
    
        public virtual int prcSpcAddBill(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> bilNumber, string bilTaxIdSeller, string bilSellerName, string bilTaxIdReceptor, string bilReceptorName, string bilOrgCodeSeller, string bilOrgCodeBuyer, Nullable<decimal> bilAmount, Nullable<double> bilTaxPercent, Nullable<decimal> bilTotalAmount, Nullable<System.DateTime> bilDateEmition, Nullable<System.DateTime> bilDateReception, Nullable<System.DateTime> bilCreateDate, string bilStatus, string bilReasonPayment, Nullable<int> bilRefNumber, Nullable<int> bilPoId, string bilDocType, string bilDocDTEType, string bilXMLDTE, string bilInternalStatus, string bilExternalStatus, string bilInternalMail, string bilExternalMail, string bilOriginalMail, Nullable<int> bilPackId, Nullable<int> bilTGR, Nullable<int> bilCurrentStatus, Nullable<int> bilPaymentStatus, Nullable<int> bilAmountConfirming)
        {
            var bilNumberParameter = bilNumber.HasValue ?
                new ObjectParameter("bilNumber", bilNumber) :
                new ObjectParameter("bilNumber", typeof(int));
    
            var bilTaxIdSellerParameter = bilTaxIdSeller != null ?
                new ObjectParameter("bilTaxIdSeller", bilTaxIdSeller) :
                new ObjectParameter("bilTaxIdSeller", typeof(string));
    
            var bilSellerNameParameter = bilSellerName != null ?
                new ObjectParameter("bilSellerName", bilSellerName) :
                new ObjectParameter("bilSellerName", typeof(string));
    
            var bilTaxIdReceptorParameter = bilTaxIdReceptor != null ?
                new ObjectParameter("bilTaxIdReceptor", bilTaxIdReceptor) :
                new ObjectParameter("bilTaxIdReceptor", typeof(string));
    
            var bilReceptorNameParameter = bilReceptorName != null ?
                new ObjectParameter("bilReceptorName", bilReceptorName) :
                new ObjectParameter("bilReceptorName", typeof(string));
    
            var bilOrgCodeSellerParameter = bilOrgCodeSeller != null ?
                new ObjectParameter("bilOrgCodeSeller", bilOrgCodeSeller) :
                new ObjectParameter("bilOrgCodeSeller", typeof(string));
    
            var bilOrgCodeBuyerParameter = bilOrgCodeBuyer != null ?
                new ObjectParameter("bilOrgCodeBuyer", bilOrgCodeBuyer) :
                new ObjectParameter("bilOrgCodeBuyer", typeof(string));
    
            var bilAmountParameter = bilAmount.HasValue ?
                new ObjectParameter("bilAmount", bilAmount) :
                new ObjectParameter("bilAmount", typeof(decimal));
    
            var bilTaxPercentParameter = bilTaxPercent.HasValue ?
                new ObjectParameter("bilTaxPercent", bilTaxPercent) :
                new ObjectParameter("bilTaxPercent", typeof(double));
    
            var bilTotalAmountParameter = bilTotalAmount.HasValue ?
                new ObjectParameter("bilTotalAmount", bilTotalAmount) :
                new ObjectParameter("bilTotalAmount", typeof(decimal));
    
            var bilDateEmitionParameter = bilDateEmition.HasValue ?
                new ObjectParameter("bilDateEmition", bilDateEmition) :
                new ObjectParameter("bilDateEmition", typeof(System.DateTime));
    
            var bilDateReceptionParameter = bilDateReception.HasValue ?
                new ObjectParameter("bilDateReception", bilDateReception) :
                new ObjectParameter("bilDateReception", typeof(System.DateTime));
    
            var bilCreateDateParameter = bilCreateDate.HasValue ?
                new ObjectParameter("bilCreateDate", bilCreateDate) :
                new ObjectParameter("bilCreateDate", typeof(System.DateTime));
    
            var bilStatusParameter = bilStatus != null ?
                new ObjectParameter("bilStatus", bilStatus) :
                new ObjectParameter("bilStatus", typeof(string));
    
            var bilReasonPaymentParameter = bilReasonPayment != null ?
                new ObjectParameter("bilReasonPayment", bilReasonPayment) :
                new ObjectParameter("bilReasonPayment", typeof(string));
    
            var bilRefNumberParameter = bilRefNumber.HasValue ?
                new ObjectParameter("bilRefNumber", bilRefNumber) :
                new ObjectParameter("bilRefNumber", typeof(int));
    
            var bilPoIdParameter = bilPoId.HasValue ?
                new ObjectParameter("bilPoId", bilPoId) :
                new ObjectParameter("bilPoId", typeof(int));
    
            var bilDocTypeParameter = bilDocType != null ?
                new ObjectParameter("bilDocType", bilDocType) :
                new ObjectParameter("bilDocType", typeof(string));
    
            var bilDocDTETypeParameter = bilDocDTEType != null ?
                new ObjectParameter("bilDocDTEType", bilDocDTEType) :
                new ObjectParameter("bilDocDTEType", typeof(string));
    
            var bilXMLDTEParameter = bilXMLDTE != null ?
                new ObjectParameter("bilXMLDTE", bilXMLDTE) :
                new ObjectParameter("bilXMLDTE", typeof(string));
    
            var bilInternalStatusParameter = bilInternalStatus != null ?
                new ObjectParameter("bilInternalStatus", bilInternalStatus) :
                new ObjectParameter("bilInternalStatus", typeof(string));
    
            var bilExternalStatusParameter = bilExternalStatus != null ?
                new ObjectParameter("bilExternalStatus", bilExternalStatus) :
                new ObjectParameter("bilExternalStatus", typeof(string));
    
            var bilInternalMailParameter = bilInternalMail != null ?
                new ObjectParameter("bilInternalMail", bilInternalMail) :
                new ObjectParameter("bilInternalMail", typeof(string));
    
            var bilExternalMailParameter = bilExternalMail != null ?
                new ObjectParameter("bilExternalMail", bilExternalMail) :
                new ObjectParameter("bilExternalMail", typeof(string));
    
            var bilOriginalMailParameter = bilOriginalMail != null ?
                new ObjectParameter("bilOriginalMail", bilOriginalMail) :
                new ObjectParameter("bilOriginalMail", typeof(string));
    
            var bilPackIdParameter = bilPackId.HasValue ?
                new ObjectParameter("bilPackId", bilPackId) :
                new ObjectParameter("bilPackId", typeof(int));
    
            var bilTGRParameter = bilTGR.HasValue ?
                new ObjectParameter("bilTGR", bilTGR) :
                new ObjectParameter("bilTGR", typeof(int));
    
            var bilCurrentStatusParameter = bilCurrentStatus.HasValue ?
                new ObjectParameter("bilCurrentStatus", bilCurrentStatus) :
                new ObjectParameter("bilCurrentStatus", typeof(int));
    
            var bilPaymentStatusParameter = bilPaymentStatus.HasValue ?
                new ObjectParameter("bilPaymentStatus", bilPaymentStatus) :
                new ObjectParameter("bilPaymentStatus", typeof(int));
    
            var bilAmountConfirmingParameter = bilAmountConfirming.HasValue ?
                new ObjectParameter("bilAmountConfirming", bilAmountConfirming) :
                new ObjectParameter("bilAmountConfirming", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcAddBill", resultCode, resultMessage, bilNumberParameter, bilTaxIdSellerParameter, bilSellerNameParameter, bilTaxIdReceptorParameter, bilReceptorNameParameter, bilOrgCodeSellerParameter, bilOrgCodeBuyerParameter, bilAmountParameter, bilTaxPercentParameter, bilTotalAmountParameter, bilDateEmitionParameter, bilDateReceptionParameter, bilCreateDateParameter, bilStatusParameter, bilReasonPaymentParameter, bilRefNumberParameter, bilPoIdParameter, bilDocTypeParameter, bilDocDTETypeParameter, bilXMLDTEParameter, bilInternalStatusParameter, bilExternalStatusParameter, bilInternalMailParameter, bilExternalMailParameter, bilOriginalMailParameter, bilPackIdParameter, bilTGRParameter, bilCurrentStatusParameter, bilPaymentStatusParameter, bilAmountConfirmingParameter);
        }
    
        public virtual int prcSpcAddDateCertificate(ObjectParameter rESULTCODE, ObjectParameter rESULTMESSAGE, Nullable<int> iNTNUMADQ)
        {
            var iNTNUMADQParameter = iNTNUMADQ.HasValue ?
                new ObjectParameter("INTNUMADQ", iNTNUMADQ) :
                new ObjectParameter("INTNUMADQ", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcAddDateCertificate", rESULTCODE, rESULTMESSAGE, iNTNUMADQParameter);
        }
    
        public virtual ObjectResult<prcSpcAddDocsAgregados_Result> prcSpcAddDocsAgregados(Nullable<int> rlrDocNumber, Nullable<int> rlrRFBCode, string rlrRFBIdCHP, string rlrRFBDescription, string rlrIdLocal, Nullable<int> rlrLegalRecordType, Nullable<int> rlrLegalRecordSubType, string rlrLegalRecordRutProveedor, string rlrLegalRecordName, string rlrLegalRecordLink, Nullable<bool> activo)
        {
            var rlrDocNumberParameter = rlrDocNumber.HasValue ?
                new ObjectParameter("rlrDocNumber", rlrDocNumber) :
                new ObjectParameter("rlrDocNumber", typeof(int));
    
            var rlrRFBCodeParameter = rlrRFBCode.HasValue ?
                new ObjectParameter("rlrRFBCode", rlrRFBCode) :
                new ObjectParameter("rlrRFBCode", typeof(int));
    
            var rlrRFBIdCHPParameter = rlrRFBIdCHP != null ?
                new ObjectParameter("rlrRFBIdCHP", rlrRFBIdCHP) :
                new ObjectParameter("rlrRFBIdCHP", typeof(string));
    
            var rlrRFBDescriptionParameter = rlrRFBDescription != null ?
                new ObjectParameter("rlrRFBDescription", rlrRFBDescription) :
                new ObjectParameter("rlrRFBDescription", typeof(string));
    
            var rlrIdLocalParameter = rlrIdLocal != null ?
                new ObjectParameter("rlrIdLocal", rlrIdLocal) :
                new ObjectParameter("rlrIdLocal", typeof(string));
    
            var rlrLegalRecordTypeParameter = rlrLegalRecordType.HasValue ?
                new ObjectParameter("rlrLegalRecordType", rlrLegalRecordType) :
                new ObjectParameter("rlrLegalRecordType", typeof(int));
    
            var rlrLegalRecordSubTypeParameter = rlrLegalRecordSubType.HasValue ?
                new ObjectParameter("rlrLegalRecordSubType", rlrLegalRecordSubType) :
                new ObjectParameter("rlrLegalRecordSubType", typeof(int));
    
            var rlrLegalRecordRutProveedorParameter = rlrLegalRecordRutProveedor != null ?
                new ObjectParameter("rlrLegalRecordRutProveedor", rlrLegalRecordRutProveedor) :
                new ObjectParameter("rlrLegalRecordRutProveedor", typeof(string));
    
            var rlrLegalRecordNameParameter = rlrLegalRecordName != null ?
                new ObjectParameter("rlrLegalRecordName", rlrLegalRecordName) :
                new ObjectParameter("rlrLegalRecordName", typeof(string));
    
            var rlrLegalRecordLinkParameter = rlrLegalRecordLink != null ?
                new ObjectParameter("rlrLegalRecordLink", rlrLegalRecordLink) :
                new ObjectParameter("rlrLegalRecordLink", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcAddDocsAgregados_Result>("prcSpcAddDocsAgregados", rlrDocNumberParameter, rlrRFBCodeParameter, rlrRFBIdCHPParameter, rlrRFBDescriptionParameter, rlrIdLocalParameter, rlrLegalRecordTypeParameter, rlrLegalRecordSubTypeParameter, rlrLegalRecordRutProveedorParameter, rlrLegalRecordNameParameter, rlrLegalRecordLinkParameter, activoParameter);
        }
    
        public virtual int prcSpcAddOCDataWSIntegracion(ObjectParameter rESULTCODE, ObjectParameter rESULTMESSAGE, string tICKETID, string dOCUMENTOC)
        {
            var tICKETIDParameter = tICKETID != null ?
                new ObjectParameter("TICKETID", tICKETID) :
                new ObjectParameter("TICKETID", typeof(string));
    
            var dOCUMENTOCParameter = dOCUMENTOC != null ?
                new ObjectParameter("DOCUMENTOC", dOCUMENTOC) :
                new ObjectParameter("DOCUMENTOC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcAddOCDataWSIntegracion", rESULTCODE, rESULTMESSAGE, tICKETIDParameter, dOCUMENTOCParameter);
        }
    
        public virtual int prcSpcAddOffer(ObjectParameter resultCode, ObjectParameter resultMessage, string receptorName, Nullable<int> codeReceptor, string taxIdReceptor, Nullable<System.DateTime> datePayment, Nullable<decimal> offerAmount, Nullable<int> entCode)
        {
            var receptorNameParameter = receptorName != null ?
                new ObjectParameter("ReceptorName", receptorName) :
                new ObjectParameter("ReceptorName", typeof(string));
    
            var codeReceptorParameter = codeReceptor.HasValue ?
                new ObjectParameter("codeReceptor", codeReceptor) :
                new ObjectParameter("codeReceptor", typeof(int));
    
            var taxIdReceptorParameter = taxIdReceptor != null ?
                new ObjectParameter("TaxIdReceptor", taxIdReceptor) :
                new ObjectParameter("TaxIdReceptor", typeof(string));
    
            var datePaymentParameter = datePayment.HasValue ?
                new ObjectParameter("DatePayment", datePayment) :
                new ObjectParameter("DatePayment", typeof(System.DateTime));
    
            var offerAmountParameter = offerAmount.HasValue ?
                new ObjectParameter("OfferAmount", offerAmount) :
                new ObjectParameter("OfferAmount", typeof(decimal));
    
            var entCodeParameter = entCode.HasValue ?
                new ObjectParameter("entCode", entCode) :
                new ObjectParameter("entCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcAddOffer", resultCode, resultMessage, receptorNameParameter, codeReceptorParameter, taxIdReceptorParameter, datePaymentParameter, offerAmountParameter, entCodeParameter);
        }
    
        public virtual int prcSpcAddPaymentDataWSIntegracion(ObjectParameter rESULTCODE, ObjectParameter rESULTMESSAGE, Nullable<int> iD, string dOCUMENTPAYMENT, string tRANSACTIONLA, string sTATETRANSACTION, string sTATEPURCHASEORDER, string pURCHASEORDER, string rESERVA, string dESCRIPCION)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var dOCUMENTPAYMENTParameter = dOCUMENTPAYMENT != null ?
                new ObjectParameter("DOCUMENTPAYMENT", dOCUMENTPAYMENT) :
                new ObjectParameter("DOCUMENTPAYMENT", typeof(string));
    
            var tRANSACTIONLAParameter = tRANSACTIONLA != null ?
                new ObjectParameter("TRANSACTIONLA", tRANSACTIONLA) :
                new ObjectParameter("TRANSACTIONLA", typeof(string));
    
            var sTATETRANSACTIONParameter = sTATETRANSACTION != null ?
                new ObjectParameter("STATETRANSACTION", sTATETRANSACTION) :
                new ObjectParameter("STATETRANSACTION", typeof(string));
    
            var sTATEPURCHASEORDERParameter = sTATEPURCHASEORDER != null ?
                new ObjectParameter("STATEPURCHASEORDER", sTATEPURCHASEORDER) :
                new ObjectParameter("STATEPURCHASEORDER", typeof(string));
    
            var pURCHASEORDERParameter = pURCHASEORDER != null ?
                new ObjectParameter("PURCHASEORDER", pURCHASEORDER) :
                new ObjectParameter("PURCHASEORDER", typeof(string));
    
            var rESERVAParameter = rESERVA != null ?
                new ObjectParameter("RESERVA", rESERVA) :
                new ObjectParameter("RESERVA", typeof(string));
    
            var dESCRIPCIONParameter = dESCRIPCION != null ?
                new ObjectParameter("DESCRIPCION", dESCRIPCION) :
                new ObjectParameter("DESCRIPCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcAddPaymentDataWSIntegracion", rESULTCODE, rESULTMESSAGE, iDParameter, dOCUMENTPAYMENTParameter, tRANSACTIONLAParameter, sTATETRANSACTIONParameter, sTATEPURCHASEORDERParameter, pURCHASEORDERParameter, rESERVAParameter, dESCRIPCIONParameter);
        }
    
        public virtual int prcSpcAddRequestDataWSIntegracion(ObjectParameter rESULTCODE, ObjectParameter rESULTMESSAGE, Nullable<int> iD, string dOCUMENTREQUEST)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var dOCUMENTREQUESTParameter = dOCUMENTREQUEST != null ?
                new ObjectParameter("DOCUMENTREQUEST", dOCUMENTREQUEST) :
                new ObjectParameter("DOCUMENTREQUEST", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcAddRequestDataWSIntegracion", rESULTCODE, rESULTMESSAGE, iDParameter, dOCUMENTREQUESTParameter);
        }
    
        public virtual int prcSpcAddSesionDataWSIntegracion(ObjectParameter rESULTCODE, ObjectParameter rESULTMESSAGE, ObjectParameter rESULTID, string eNTID, string oRGID, string uSRID, string dOCUMENTSESION, string tICKETID, Nullable<int> iDLA, string lA)
        {
            var eNTIDParameter = eNTID != null ?
                new ObjectParameter("ENTID", eNTID) :
                new ObjectParameter("ENTID", typeof(string));
    
            var oRGIDParameter = oRGID != null ?
                new ObjectParameter("ORGID", oRGID) :
                new ObjectParameter("ORGID", typeof(string));
    
            var uSRIDParameter = uSRID != null ?
                new ObjectParameter("USRID", uSRID) :
                new ObjectParameter("USRID", typeof(string));
    
            var dOCUMENTSESIONParameter = dOCUMENTSESION != null ?
                new ObjectParameter("DOCUMENTSESION", dOCUMENTSESION) :
                new ObjectParameter("DOCUMENTSESION", typeof(string));
    
            var tICKETIDParameter = tICKETID != null ?
                new ObjectParameter("TICKETID", tICKETID) :
                new ObjectParameter("TICKETID", typeof(string));
    
            var iDLAParameter = iDLA.HasValue ?
                new ObjectParameter("IDLA", iDLA) :
                new ObjectParameter("IDLA", typeof(int));
    
            var lAParameter = lA != null ?
                new ObjectParameter("LA", lA) :
                new ObjectParameter("LA", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcAddSesionDataWSIntegracion", rESULTCODE, rESULTMESSAGE, rESULTID, eNTIDParameter, oRGIDParameter, uSRIDParameter, dOCUMENTSESIONParameter, tICKETIDParameter, iDLAParameter, lAParameter);
        }
    
        public virtual int prcSpcAddUserEvaluationCommission(Nullable<int> intrfbCode, string strRecFirstName, string strRecLastName, string strRecPosition, string strRecTaxID, string strRecEmail)
        {
            var intrfbCodeParameter = intrfbCode.HasValue ?
                new ObjectParameter("intrfbCode", intrfbCode) :
                new ObjectParameter("intrfbCode", typeof(int));
    
            var strRecFirstNameParameter = strRecFirstName != null ?
                new ObjectParameter("StrRecFirstName", strRecFirstName) :
                new ObjectParameter("StrRecFirstName", typeof(string));
    
            var strRecLastNameParameter = strRecLastName != null ?
                new ObjectParameter("StrRecLastName", strRecLastName) :
                new ObjectParameter("StrRecLastName", typeof(string));
    
            var strRecPositionParameter = strRecPosition != null ?
                new ObjectParameter("StrRecPosition", strRecPosition) :
                new ObjectParameter("StrRecPosition", typeof(string));
    
            var strRecTaxIDParameter = strRecTaxID != null ?
                new ObjectParameter("StrRecTaxID", strRecTaxID) :
                new ObjectParameter("StrRecTaxID", typeof(string));
    
            var strRecEmailParameter = strRecEmail != null ?
                new ObjectParameter("StrRecEmail", strRecEmail) :
                new ObjectParameter("StrRecEmail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcAddUserEvaluationCommission", intrfbCodeParameter, strRecFirstNameParameter, strRecLastNameParameter, strRecPositionParameter, strRecTaxIDParameter, strRecEmailParameter);
        }
    
        public virtual int prcSpcAddXMLTransactionLA(ObjectParameter rESULTCODE, ObjectParameter rESULTMESSAGE, ObjectParameter rESULTID, string xMLDOCUMENT)
        {
            var xMLDOCUMENTParameter = xMLDOCUMENT != null ?
                new ObjectParameter("XMLDOCUMENT", xMLDOCUMENT) :
                new ObjectParameter("XMLDOCUMENT", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcAddXMLTransactionLA", rESULTCODE, rESULTMESSAGE, rESULTID, xMLDOCUMENTParameter);
        }
    
        public virtual int prcSpcALTERprcPOItem(ObjectParameter resultId, Nullable<int> poiOrder, Nullable<double> poiQuantity, Nullable<double> poiNetPrice, Nullable<int> poiGoodAndService, string poiName, string poiDescription, Nullable<int> poiSchema, string poiCategory, Nullable<double> poiTotalDiscount, Nullable<double> poiTotalCharge, Nullable<double> poiTotalTax, string poiUserDefined1)
        {
            var poiOrderParameter = poiOrder.HasValue ?
                new ObjectParameter("poiOrder", poiOrder) :
                new ObjectParameter("poiOrder", typeof(int));
    
            var poiQuantityParameter = poiQuantity.HasValue ?
                new ObjectParameter("poiQuantity", poiQuantity) :
                new ObjectParameter("poiQuantity", typeof(double));
    
            var poiNetPriceParameter = poiNetPrice.HasValue ?
                new ObjectParameter("poiNetPrice", poiNetPrice) :
                new ObjectParameter("poiNetPrice", typeof(double));
    
            var poiGoodAndServiceParameter = poiGoodAndService.HasValue ?
                new ObjectParameter("poiGoodAndService", poiGoodAndService) :
                new ObjectParameter("poiGoodAndService", typeof(int));
    
            var poiNameParameter = poiName != null ?
                new ObjectParameter("poiName", poiName) :
                new ObjectParameter("poiName", typeof(string));
    
            var poiDescriptionParameter = poiDescription != null ?
                new ObjectParameter("poiDescription", poiDescription) :
                new ObjectParameter("poiDescription", typeof(string));
    
            var poiSchemaParameter = poiSchema.HasValue ?
                new ObjectParameter("poiSchema", poiSchema) :
                new ObjectParameter("poiSchema", typeof(int));
    
            var poiCategoryParameter = poiCategory != null ?
                new ObjectParameter("poiCategory", poiCategory) :
                new ObjectParameter("poiCategory", typeof(string));
    
            var poiTotalDiscountParameter = poiTotalDiscount.HasValue ?
                new ObjectParameter("poiTotalDiscount", poiTotalDiscount) :
                new ObjectParameter("poiTotalDiscount", typeof(double));
    
            var poiTotalChargeParameter = poiTotalCharge.HasValue ?
                new ObjectParameter("poiTotalCharge", poiTotalCharge) :
                new ObjectParameter("poiTotalCharge", typeof(double));
    
            var poiTotalTaxParameter = poiTotalTax.HasValue ?
                new ObjectParameter("poiTotalTax", poiTotalTax) :
                new ObjectParameter("poiTotalTax", typeof(double));
    
            var poiUserDefined1Parameter = poiUserDefined1 != null ?
                new ObjectParameter("poiUserDefined1", poiUserDefined1) :
                new ObjectParameter("poiUserDefined1", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcALTERprcPOItem", resultId, poiOrderParameter, poiQuantityParameter, poiNetPriceParameter, poiGoodAndServiceParameter, poiNameParameter, poiDescriptionParameter, poiSchemaParameter, poiCategoryParameter, poiTotalDiscountParameter, poiTotalChargeParameter, poiTotalTaxParameter, poiUserDefined1Parameter);
        }
    
        public virtual int prcSpcALTERprcPOItemByCart(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, Nullable<int> poiGoodAndService, string poiBuyerPartCode, string poiSellerPartCode, string poiMfrPartCode, Nullable<double> poiQuantity, string poiUOM, string poiDescription, string poiName, string poiCategory, Nullable<int> poiSchema, Nullable<int> poiOrder, Nullable<int> poiFrameworkContract)
        {
            var poiGoodAndServiceParameter = poiGoodAndService.HasValue ?
                new ObjectParameter("poiGoodAndService", poiGoodAndService) :
                new ObjectParameter("poiGoodAndService", typeof(int));
    
            var poiBuyerPartCodeParameter = poiBuyerPartCode != null ?
                new ObjectParameter("poiBuyerPartCode", poiBuyerPartCode) :
                new ObjectParameter("poiBuyerPartCode", typeof(string));
    
            var poiSellerPartCodeParameter = poiSellerPartCode != null ?
                new ObjectParameter("poiSellerPartCode", poiSellerPartCode) :
                new ObjectParameter("poiSellerPartCode", typeof(string));
    
            var poiMfrPartCodeParameter = poiMfrPartCode != null ?
                new ObjectParameter("poiMfrPartCode", poiMfrPartCode) :
                new ObjectParameter("poiMfrPartCode", typeof(string));
    
            var poiQuantityParameter = poiQuantity.HasValue ?
                new ObjectParameter("poiQuantity", poiQuantity) :
                new ObjectParameter("poiQuantity", typeof(double));
    
            var poiUOMParameter = poiUOM != null ?
                new ObjectParameter("poiUOM", poiUOM) :
                new ObjectParameter("poiUOM", typeof(string));
    
            var poiDescriptionParameter = poiDescription != null ?
                new ObjectParameter("poiDescription", poiDescription) :
                new ObjectParameter("poiDescription", typeof(string));
    
            var poiNameParameter = poiName != null ?
                new ObjectParameter("poiName", poiName) :
                new ObjectParameter("poiName", typeof(string));
    
            var poiCategoryParameter = poiCategory != null ?
                new ObjectParameter("poiCategory", poiCategory) :
                new ObjectParameter("poiCategory", typeof(string));
    
            var poiSchemaParameter = poiSchema.HasValue ?
                new ObjectParameter("poiSchema", poiSchema) :
                new ObjectParameter("poiSchema", typeof(int));
    
            var poiOrderParameter = poiOrder.HasValue ?
                new ObjectParameter("poiOrder", poiOrder) :
                new ObjectParameter("poiOrder", typeof(int));
    
            var poiFrameworkContractParameter = poiFrameworkContract.HasValue ?
                new ObjectParameter("poiFrameworkContract", poiFrameworkContract) :
                new ObjectParameter("poiFrameworkContract", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcALTERprcPOItemByCart", resultCode, resultMessage, resultID, poiGoodAndServiceParameter, poiBuyerPartCodeParameter, poiSellerPartCodeParameter, poiMfrPartCodeParameter, poiQuantityParameter, poiUOMParameter, poiDescriptionParameter, poiNameParameter, poiCategoryParameter, poiSchemaParameter, poiOrderParameter, poiFrameworkContractParameter);
        }
    
        public virtual int prcSpcALTERprcPOItemIII(ObjectParameter resultId, Nullable<int> poiOrder, Nullable<double> poiQuantity, Nullable<double> poiNetPrice, Nullable<int> poiGoodAndService, string poiName, string poiDescription, Nullable<int> poiSchema, string poiCategory, Nullable<double> poiTotalDiscount, Nullable<double> poiTotalCharge, Nullable<double> poiTotalTax, string poiUserDefined1, string poiSupplierPartCode)
        {
            var poiOrderParameter = poiOrder.HasValue ?
                new ObjectParameter("poiOrder", poiOrder) :
                new ObjectParameter("poiOrder", typeof(int));
    
            var poiQuantityParameter = poiQuantity.HasValue ?
                new ObjectParameter("poiQuantity", poiQuantity) :
                new ObjectParameter("poiQuantity", typeof(double));
    
            var poiNetPriceParameter = poiNetPrice.HasValue ?
                new ObjectParameter("poiNetPrice", poiNetPrice) :
                new ObjectParameter("poiNetPrice", typeof(double));
    
            var poiGoodAndServiceParameter = poiGoodAndService.HasValue ?
                new ObjectParameter("poiGoodAndService", poiGoodAndService) :
                new ObjectParameter("poiGoodAndService", typeof(int));
    
            var poiNameParameter = poiName != null ?
                new ObjectParameter("poiName", poiName) :
                new ObjectParameter("poiName", typeof(string));
    
            var poiDescriptionParameter = poiDescription != null ?
                new ObjectParameter("poiDescription", poiDescription) :
                new ObjectParameter("poiDescription", typeof(string));
    
            var poiSchemaParameter = poiSchema.HasValue ?
                new ObjectParameter("poiSchema", poiSchema) :
                new ObjectParameter("poiSchema", typeof(int));
    
            var poiCategoryParameter = poiCategory != null ?
                new ObjectParameter("poiCategory", poiCategory) :
                new ObjectParameter("poiCategory", typeof(string));
    
            var poiTotalDiscountParameter = poiTotalDiscount.HasValue ?
                new ObjectParameter("poiTotalDiscount", poiTotalDiscount) :
                new ObjectParameter("poiTotalDiscount", typeof(double));
    
            var poiTotalChargeParameter = poiTotalCharge.HasValue ?
                new ObjectParameter("poiTotalCharge", poiTotalCharge) :
                new ObjectParameter("poiTotalCharge", typeof(double));
    
            var poiTotalTaxParameter = poiTotalTax.HasValue ?
                new ObjectParameter("poiTotalTax", poiTotalTax) :
                new ObjectParameter("poiTotalTax", typeof(double));
    
            var poiUserDefined1Parameter = poiUserDefined1 != null ?
                new ObjectParameter("poiUserDefined1", poiUserDefined1) :
                new ObjectParameter("poiUserDefined1", typeof(string));
    
            var poiSupplierPartCodeParameter = poiSupplierPartCode != null ?
                new ObjectParameter("poiSupplierPartCode", poiSupplierPartCode) :
                new ObjectParameter("poiSupplierPartCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcALTERprcPOItemIII", resultId, poiOrderParameter, poiQuantityParameter, poiNetPriceParameter, poiGoodAndServiceParameter, poiNameParameter, poiDescriptionParameter, poiSchemaParameter, poiCategoryParameter, poiTotalDiscountParameter, poiTotalChargeParameter, poiTotalTaxParameter, poiUserDefined1Parameter, poiSupplierPartCodeParameter);
        }
    
        public virtual int prcSpcALTERprcPOItemLA(ObjectParameter resultId, Nullable<int> poiOrder, Nullable<double> poiQuantity, Nullable<double> poiNetPrice, Nullable<int> poiGoodAndService, string poiName, string poiDescription, Nullable<int> poiSchema, string poiCategory, Nullable<double> poiTotalDiscount, Nullable<double> poiTotalCharge, Nullable<double> poiTotalTax, string poiUserDefined1)
        {
            var poiOrderParameter = poiOrder.HasValue ?
                new ObjectParameter("poiOrder", poiOrder) :
                new ObjectParameter("poiOrder", typeof(int));
    
            var poiQuantityParameter = poiQuantity.HasValue ?
                new ObjectParameter("poiQuantity", poiQuantity) :
                new ObjectParameter("poiQuantity", typeof(double));
    
            var poiNetPriceParameter = poiNetPrice.HasValue ?
                new ObjectParameter("poiNetPrice", poiNetPrice) :
                new ObjectParameter("poiNetPrice", typeof(double));
    
            var poiGoodAndServiceParameter = poiGoodAndService.HasValue ?
                new ObjectParameter("poiGoodAndService", poiGoodAndService) :
                new ObjectParameter("poiGoodAndService", typeof(int));
    
            var poiNameParameter = poiName != null ?
                new ObjectParameter("poiName", poiName) :
                new ObjectParameter("poiName", typeof(string));
    
            var poiDescriptionParameter = poiDescription != null ?
                new ObjectParameter("poiDescription", poiDescription) :
                new ObjectParameter("poiDescription", typeof(string));
    
            var poiSchemaParameter = poiSchema.HasValue ?
                new ObjectParameter("poiSchema", poiSchema) :
                new ObjectParameter("poiSchema", typeof(int));
    
            var poiCategoryParameter = poiCategory != null ?
                new ObjectParameter("poiCategory", poiCategory) :
                new ObjectParameter("poiCategory", typeof(string));
    
            var poiTotalDiscountParameter = poiTotalDiscount.HasValue ?
                new ObjectParameter("poiTotalDiscount", poiTotalDiscount) :
                new ObjectParameter("poiTotalDiscount", typeof(double));
    
            var poiTotalChargeParameter = poiTotalCharge.HasValue ?
                new ObjectParameter("poiTotalCharge", poiTotalCharge) :
                new ObjectParameter("poiTotalCharge", typeof(double));
    
            var poiTotalTaxParameter = poiTotalTax.HasValue ?
                new ObjectParameter("poiTotalTax", poiTotalTax) :
                new ObjectParameter("poiTotalTax", typeof(double));
    
            var poiUserDefined1Parameter = poiUserDefined1 != null ?
                new ObjectParameter("poiUserDefined1", poiUserDefined1) :
                new ObjectParameter("poiUserDefined1", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcALTERprcPOItemLA", resultId, poiOrderParameter, poiQuantityParameter, poiNetPriceParameter, poiGoodAndServiceParameter, poiNameParameter, poiDescriptionParameter, poiSchemaParameter, poiCategoryParameter, poiTotalDiscountParameter, poiTotalChargeParameter, poiTotalTaxParameter, poiUserDefined1Parameter);
        }
    
        public virtual int prcSpcALTERprcRFBHeaderFromHeader(ObjectParameter resultCode, ObjectParameter requisition, ObjectParameter resultMessage, ObjectParameter resultID, Nullable<int> rbhCode, Nullable<System.DateTime> rbhCreationDate, string rbhExternalCode, Nullable<int> rbhProcessType, Nullable<int> rbhDocumentStatus, Nullable<int> rbhProcessSubType, string rbhProcessSubTypeAbbreviation, string rbhUser, string rbhName, string rbhDescription, Nullable<bool> rFBItem, Nullable<bool> rFBRequisite, Nullable<bool> rFBLegalRecords, Nullable<bool> rFBAwardCriteria, Nullable<bool> rFBGuarantee, Nullable<bool> rFBClause, Nullable<bool> administrativePrecedents, Nullable<bool> organizationContact, Nullable<bool> contract, string rbhContactFax, string rbhContactPhone, string rbhContactEmail, string rbhContactPosition, string rbhContactLastName, string rbhContactFirstName, Nullable<int> rbhContactCode, string rbhOwnerDistrict, string rbhOwnerCity, string rbhOwnerCountry, string rbhOwnerAddress, string rbhContractPaymentMethod, Nullable<int> rbhContractTimePeriod, Nullable<int> rbhContractTime, Nullable<int> rbhContractDuration, string rbhEstimatedCurrency, Nullable<double> rbhEstimatedAmount, Nullable<short> rbhIsUniqueCurrency, string rbhCurrency, string rbhObservationCheckText, string rbhObservationComment, string rbhOwnerName, string rbhOrganization, string rbhEnterprise, string rbhOwnerOrganizationCode, string rbhOwnerUnit)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            var rbhCreationDateParameter = rbhCreationDate.HasValue ?
                new ObjectParameter("rbhCreationDate", rbhCreationDate) :
                new ObjectParameter("rbhCreationDate", typeof(System.DateTime));
    
            var rbhExternalCodeParameter = rbhExternalCode != null ?
                new ObjectParameter("rbhExternalCode", rbhExternalCode) :
                new ObjectParameter("rbhExternalCode", typeof(string));
    
            var rbhProcessTypeParameter = rbhProcessType.HasValue ?
                new ObjectParameter("rbhProcessType", rbhProcessType) :
                new ObjectParameter("rbhProcessType", typeof(int));
    
            var rbhDocumentStatusParameter = rbhDocumentStatus.HasValue ?
                new ObjectParameter("rbhDocumentStatus", rbhDocumentStatus) :
                new ObjectParameter("rbhDocumentStatus", typeof(int));
    
            var rbhProcessSubTypeParameter = rbhProcessSubType.HasValue ?
                new ObjectParameter("rbhProcessSubType", rbhProcessSubType) :
                new ObjectParameter("rbhProcessSubType", typeof(int));
    
            var rbhProcessSubTypeAbbreviationParameter = rbhProcessSubTypeAbbreviation != null ?
                new ObjectParameter("rbhProcessSubTypeAbbreviation", rbhProcessSubTypeAbbreviation) :
                new ObjectParameter("rbhProcessSubTypeAbbreviation", typeof(string));
    
            var rbhUserParameter = rbhUser != null ?
                new ObjectParameter("rbhUser", rbhUser) :
                new ObjectParameter("rbhUser", typeof(string));
    
            var rbhNameParameter = rbhName != null ?
                new ObjectParameter("rbhName", rbhName) :
                new ObjectParameter("rbhName", typeof(string));
    
            var rbhDescriptionParameter = rbhDescription != null ?
                new ObjectParameter("rbhDescription", rbhDescription) :
                new ObjectParameter("rbhDescription", typeof(string));
    
            var rFBItemParameter = rFBItem.HasValue ?
                new ObjectParameter("RFBItem", rFBItem) :
                new ObjectParameter("RFBItem", typeof(bool));
    
            var rFBRequisiteParameter = rFBRequisite.HasValue ?
                new ObjectParameter("RFBRequisite", rFBRequisite) :
                new ObjectParameter("RFBRequisite", typeof(bool));
    
            var rFBLegalRecordsParameter = rFBLegalRecords.HasValue ?
                new ObjectParameter("RFBLegalRecords", rFBLegalRecords) :
                new ObjectParameter("RFBLegalRecords", typeof(bool));
    
            var rFBAwardCriteriaParameter = rFBAwardCriteria.HasValue ?
                new ObjectParameter("RFBAwardCriteria", rFBAwardCriteria) :
                new ObjectParameter("RFBAwardCriteria", typeof(bool));
    
            var rFBGuaranteeParameter = rFBGuarantee.HasValue ?
                new ObjectParameter("RFBGuarantee", rFBGuarantee) :
                new ObjectParameter("RFBGuarantee", typeof(bool));
    
            var rFBClauseParameter = rFBClause.HasValue ?
                new ObjectParameter("RFBClause", rFBClause) :
                new ObjectParameter("RFBClause", typeof(bool));
    
            var administrativePrecedentsParameter = administrativePrecedents.HasValue ?
                new ObjectParameter("AdministrativePrecedents", administrativePrecedents) :
                new ObjectParameter("AdministrativePrecedents", typeof(bool));
    
            var organizationContactParameter = organizationContact.HasValue ?
                new ObjectParameter("OrganizationContact", organizationContact) :
                new ObjectParameter("OrganizationContact", typeof(bool));
    
            var contractParameter = contract.HasValue ?
                new ObjectParameter("Contract", contract) :
                new ObjectParameter("Contract", typeof(bool));
    
            var rbhContactFaxParameter = rbhContactFax != null ?
                new ObjectParameter("rbhContactFax", rbhContactFax) :
                new ObjectParameter("rbhContactFax", typeof(string));
    
            var rbhContactPhoneParameter = rbhContactPhone != null ?
                new ObjectParameter("rbhContactPhone", rbhContactPhone) :
                new ObjectParameter("rbhContactPhone", typeof(string));
    
            var rbhContactEmailParameter = rbhContactEmail != null ?
                new ObjectParameter("rbhContactEmail", rbhContactEmail) :
                new ObjectParameter("rbhContactEmail", typeof(string));
    
            var rbhContactPositionParameter = rbhContactPosition != null ?
                new ObjectParameter("rbhContactPosition", rbhContactPosition) :
                new ObjectParameter("rbhContactPosition", typeof(string));
    
            var rbhContactLastNameParameter = rbhContactLastName != null ?
                new ObjectParameter("rbhContactLastName", rbhContactLastName) :
                new ObjectParameter("rbhContactLastName", typeof(string));
    
            var rbhContactFirstNameParameter = rbhContactFirstName != null ?
                new ObjectParameter("rbhContactFirstName", rbhContactFirstName) :
                new ObjectParameter("rbhContactFirstName", typeof(string));
    
            var rbhContactCodeParameter = rbhContactCode.HasValue ?
                new ObjectParameter("rbhContactCode", rbhContactCode) :
                new ObjectParameter("rbhContactCode", typeof(int));
    
            var rbhOwnerDistrictParameter = rbhOwnerDistrict != null ?
                new ObjectParameter("rbhOwnerDistrict", rbhOwnerDistrict) :
                new ObjectParameter("rbhOwnerDistrict", typeof(string));
    
            var rbhOwnerCityParameter = rbhOwnerCity != null ?
                new ObjectParameter("rbhOwnerCity", rbhOwnerCity) :
                new ObjectParameter("rbhOwnerCity", typeof(string));
    
            var rbhOwnerCountryParameter = rbhOwnerCountry != null ?
                new ObjectParameter("rbhOwnerCountry", rbhOwnerCountry) :
                new ObjectParameter("rbhOwnerCountry", typeof(string));
    
            var rbhOwnerAddressParameter = rbhOwnerAddress != null ?
                new ObjectParameter("rbhOwnerAddress", rbhOwnerAddress) :
                new ObjectParameter("rbhOwnerAddress", typeof(string));
    
            var rbhContractPaymentMethodParameter = rbhContractPaymentMethod != null ?
                new ObjectParameter("rbhContractPaymentMethod", rbhContractPaymentMethod) :
                new ObjectParameter("rbhContractPaymentMethod", typeof(string));
    
            var rbhContractTimePeriodParameter = rbhContractTimePeriod.HasValue ?
                new ObjectParameter("rbhContractTimePeriod", rbhContractTimePeriod) :
                new ObjectParameter("rbhContractTimePeriod", typeof(int));
    
            var rbhContractTimeParameter = rbhContractTime.HasValue ?
                new ObjectParameter("rbhContractTime", rbhContractTime) :
                new ObjectParameter("rbhContractTime", typeof(int));
    
            var rbhContractDurationParameter = rbhContractDuration.HasValue ?
                new ObjectParameter("rbhContractDuration", rbhContractDuration) :
                new ObjectParameter("rbhContractDuration", typeof(int));
    
            var rbhEstimatedCurrencyParameter = rbhEstimatedCurrency != null ?
                new ObjectParameter("rbhEstimatedCurrency", rbhEstimatedCurrency) :
                new ObjectParameter("rbhEstimatedCurrency", typeof(string));
    
            var rbhEstimatedAmountParameter = rbhEstimatedAmount.HasValue ?
                new ObjectParameter("rbhEstimatedAmount", rbhEstimatedAmount) :
                new ObjectParameter("rbhEstimatedAmount", typeof(double));
    
            var rbhIsUniqueCurrencyParameter = rbhIsUniqueCurrency.HasValue ?
                new ObjectParameter("rbhIsUniqueCurrency", rbhIsUniqueCurrency) :
                new ObjectParameter("rbhIsUniqueCurrency", typeof(short));
    
            var rbhCurrencyParameter = rbhCurrency != null ?
                new ObjectParameter("rbhCurrency", rbhCurrency) :
                new ObjectParameter("rbhCurrency", typeof(string));
    
            var rbhObservationCheckTextParameter = rbhObservationCheckText != null ?
                new ObjectParameter("rbhObservationCheckText", rbhObservationCheckText) :
                new ObjectParameter("rbhObservationCheckText", typeof(string));
    
            var rbhObservationCommentParameter = rbhObservationComment != null ?
                new ObjectParameter("rbhObservationComment", rbhObservationComment) :
                new ObjectParameter("rbhObservationComment", typeof(string));
    
            var rbhOwnerNameParameter = rbhOwnerName != null ?
                new ObjectParameter("rbhOwnerName", rbhOwnerName) :
                new ObjectParameter("rbhOwnerName", typeof(string));
    
            var rbhOrganizationParameter = rbhOrganization != null ?
                new ObjectParameter("rbhOrganization", rbhOrganization) :
                new ObjectParameter("rbhOrganization", typeof(string));
    
            var rbhEnterpriseParameter = rbhEnterprise != null ?
                new ObjectParameter("rbhEnterprise", rbhEnterprise) :
                new ObjectParameter("rbhEnterprise", typeof(string));
    
            var rbhOwnerOrganizationCodeParameter = rbhOwnerOrganizationCode != null ?
                new ObjectParameter("rbhOwnerOrganizationCode", rbhOwnerOrganizationCode) :
                new ObjectParameter("rbhOwnerOrganizationCode", typeof(string));
    
            var rbhOwnerUnitParameter = rbhOwnerUnit != null ?
                new ObjectParameter("rbhOwnerUnit", rbhOwnerUnit) :
                new ObjectParameter("rbhOwnerUnit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcALTERprcRFBHeaderFromHeader", resultCode, requisition, resultMessage, resultID, rbhCodeParameter, rbhCreationDateParameter, rbhExternalCodeParameter, rbhProcessTypeParameter, rbhDocumentStatusParameter, rbhProcessSubTypeParameter, rbhProcessSubTypeAbbreviationParameter, rbhUserParameter, rbhNameParameter, rbhDescriptionParameter, rFBItemParameter, rFBRequisiteParameter, rFBLegalRecordsParameter, rFBAwardCriteriaParameter, rFBGuaranteeParameter, rFBClauseParameter, administrativePrecedentsParameter, organizationContactParameter, contractParameter, rbhContactFaxParameter, rbhContactPhoneParameter, rbhContactEmailParameter, rbhContactPositionParameter, rbhContactLastNameParameter, rbhContactFirstNameParameter, rbhContactCodeParameter, rbhOwnerDistrictParameter, rbhOwnerCityParameter, rbhOwnerCountryParameter, rbhOwnerAddressParameter, rbhContractPaymentMethodParameter, rbhContractTimePeriodParameter, rbhContractTimeParameter, rbhContractDurationParameter, rbhEstimatedCurrencyParameter, rbhEstimatedAmountParameter, rbhIsUniqueCurrencyParameter, rbhCurrencyParameter, rbhObservationCheckTextParameter, rbhObservationCommentParameter, rbhOwnerNameParameter, rbhOrganizationParameter, rbhEnterpriseParameter, rbhOwnerOrganizationCodeParameter, rbhOwnerUnitParameter);
        }
    
        public virtual ObjectResult<prcSpcBuscaOCProv_Result> prcSpcBuscaOCProv(string porOrg, Nullable<System.DateTime> porFrom, Nullable<System.DateTime> porTo, string porOrderBy, Nullable<int> porOrgClassLog, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var porOrgParameter = porOrg != null ?
                new ObjectParameter("porOrg", porOrg) :
                new ObjectParameter("porOrg", typeof(string));
    
            var porFromParameter = porFrom.HasValue ?
                new ObjectParameter("porFrom", porFrom) :
                new ObjectParameter("porFrom", typeof(System.DateTime));
    
            var porToParameter = porTo.HasValue ?
                new ObjectParameter("porTo", porTo) :
                new ObjectParameter("porTo", typeof(System.DateTime));
    
            var porOrderByParameter = porOrderBy != null ?
                new ObjectParameter("porOrderBy", porOrderBy) :
                new ObjectParameter("porOrderBy", typeof(string));
    
            var porOrgClassLogParameter = porOrgClassLog.HasValue ?
                new ObjectParameter("porOrgClassLog", porOrgClassLog) :
                new ObjectParameter("porOrgClassLog", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcBuscaOCProv_Result>("prcSpcBuscaOCProv", porOrgParameter, porFromParameter, porToParameter, porOrderByParameter, porOrgClassLogParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual int prcSpcBuscaOCProv_Cliente(string porOrg, string porProv, Nullable<System.DateTime> porFrom, Nullable<System.DateTime> porTo, string porOrderBy, Nullable<int> porOrgClassLog, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var porOrgParameter = porOrg != null ?
                new ObjectParameter("porOrg", porOrg) :
                new ObjectParameter("porOrg", typeof(string));
    
            var porProvParameter = porProv != null ?
                new ObjectParameter("porProv", porProv) :
                new ObjectParameter("porProv", typeof(string));
    
            var porFromParameter = porFrom.HasValue ?
                new ObjectParameter("porFrom", porFrom) :
                new ObjectParameter("porFrom", typeof(System.DateTime));
    
            var porToParameter = porTo.HasValue ?
                new ObjectParameter("porTo", porTo) :
                new ObjectParameter("porTo", typeof(System.DateTime));
    
            var porOrderByParameter = porOrderBy != null ?
                new ObjectParameter("porOrderBy", porOrderBy) :
                new ObjectParameter("porOrderBy", typeof(string));
    
            var porOrgClassLogParameter = porOrgClassLog.HasValue ?
                new ObjectParameter("porOrgClassLog", porOrgClassLog) :
                new ObjectParameter("porOrgClassLog", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcBuscaOCProv_Cliente", porOrgParameter, porProvParameter, porFromParameter, porToParameter, porOrderByParameter, porOrgClassLogParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual int prcSpcBuscaOCProv_Cliente_Estado(string porOrg, string porProv, Nullable<System.DateTime> porFrom, Nullable<System.DateTime> porTo, Nullable<int> porState, string porOrderBy, Nullable<int> porOrgClassLog, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var porOrgParameter = porOrg != null ?
                new ObjectParameter("porOrg", porOrg) :
                new ObjectParameter("porOrg", typeof(string));
    
            var porProvParameter = porProv != null ?
                new ObjectParameter("porProv", porProv) :
                new ObjectParameter("porProv", typeof(string));
    
            var porFromParameter = porFrom.HasValue ?
                new ObjectParameter("porFrom", porFrom) :
                new ObjectParameter("porFrom", typeof(System.DateTime));
    
            var porToParameter = porTo.HasValue ?
                new ObjectParameter("porTo", porTo) :
                new ObjectParameter("porTo", typeof(System.DateTime));
    
            var porStateParameter = porState.HasValue ?
                new ObjectParameter("porState", porState) :
                new ObjectParameter("porState", typeof(int));
    
            var porOrderByParameter = porOrderBy != null ?
                new ObjectParameter("porOrderBy", porOrderBy) :
                new ObjectParameter("porOrderBy", typeof(string));
    
            var porOrgClassLogParameter = porOrgClassLog.HasValue ?
                new ObjectParameter("porOrgClassLog", porOrgClassLog) :
                new ObjectParameter("porOrgClassLog", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcBuscaOCProv_Cliente_Estado", porOrgParameter, porProvParameter, porFromParameter, porToParameter, porStateParameter, porOrderByParameter, porOrgClassLogParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual int prcSpcBuscaOCProv_Cliente_EstadoExcel(string porOrg, string porProv, Nullable<System.DateTime> porFrom, Nullable<System.DateTime> porTo, Nullable<int> porState, string porOrderBy, Nullable<int> porOrgClassLog)
        {
            var porOrgParameter = porOrg != null ?
                new ObjectParameter("porOrg", porOrg) :
                new ObjectParameter("porOrg", typeof(string));
    
            var porProvParameter = porProv != null ?
                new ObjectParameter("porProv", porProv) :
                new ObjectParameter("porProv", typeof(string));
    
            var porFromParameter = porFrom.HasValue ?
                new ObjectParameter("porFrom", porFrom) :
                new ObjectParameter("porFrom", typeof(System.DateTime));
    
            var porToParameter = porTo.HasValue ?
                new ObjectParameter("porTo", porTo) :
                new ObjectParameter("porTo", typeof(System.DateTime));
    
            var porStateParameter = porState.HasValue ?
                new ObjectParameter("porState", porState) :
                new ObjectParameter("porState", typeof(int));
    
            var porOrderByParameter = porOrderBy != null ?
                new ObjectParameter("porOrderBy", porOrderBy) :
                new ObjectParameter("porOrderBy", typeof(string));
    
            var porOrgClassLogParameter = porOrgClassLog.HasValue ?
                new ObjectParameter("porOrgClassLog", porOrgClassLog) :
                new ObjectParameter("porOrgClassLog", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcBuscaOCProv_Cliente_EstadoExcel", porOrgParameter, porProvParameter, porFromParameter, porToParameter, porStateParameter, porOrderByParameter, porOrgClassLogParameter);
        }
    
        public virtual int prcSpcBuscaOCProv_ClienteExcel(string porOrg, string porProv, Nullable<System.DateTime> porFrom, Nullable<System.DateTime> porTo, string porOrderBy, Nullable<int> porOrgClassLog)
        {
            var porOrgParameter = porOrg != null ?
                new ObjectParameter("porOrg", porOrg) :
                new ObjectParameter("porOrg", typeof(string));
    
            var porProvParameter = porProv != null ?
                new ObjectParameter("porProv", porProv) :
                new ObjectParameter("porProv", typeof(string));
    
            var porFromParameter = porFrom.HasValue ?
                new ObjectParameter("porFrom", porFrom) :
                new ObjectParameter("porFrom", typeof(System.DateTime));
    
            var porToParameter = porTo.HasValue ?
                new ObjectParameter("porTo", porTo) :
                new ObjectParameter("porTo", typeof(System.DateTime));
    
            var porOrderByParameter = porOrderBy != null ?
                new ObjectParameter("porOrderBy", porOrderBy) :
                new ObjectParameter("porOrderBy", typeof(string));
    
            var porOrgClassLogParameter = porOrgClassLog.HasValue ?
                new ObjectParameter("porOrgClassLog", porOrgClassLog) :
                new ObjectParameter("porOrgClassLog", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcBuscaOCProv_ClienteExcel", porOrgParameter, porProvParameter, porFromParameter, porToParameter, porOrderByParameter, porOrgClassLogParameter);
        }
    
        public virtual ObjectResult<prcSpcBuscaOCProv_Estado_Result> prcSpcBuscaOCProv_Estado(string porOrg, Nullable<System.DateTime> porFrom, Nullable<System.DateTime> porTo, Nullable<int> porState, string porOrderBy, Nullable<int> porOrgClassLog, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var porOrgParameter = porOrg != null ?
                new ObjectParameter("porOrg", porOrg) :
                new ObjectParameter("porOrg", typeof(string));
    
            var porFromParameter = porFrom.HasValue ?
                new ObjectParameter("porFrom", porFrom) :
                new ObjectParameter("porFrom", typeof(System.DateTime));
    
            var porToParameter = porTo.HasValue ?
                new ObjectParameter("porTo", porTo) :
                new ObjectParameter("porTo", typeof(System.DateTime));
    
            var porStateParameter = porState.HasValue ?
                new ObjectParameter("porState", porState) :
                new ObjectParameter("porState", typeof(int));
    
            var porOrderByParameter = porOrderBy != null ?
                new ObjectParameter("porOrderBy", porOrderBy) :
                new ObjectParameter("porOrderBy", typeof(string));
    
            var porOrgClassLogParameter = porOrgClassLog.HasValue ?
                new ObjectParameter("porOrgClassLog", porOrgClassLog) :
                new ObjectParameter("porOrgClassLog", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcBuscaOCProv_Estado_Result>("prcSpcBuscaOCProv_Estado", porOrgParameter, porFromParameter, porToParameter, porStateParameter, porOrderByParameter, porOrgClassLogParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcBuscaOCProv_EstadoExcel_Result> prcSpcBuscaOCProv_EstadoExcel(string porOrg, Nullable<System.DateTime> porFrom, Nullable<System.DateTime> porTo, Nullable<int> porState, string porOrderBy, Nullable<int> porOrgClassLog)
        {
            var porOrgParameter = porOrg != null ?
                new ObjectParameter("porOrg", porOrg) :
                new ObjectParameter("porOrg", typeof(string));
    
            var porFromParameter = porFrom.HasValue ?
                new ObjectParameter("porFrom", porFrom) :
                new ObjectParameter("porFrom", typeof(System.DateTime));
    
            var porToParameter = porTo.HasValue ?
                new ObjectParameter("porTo", porTo) :
                new ObjectParameter("porTo", typeof(System.DateTime));
    
            var porStateParameter = porState.HasValue ?
                new ObjectParameter("porState", porState) :
                new ObjectParameter("porState", typeof(int));
    
            var porOrderByParameter = porOrderBy != null ?
                new ObjectParameter("porOrderBy", porOrderBy) :
                new ObjectParameter("porOrderBy", typeof(string));
    
            var porOrgClassLogParameter = porOrgClassLog.HasValue ?
                new ObjectParameter("porOrgClassLog", porOrgClassLog) :
                new ObjectParameter("porOrgClassLog", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcBuscaOCProv_EstadoExcel_Result>("prcSpcBuscaOCProv_EstadoExcel", porOrgParameter, porFromParameter, porToParameter, porStateParameter, porOrderByParameter, porOrgClassLogParameter);
        }
    
        public virtual ObjectResult<prcSpcBuscaOCProv_Nombre_Result> prcSpcBuscaOCProv_Nombre(string porName, string porOrg, Nullable<System.DateTime> porFrom, Nullable<System.DateTime> porTo, string porOrderBy, Nullable<int> porOrgClassLog, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var porNameParameter = porName != null ?
                new ObjectParameter("porName", porName) :
                new ObjectParameter("porName", typeof(string));
    
            var porOrgParameter = porOrg != null ?
                new ObjectParameter("porOrg", porOrg) :
                new ObjectParameter("porOrg", typeof(string));
    
            var porFromParameter = porFrom.HasValue ?
                new ObjectParameter("porFrom", porFrom) :
                new ObjectParameter("porFrom", typeof(System.DateTime));
    
            var porToParameter = porTo.HasValue ?
                new ObjectParameter("porTo", porTo) :
                new ObjectParameter("porTo", typeof(System.DateTime));
    
            var porOrderByParameter = porOrderBy != null ?
                new ObjectParameter("porOrderBy", porOrderBy) :
                new ObjectParameter("porOrderBy", typeof(string));
    
            var porOrgClassLogParameter = porOrgClassLog.HasValue ?
                new ObjectParameter("porOrgClassLog", porOrgClassLog) :
                new ObjectParameter("porOrgClassLog", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcBuscaOCProv_Nombre_Result>("prcSpcBuscaOCProv_Nombre", porNameParameter, porOrgParameter, porFromParameter, porToParameter, porOrderByParameter, porOrgClassLogParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual int prcSpcBuscaOCProv_Nombre_Cliente(string porName, string porOrg, string porProv, Nullable<System.DateTime> porFrom, Nullable<System.DateTime> porTo, string porOrderBy, Nullable<int> porOrgClassLog, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var porNameParameter = porName != null ?
                new ObjectParameter("porName", porName) :
                new ObjectParameter("porName", typeof(string));
    
            var porOrgParameter = porOrg != null ?
                new ObjectParameter("porOrg", porOrg) :
                new ObjectParameter("porOrg", typeof(string));
    
            var porProvParameter = porProv != null ?
                new ObjectParameter("porProv", porProv) :
                new ObjectParameter("porProv", typeof(string));
    
            var porFromParameter = porFrom.HasValue ?
                new ObjectParameter("porFrom", porFrom) :
                new ObjectParameter("porFrom", typeof(System.DateTime));
    
            var porToParameter = porTo.HasValue ?
                new ObjectParameter("porTo", porTo) :
                new ObjectParameter("porTo", typeof(System.DateTime));
    
            var porOrderByParameter = porOrderBy != null ?
                new ObjectParameter("porOrderBy", porOrderBy) :
                new ObjectParameter("porOrderBy", typeof(string));
    
            var porOrgClassLogParameter = porOrgClassLog.HasValue ?
                new ObjectParameter("porOrgClassLog", porOrgClassLog) :
                new ObjectParameter("porOrgClassLog", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcBuscaOCProv_Nombre_Cliente", porNameParameter, porOrgParameter, porProvParameter, porFromParameter, porToParameter, porOrderByParameter, porOrgClassLogParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual int prcSpcBuscaOCProv_Nombre_Cliente_Estado(string porName, string porOrg, string porProv, Nullable<System.DateTime> porFrom, Nullable<System.DateTime> porTo, Nullable<int> porState, string porOrderBy, Nullable<int> porOrgClassLog, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var porNameParameter = porName != null ?
                new ObjectParameter("porName", porName) :
                new ObjectParameter("porName", typeof(string));
    
            var porOrgParameter = porOrg != null ?
                new ObjectParameter("porOrg", porOrg) :
                new ObjectParameter("porOrg", typeof(string));
    
            var porProvParameter = porProv != null ?
                new ObjectParameter("porProv", porProv) :
                new ObjectParameter("porProv", typeof(string));
    
            var porFromParameter = porFrom.HasValue ?
                new ObjectParameter("porFrom", porFrom) :
                new ObjectParameter("porFrom", typeof(System.DateTime));
    
            var porToParameter = porTo.HasValue ?
                new ObjectParameter("porTo", porTo) :
                new ObjectParameter("porTo", typeof(System.DateTime));
    
            var porStateParameter = porState.HasValue ?
                new ObjectParameter("porState", porState) :
                new ObjectParameter("porState", typeof(int));
    
            var porOrderByParameter = porOrderBy != null ?
                new ObjectParameter("porOrderBy", porOrderBy) :
                new ObjectParameter("porOrderBy", typeof(string));
    
            var porOrgClassLogParameter = porOrgClassLog.HasValue ?
                new ObjectParameter("porOrgClassLog", porOrgClassLog) :
                new ObjectParameter("porOrgClassLog", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcBuscaOCProv_Nombre_Cliente_Estado", porNameParameter, porOrgParameter, porProvParameter, porFromParameter, porToParameter, porStateParameter, porOrderByParameter, porOrgClassLogParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual int prcSpcBuscaOCProv_Nombre_Cliente_EstadoExcel(string porName, string porOrg, string porProv, Nullable<System.DateTime> porFrom, Nullable<System.DateTime> porTo, Nullable<int> porState, string porOrderBy, Nullable<int> porOrgClassLog)
        {
            var porNameParameter = porName != null ?
                new ObjectParameter("porName", porName) :
                new ObjectParameter("porName", typeof(string));
    
            var porOrgParameter = porOrg != null ?
                new ObjectParameter("porOrg", porOrg) :
                new ObjectParameter("porOrg", typeof(string));
    
            var porProvParameter = porProv != null ?
                new ObjectParameter("porProv", porProv) :
                new ObjectParameter("porProv", typeof(string));
    
            var porFromParameter = porFrom.HasValue ?
                new ObjectParameter("porFrom", porFrom) :
                new ObjectParameter("porFrom", typeof(System.DateTime));
    
            var porToParameter = porTo.HasValue ?
                new ObjectParameter("porTo", porTo) :
                new ObjectParameter("porTo", typeof(System.DateTime));
    
            var porStateParameter = porState.HasValue ?
                new ObjectParameter("porState", porState) :
                new ObjectParameter("porState", typeof(int));
    
            var porOrderByParameter = porOrderBy != null ?
                new ObjectParameter("porOrderBy", porOrderBy) :
                new ObjectParameter("porOrderBy", typeof(string));
    
            var porOrgClassLogParameter = porOrgClassLog.HasValue ?
                new ObjectParameter("porOrgClassLog", porOrgClassLog) :
                new ObjectParameter("porOrgClassLog", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcBuscaOCProv_Nombre_Cliente_EstadoExcel", porNameParameter, porOrgParameter, porProvParameter, porFromParameter, porToParameter, porStateParameter, porOrderByParameter, porOrgClassLogParameter);
        }
    
        public virtual int prcSpcBuscaOCProv_Nombre_ClienteExcel(string porName, string porOrg, string porProv, Nullable<System.DateTime> porFrom, Nullable<System.DateTime> porTo, string porOrderBy, Nullable<int> porOrgClassLog)
        {
            var porNameParameter = porName != null ?
                new ObjectParameter("porName", porName) :
                new ObjectParameter("porName", typeof(string));
    
            var porOrgParameter = porOrg != null ?
                new ObjectParameter("porOrg", porOrg) :
                new ObjectParameter("porOrg", typeof(string));
    
            var porProvParameter = porProv != null ?
                new ObjectParameter("porProv", porProv) :
                new ObjectParameter("porProv", typeof(string));
    
            var porFromParameter = porFrom.HasValue ?
                new ObjectParameter("porFrom", porFrom) :
                new ObjectParameter("porFrom", typeof(System.DateTime));
    
            var porToParameter = porTo.HasValue ?
                new ObjectParameter("porTo", porTo) :
                new ObjectParameter("porTo", typeof(System.DateTime));
    
            var porOrderByParameter = porOrderBy != null ?
                new ObjectParameter("porOrderBy", porOrderBy) :
                new ObjectParameter("porOrderBy", typeof(string));
    
            var porOrgClassLogParameter = porOrgClassLog.HasValue ?
                new ObjectParameter("porOrgClassLog", porOrgClassLog) :
                new ObjectParameter("porOrgClassLog", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcBuscaOCProv_Nombre_ClienteExcel", porNameParameter, porOrgParameter, porProvParameter, porFromParameter, porToParameter, porOrderByParameter, porOrgClassLogParameter);
        }
    
        public virtual ObjectResult<prcSpcBuscaOCProv_Nombre_Estado_Result> prcSpcBuscaOCProv_Nombre_Estado(string porName, string porOrg, Nullable<System.DateTime> porFrom, Nullable<System.DateTime> porTo, Nullable<int> porState, string porOrderBy, Nullable<int> porOrgClassLog, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var porNameParameter = porName != null ?
                new ObjectParameter("porName", porName) :
                new ObjectParameter("porName", typeof(string));
    
            var porOrgParameter = porOrg != null ?
                new ObjectParameter("porOrg", porOrg) :
                new ObjectParameter("porOrg", typeof(string));
    
            var porFromParameter = porFrom.HasValue ?
                new ObjectParameter("porFrom", porFrom) :
                new ObjectParameter("porFrom", typeof(System.DateTime));
    
            var porToParameter = porTo.HasValue ?
                new ObjectParameter("porTo", porTo) :
                new ObjectParameter("porTo", typeof(System.DateTime));
    
            var porStateParameter = porState.HasValue ?
                new ObjectParameter("porState", porState) :
                new ObjectParameter("porState", typeof(int));
    
            var porOrderByParameter = porOrderBy != null ?
                new ObjectParameter("porOrderBy", porOrderBy) :
                new ObjectParameter("porOrderBy", typeof(string));
    
            var porOrgClassLogParameter = porOrgClassLog.HasValue ?
                new ObjectParameter("porOrgClassLog", porOrgClassLog) :
                new ObjectParameter("porOrgClassLog", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcBuscaOCProv_Nombre_Estado_Result>("prcSpcBuscaOCProv_Nombre_Estado", porNameParameter, porOrgParameter, porFromParameter, porToParameter, porStateParameter, porOrderByParameter, porOrgClassLogParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcBuscaOCProv_Nombre_EstadoExcel_Result> prcSpcBuscaOCProv_Nombre_EstadoExcel(string porName, string porOrg, Nullable<System.DateTime> porFrom, Nullable<System.DateTime> porTo, Nullable<int> porState, string porOrderBy, Nullable<int> porOrgClassLog)
        {
            var porNameParameter = porName != null ?
                new ObjectParameter("porName", porName) :
                new ObjectParameter("porName", typeof(string));
    
            var porOrgParameter = porOrg != null ?
                new ObjectParameter("porOrg", porOrg) :
                new ObjectParameter("porOrg", typeof(string));
    
            var porFromParameter = porFrom.HasValue ?
                new ObjectParameter("porFrom", porFrom) :
                new ObjectParameter("porFrom", typeof(System.DateTime));
    
            var porToParameter = porTo.HasValue ?
                new ObjectParameter("porTo", porTo) :
                new ObjectParameter("porTo", typeof(System.DateTime));
    
            var porStateParameter = porState.HasValue ?
                new ObjectParameter("porState", porState) :
                new ObjectParameter("porState", typeof(int));
    
            var porOrderByParameter = porOrderBy != null ?
                new ObjectParameter("porOrderBy", porOrderBy) :
                new ObjectParameter("porOrderBy", typeof(string));
    
            var porOrgClassLogParameter = porOrgClassLog.HasValue ?
                new ObjectParameter("porOrgClassLog", porOrgClassLog) :
                new ObjectParameter("porOrgClassLog", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcBuscaOCProv_Nombre_EstadoExcel_Result>("prcSpcBuscaOCProv_Nombre_EstadoExcel", porNameParameter, porOrgParameter, porFromParameter, porToParameter, porStateParameter, porOrderByParameter, porOrgClassLogParameter);
        }
    
        public virtual ObjectResult<prcSpcBuscaOCProv_NombreExcel_Result> prcSpcBuscaOCProv_NombreExcel(string porName, string porOrg, Nullable<System.DateTime> porFrom, Nullable<System.DateTime> porTo, string porOrderBy, Nullable<int> porOrgClassLog)
        {
            var porNameParameter = porName != null ?
                new ObjectParameter("porName", porName) :
                new ObjectParameter("porName", typeof(string));
    
            var porOrgParameter = porOrg != null ?
                new ObjectParameter("porOrg", porOrg) :
                new ObjectParameter("porOrg", typeof(string));
    
            var porFromParameter = porFrom.HasValue ?
                new ObjectParameter("porFrom", porFrom) :
                new ObjectParameter("porFrom", typeof(System.DateTime));
    
            var porToParameter = porTo.HasValue ?
                new ObjectParameter("porTo", porTo) :
                new ObjectParameter("porTo", typeof(System.DateTime));
    
            var porOrderByParameter = porOrderBy != null ?
                new ObjectParameter("porOrderBy", porOrderBy) :
                new ObjectParameter("porOrderBy", typeof(string));
    
            var porOrgClassLogParameter = porOrgClassLog.HasValue ?
                new ObjectParameter("porOrgClassLog", porOrgClassLog) :
                new ObjectParameter("porOrgClassLog", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcBuscaOCProv_NombreExcel_Result>("prcSpcBuscaOCProv_NombreExcel", porNameParameter, porOrgParameter, porFromParameter, porToParameter, porOrderByParameter, porOrgClassLogParameter);
        }
    
        public virtual ObjectResult<prcSpcBuscaOCProvExcel_Result> prcSpcBuscaOCProvExcel(string porOrg, Nullable<System.DateTime> porFrom, Nullable<System.DateTime> porTo, string porOrderBy, Nullable<int> porOrgClassLog)
        {
            var porOrgParameter = porOrg != null ?
                new ObjectParameter("porOrg", porOrg) :
                new ObjectParameter("porOrg", typeof(string));
    
            var porFromParameter = porFrom.HasValue ?
                new ObjectParameter("porFrom", porFrom) :
                new ObjectParameter("porFrom", typeof(System.DateTime));
    
            var porToParameter = porTo.HasValue ?
                new ObjectParameter("porTo", porTo) :
                new ObjectParameter("porTo", typeof(System.DateTime));
    
            var porOrderByParameter = porOrderBy != null ?
                new ObjectParameter("porOrderBy", porOrderBy) :
                new ObjectParameter("porOrderBy", typeof(string));
    
            var porOrgClassLogParameter = porOrgClassLog.HasValue ?
                new ObjectParameter("porOrgClassLog", porOrgClassLog) :
                new ObjectParameter("porOrgClassLog", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcBuscaOCProvExcel_Result>("prcSpcBuscaOCProvExcel", porOrgParameter, porFromParameter, porToParameter, porOrderByParameter, porOrgClassLogParameter);
        }
    
        public virtual int prcSpcBuscarRequisitoInstruccion(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbrRFBCode)
        {
            var rbrRFBCodeParameter = rbrRFBCode.HasValue ?
                new ObjectParameter("rbrRFBCode", rbrRFBCode) :
                new ObjectParameter("rbrRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcBuscarRequisitoInstruccion", resultCode, resultMessage, rbrRFBCodeParameter);
        }
    
        public virtual int prcSpcCambiaEstadoLicitacion(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbhCode, Nullable<int> rbhDocumentStatus)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            var rbhDocumentStatusParameter = rbhDocumentStatus.HasValue ?
                new ObjectParameter("rbhDocumentStatus", rbhDocumentStatus) :
                new ObjectParameter("rbhDocumentStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCambiaEstadoLicitacion", resultCode, resultMessage, rbhCodeParameter, rbhDocumentStatusParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> prcSpcCheckBill(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> bilNumber, string bilTaxIdSeller, string bilDocDTEType)
        {
            var bilNumberParameter = bilNumber.HasValue ?
                new ObjectParameter("bilNumber", bilNumber) :
                new ObjectParameter("bilNumber", typeof(int));
    
            var bilTaxIdSellerParameter = bilTaxIdSeller != null ?
                new ObjectParameter("bilTaxIdSeller", bilTaxIdSeller) :
                new ObjectParameter("bilTaxIdSeller", typeof(string));
    
            var bilDocDTETypeParameter = bilDocDTEType != null ?
                new ObjectParameter("bilDocDTEType", bilDocDTEType) :
                new ObjectParameter("bilDocDTEType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("prcSpcCheckBill", resultCode, resultMessage, bilNumberParameter, bilTaxIdSellerParameter, bilDocDTETypeParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> prcSpcCierraLicitacion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("prcSpcCierraLicitacion");
        }
    
        public virtual int prcSpcCloseRFBHeaders(ObjectParameter rESULTCODE, ObjectParameter rESULTMESSAGE, Nullable<int> rBHINITIALSTATUS, Nullable<int> rBHFINALSTATUS)
        {
            var rBHINITIALSTATUSParameter = rBHINITIALSTATUS.HasValue ?
                new ObjectParameter("RBHINITIALSTATUS", rBHINITIALSTATUS) :
                new ObjectParameter("RBHINITIALSTATUS", typeof(int));
    
            var rBHFINALSTATUSParameter = rBHFINALSTATUS.HasValue ?
                new ObjectParameter("RBHFINALSTATUS", rBHFINALSTATUS) :
                new ObjectParameter("RBHFINALSTATUS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCloseRFBHeaders", rESULTCODE, rESULTMESSAGE, rBHINITIALSTATUSParameter, rBHFINALSTATUSParameter);
        }
    
        public virtual int prcSpcCopyPOHeader(ObjectParameter rESULTCODE, ObjectParameter rESULTMESSAGE, Nullable<int> pORID, string pORCODE, string pORNAME, Nullable<int> pORBUYERSTATUS, string pORBUYERORGANIZATION)
        {
            var pORIDParameter = pORID.HasValue ?
                new ObjectParameter("PORID", pORID) :
                new ObjectParameter("PORID", typeof(int));
    
            var pORCODEParameter = pORCODE != null ?
                new ObjectParameter("PORCODE", pORCODE) :
                new ObjectParameter("PORCODE", typeof(string));
    
            var pORNAMEParameter = pORNAME != null ?
                new ObjectParameter("PORNAME", pORNAME) :
                new ObjectParameter("PORNAME", typeof(string));
    
            var pORBUYERSTATUSParameter = pORBUYERSTATUS.HasValue ?
                new ObjectParameter("PORBUYERSTATUS", pORBUYERSTATUS) :
                new ObjectParameter("PORBUYERSTATUS", typeof(int));
    
            var pORBUYERORGANIZATIONParameter = pORBUYERORGANIZATION != null ?
                new ObjectParameter("PORBUYERORGANIZATION", pORBUYERORGANIZATION) :
                new ObjectParameter("PORBUYERORGANIZATION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCopyPOHeader", rESULTCODE, rESULTMESSAGE, pORIDParameter, pORCODEParameter, pORNAMEParameter, pORBUYERSTATUSParameter, pORBUYERORGANIZATIONParameter);
        }
    
        public virtual int prcSpcCountprcAproving(ObjectParameter existAproving, string rbhCode)
        {
            var rbhCodeParameter = rbhCode != null ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCountprcAproving", existAproving, rbhCodeParameter);
        }
    
        public virtual int prcSpcCountprcPOclause(Nullable<int> pocPorId, ObjectParameter pocCount)
        {
            var pocPorIdParameter = pocPorId.HasValue ?
                new ObjectParameter("pocPorId", pocPorId) :
                new ObjectParameter("pocPorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCountprcPOclause", pocPorIdParameter, pocCount);
        }
    
        public virtual int prcSpcCountprcRFBInvitation(Nullable<int> rbtRFBCode, ObjectParameter inCount)
        {
            var rbtRFBCodeParameter = rbtRFBCode.HasValue ?
                new ObjectParameter("rbtRFBCode", rbtRFBCode) :
                new ObjectParameter("rbtRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCountprcRFBInvitation", rbtRFBCodeParameter, inCount);
        }
    
        public virtual int prcSpcCreateprcAnswer(ObjectParameter rESULTCODE, ObjectParameter rESULTMESSAGE, ObjectParameter rESULTID, Nullable<int> rSWRFBCODE, string rSWTEXT)
        {
            var rSWRFBCODEParameter = rSWRFBCODE.HasValue ?
                new ObjectParameter("RSWRFBCODE", rSWRFBCODE) :
                new ObjectParameter("RSWRFBCODE", typeof(int));
    
            var rSWTEXTParameter = rSWTEXT != null ?
                new ObjectParameter("RSWTEXT", rSWTEXT) :
                new ObjectParameter("RSWTEXT", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcAnswer", rESULTCODE, rESULTMESSAGE, rESULTID, rSWRFBCODEParameter, rSWTEXTParameter);
        }
    
        public virtual int prcSpcCreateprcBIDItem(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, string bitSupplierComment, Nullable<double> bitAwardedQuantity, Nullable<short> bitIsSelected, Nullable<short> bitIsLowestPrice, Nullable<double> bitUniqueCurrencyPrice, Nullable<double> bitHomologatedPrice, Nullable<double> bitUnitNetPrice, string bitCurrency, Nullable<double> bitQuantity, Nullable<short> bitIsBidded, Nullable<int> bitItem, Nullable<int> bitBID)
        {
            var bitSupplierCommentParameter = bitSupplierComment != null ?
                new ObjectParameter("bitSupplierComment", bitSupplierComment) :
                new ObjectParameter("bitSupplierComment", typeof(string));
    
            var bitAwardedQuantityParameter = bitAwardedQuantity.HasValue ?
                new ObjectParameter("bitAwardedQuantity", bitAwardedQuantity) :
                new ObjectParameter("bitAwardedQuantity", typeof(double));
    
            var bitIsSelectedParameter = bitIsSelected.HasValue ?
                new ObjectParameter("bitIsSelected", bitIsSelected) :
                new ObjectParameter("bitIsSelected", typeof(short));
    
            var bitIsLowestPriceParameter = bitIsLowestPrice.HasValue ?
                new ObjectParameter("bitIsLowestPrice", bitIsLowestPrice) :
                new ObjectParameter("bitIsLowestPrice", typeof(short));
    
            var bitUniqueCurrencyPriceParameter = bitUniqueCurrencyPrice.HasValue ?
                new ObjectParameter("bitUniqueCurrencyPrice", bitUniqueCurrencyPrice) :
                new ObjectParameter("bitUniqueCurrencyPrice", typeof(double));
    
            var bitHomologatedPriceParameter = bitHomologatedPrice.HasValue ?
                new ObjectParameter("bitHomologatedPrice", bitHomologatedPrice) :
                new ObjectParameter("bitHomologatedPrice", typeof(double));
    
            var bitUnitNetPriceParameter = bitUnitNetPrice.HasValue ?
                new ObjectParameter("bitUnitNetPrice", bitUnitNetPrice) :
                new ObjectParameter("bitUnitNetPrice", typeof(double));
    
            var bitCurrencyParameter = bitCurrency != null ?
                new ObjectParameter("bitCurrency", bitCurrency) :
                new ObjectParameter("bitCurrency", typeof(string));
    
            var bitQuantityParameter = bitQuantity.HasValue ?
                new ObjectParameter("bitQuantity", bitQuantity) :
                new ObjectParameter("bitQuantity", typeof(double));
    
            var bitIsBiddedParameter = bitIsBidded.HasValue ?
                new ObjectParameter("bitIsBidded", bitIsBidded) :
                new ObjectParameter("bitIsBidded", typeof(short));
    
            var bitItemParameter = bitItem.HasValue ?
                new ObjectParameter("bitItem", bitItem) :
                new ObjectParameter("bitItem", typeof(int));
    
            var bitBIDParameter = bitBID.HasValue ?
                new ObjectParameter("bitBID", bitBID) :
                new ObjectParameter("bitBID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcBIDItem", resultCode, resultMessage, resultID, bitSupplierCommentParameter, bitAwardedQuantityParameter, bitIsSelectedParameter, bitIsLowestPriceParameter, bitUniqueCurrencyPriceParameter, bitHomologatedPriceParameter, bitUnitNetPriceParameter, bitCurrencyParameter, bitQuantityParameter, bitIsBiddedParameter, bitItemParameter, bitBIDParameter);
        }
    
        public virtual int prcSpcCreateprcBIDOpeningComment(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, string bocComment, Nullable<System.DateTime> bocDate, Nullable<int> bocBID)
        {
            var bocCommentParameter = bocComment != null ?
                new ObjectParameter("bocComment", bocComment) :
                new ObjectParameter("bocComment", typeof(string));
    
            var bocDateParameter = bocDate.HasValue ?
                new ObjectParameter("bocDate", bocDate) :
                new ObjectParameter("bocDate", typeof(System.DateTime));
    
            var bocBIDParameter = bocBID.HasValue ?
                new ObjectParameter("bocBID", bocBID) :
                new ObjectParameter("bocBID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcBIDOpeningComment", resultCode, resultMessage, resultID, bocCommentParameter, bocDateParameter, bocBIDParameter);
        }
    
        public virtual int prcSpcCreateprcBIDQuote(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, string bidAwardComment, string bidFinalScore, Nullable<short> bidIsAwarded, string bidEconomicScore, Nullable<short> bidEconomicQualify, Nullable<System.DateTime> bidEconomicIssueDate, Nullable<int> bidEconomicStatus, string bidTechnicalScore, Nullable<short> bidTechnicalQualify, Nullable<System.DateTime> bidTechnicalIssueDate, Nullable<int> bidTechnicalStatus, string bidAdministrativeScore, Nullable<short> bidAdministrativeQualify, Nullable<int> bidDocumentStatus, string bidSupplierReference, string bidDescription, string bidName, string bidUser, Nullable<short> bidCorrelative, string bidOrganization, Nullable<int> bidRFBCode)
        {
            var bidAwardCommentParameter = bidAwardComment != null ?
                new ObjectParameter("bidAwardComment", bidAwardComment) :
                new ObjectParameter("bidAwardComment", typeof(string));
    
            var bidFinalScoreParameter = bidFinalScore != null ?
                new ObjectParameter("bidFinalScore", bidFinalScore) :
                new ObjectParameter("bidFinalScore", typeof(string));
    
            var bidIsAwardedParameter = bidIsAwarded.HasValue ?
                new ObjectParameter("bidIsAwarded", bidIsAwarded) :
                new ObjectParameter("bidIsAwarded", typeof(short));
    
            var bidEconomicScoreParameter = bidEconomicScore != null ?
                new ObjectParameter("bidEconomicScore", bidEconomicScore) :
                new ObjectParameter("bidEconomicScore", typeof(string));
    
            var bidEconomicQualifyParameter = bidEconomicQualify.HasValue ?
                new ObjectParameter("bidEconomicQualify", bidEconomicQualify) :
                new ObjectParameter("bidEconomicQualify", typeof(short));
    
            var bidEconomicIssueDateParameter = bidEconomicIssueDate.HasValue ?
                new ObjectParameter("bidEconomicIssueDate", bidEconomicIssueDate) :
                new ObjectParameter("bidEconomicIssueDate", typeof(System.DateTime));
    
            var bidEconomicStatusParameter = bidEconomicStatus.HasValue ?
                new ObjectParameter("bidEconomicStatus", bidEconomicStatus) :
                new ObjectParameter("bidEconomicStatus", typeof(int));
    
            var bidTechnicalScoreParameter = bidTechnicalScore != null ?
                new ObjectParameter("bidTechnicalScore", bidTechnicalScore) :
                new ObjectParameter("bidTechnicalScore", typeof(string));
    
            var bidTechnicalQualifyParameter = bidTechnicalQualify.HasValue ?
                new ObjectParameter("bidTechnicalQualify", bidTechnicalQualify) :
                new ObjectParameter("bidTechnicalQualify", typeof(short));
    
            var bidTechnicalIssueDateParameter = bidTechnicalIssueDate.HasValue ?
                new ObjectParameter("bidTechnicalIssueDate", bidTechnicalIssueDate) :
                new ObjectParameter("bidTechnicalIssueDate", typeof(System.DateTime));
    
            var bidTechnicalStatusParameter = bidTechnicalStatus.HasValue ?
                new ObjectParameter("bidTechnicalStatus", bidTechnicalStatus) :
                new ObjectParameter("bidTechnicalStatus", typeof(int));
    
            var bidAdministrativeScoreParameter = bidAdministrativeScore != null ?
                new ObjectParameter("bidAdministrativeScore", bidAdministrativeScore) :
                new ObjectParameter("bidAdministrativeScore", typeof(string));
    
            var bidAdministrativeQualifyParameter = bidAdministrativeQualify.HasValue ?
                new ObjectParameter("bidAdministrativeQualify", bidAdministrativeQualify) :
                new ObjectParameter("bidAdministrativeQualify", typeof(short));
    
            var bidDocumentStatusParameter = bidDocumentStatus.HasValue ?
                new ObjectParameter("bidDocumentStatus", bidDocumentStatus) :
                new ObjectParameter("bidDocumentStatus", typeof(int));
    
            var bidSupplierReferenceParameter = bidSupplierReference != null ?
                new ObjectParameter("bidSupplierReference", bidSupplierReference) :
                new ObjectParameter("bidSupplierReference", typeof(string));
    
            var bidDescriptionParameter = bidDescription != null ?
                new ObjectParameter("bidDescription", bidDescription) :
                new ObjectParameter("bidDescription", typeof(string));
    
            var bidNameParameter = bidName != null ?
                new ObjectParameter("bidName", bidName) :
                new ObjectParameter("bidName", typeof(string));
    
            var bidUserParameter = bidUser != null ?
                new ObjectParameter("bidUser", bidUser) :
                new ObjectParameter("bidUser", typeof(string));
    
            var bidCorrelativeParameter = bidCorrelative.HasValue ?
                new ObjectParameter("bidCorrelative", bidCorrelative) :
                new ObjectParameter("bidCorrelative", typeof(short));
    
            var bidOrganizationParameter = bidOrganization != null ?
                new ObjectParameter("bidOrganization", bidOrganization) :
                new ObjectParameter("bidOrganization", typeof(string));
    
            var bidRFBCodeParameter = bidRFBCode.HasValue ?
                new ObjectParameter("bidRFBCode", bidRFBCode) :
                new ObjectParameter("bidRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcBIDQuote", resultCode, resultMessage, resultID, bidAwardCommentParameter, bidFinalScoreParameter, bidIsAwardedParameter, bidEconomicScoreParameter, bidEconomicQualifyParameter, bidEconomicIssueDateParameter, bidEconomicStatusParameter, bidTechnicalScoreParameter, bidTechnicalQualifyParameter, bidTechnicalIssueDateParameter, bidTechnicalStatusParameter, bidAdministrativeScoreParameter, bidAdministrativeQualifyParameter, bidDocumentStatusParameter, bidSupplierReferenceParameter, bidDescriptionParameter, bidNameParameter, bidUserParameter, bidCorrelativeParameter, bidOrganizationParameter, bidRFBCodeParameter);
        }
    
        public virtual int prcSpcCreateprcBIDQuoteAndBIDItem(string bidOrganization, string bidUser, Nullable<int> rbhCode, string bidName, Nullable<double> bitUnitNetPrice)
        {
            var bidOrganizationParameter = bidOrganization != null ?
                new ObjectParameter("bidOrganization", bidOrganization) :
                new ObjectParameter("bidOrganization", typeof(string));
    
            var bidUserParameter = bidUser != null ?
                new ObjectParameter("bidUser", bidUser) :
                new ObjectParameter("bidUser", typeof(string));
    
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            var bidNameParameter = bidName != null ?
                new ObjectParameter("bidName", bidName) :
                new ObjectParameter("bidName", typeof(string));
    
            var bitUnitNetPriceParameter = bitUnitNetPrice.HasValue ?
                new ObjectParameter("bitUnitNetPrice", bitUnitNetPrice) :
                new ObjectParameter("bitUnitNetPrice", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcBIDQuoteAndBIDItem", bidOrganizationParameter, bidUserParameter, rbhCodeParameter, bidNameParameter, bitUnitNetPriceParameter);
        }
    
        public virtual int prcSpcCreateprcBIDQuoteName(ObjectParameter resultID, Nullable<int> bidID, Nullable<int> bidRFBCode, Nullable<int> bidStatus, string bidDescription, string bidName, string bidUser, string bidOrganization)
        {
            var bidIDParameter = bidID.HasValue ?
                new ObjectParameter("bidID", bidID) :
                new ObjectParameter("bidID", typeof(int));
    
            var bidRFBCodeParameter = bidRFBCode.HasValue ?
                new ObjectParameter("bidRFBCode", bidRFBCode) :
                new ObjectParameter("bidRFBCode", typeof(int));
    
            var bidStatusParameter = bidStatus.HasValue ?
                new ObjectParameter("bidStatus", bidStatus) :
                new ObjectParameter("bidStatus", typeof(int));
    
            var bidDescriptionParameter = bidDescription != null ?
                new ObjectParameter("bidDescription", bidDescription) :
                new ObjectParameter("bidDescription", typeof(string));
    
            var bidNameParameter = bidName != null ?
                new ObjectParameter("bidName", bidName) :
                new ObjectParameter("bidName", typeof(string));
    
            var bidUserParameter = bidUser != null ?
                new ObjectParameter("bidUser", bidUser) :
                new ObjectParameter("bidUser", typeof(string));
    
            var bidOrganizationParameter = bidOrganization != null ?
                new ObjectParameter("bidOrganization", bidOrganization) :
                new ObjectParameter("bidOrganization", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcBIDQuoteName", resultID, bidIDParameter, bidRFBCodeParameter, bidStatusParameter, bidDescriptionParameter, bidNameParameter, bidUserParameter, bidOrganizationParameter);
        }
    
        public virtual int prcSpcCreateprcBIDRFBTrack(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, string brtOrganization, Nullable<int> brtRFBCode)
        {
            var brtOrganizationParameter = brtOrganization != null ?
                new ObjectParameter("brtOrganization", brtOrganization) :
                new ObjectParameter("brtOrganization", typeof(string));
    
            var brtRFBCodeParameter = brtRFBCode.HasValue ?
                new ObjectParameter("brtRFBCode", brtRFBCode) :
                new ObjectParameter("brtRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcBIDRFBTrack", resultCode, resultMessage, resultID, brtOrganizationParameter, brtRFBCodeParameter);
        }
    
        public virtual int prcSpcCreateprcCriteriaClause(ObjectParameter newId, string crclTitulo, string crclDescripcion, Nullable<int> tpcID, string usrCode, string crclEstadoVigencia)
        {
            var crclTituloParameter = crclTitulo != null ?
                new ObjectParameter("crclTitulo", crclTitulo) :
                new ObjectParameter("crclTitulo", typeof(string));
    
            var crclDescripcionParameter = crclDescripcion != null ?
                new ObjectParameter("crclDescripcion", crclDescripcion) :
                new ObjectParameter("crclDescripcion", typeof(string));
    
            var tpcIDParameter = tpcID.HasValue ?
                new ObjectParameter("tpcID", tpcID) :
                new ObjectParameter("tpcID", typeof(int));
    
            var usrCodeParameter = usrCode != null ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(string));
    
            var crclEstadoVigenciaParameter = crclEstadoVigencia != null ?
                new ObjectParameter("crclEstadoVigencia", crclEstadoVigencia) :
                new ObjectParameter("crclEstadoVigencia", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcCriteriaClause", newId, crclTituloParameter, crclDescripcionParameter, tpcIDParameter, usrCodeParameter, crclEstadoVigenciaParameter);
        }
    
        public virtual int prcSpcCreateprcCriteriaClauseByCategory(ObjectParameter newId, Nullable<int> idCategory, Nullable<int> crclID, Nullable<bool> crclrbVigente)
        {
            var idCategoryParameter = idCategory.HasValue ?
                new ObjectParameter("IdCategory", idCategory) :
                new ObjectParameter("IdCategory", typeof(int));
    
            var crclIDParameter = crclID.HasValue ?
                new ObjectParameter("crclID", crclID) :
                new ObjectParameter("crclID", typeof(int));
    
            var crclrbVigenteParameter = crclrbVigente.HasValue ?
                new ObjectParameter("crclrbVigente", crclrbVigente) :
                new ObjectParameter("crclrbVigente", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcCriteriaClauseByCategory", newId, idCategoryParameter, crclIDParameter, crclrbVigenteParameter);
        }
    
        public virtual int prcSpcCreateprcDTE(Nullable<int> bilNumber, string bilTaxIdSeller, string bilSellerName, string bilTaxIdReceptor, string bilReceptorName, string bilOrgCodeSeller, string bilOrgCodeBuyer, Nullable<decimal> bilAmount, Nullable<double> bilTaxPercent, Nullable<decimal> bilTotalAmount, Nullable<System.DateTime> bilDateEmition, Nullable<System.DateTime> bilDateReception, Nullable<System.DateTime> bilDateEnd, Nullable<System.DateTime> bilDatePayment, Nullable<System.DateTime> bilCreateDate, string bilStatus, string bilReasonPayment, Nullable<int> bilRefNumber, Nullable<int> bilPoId, string bilAtcCode, string bilDocType, string bilDocDTEType, string bilXMLDTE, string bilInternalStatus, string bilExternalStatus, string bilInternalMail, string bilExternalMail, string bilOriginalMail, Nullable<int> bilPackId, Nullable<int> bilTGR)
        {
            var bilNumberParameter = bilNumber.HasValue ?
                new ObjectParameter("bilNumber", bilNumber) :
                new ObjectParameter("bilNumber", typeof(int));
    
            var bilTaxIdSellerParameter = bilTaxIdSeller != null ?
                new ObjectParameter("bilTaxIdSeller", bilTaxIdSeller) :
                new ObjectParameter("bilTaxIdSeller", typeof(string));
    
            var bilSellerNameParameter = bilSellerName != null ?
                new ObjectParameter("bilSellerName", bilSellerName) :
                new ObjectParameter("bilSellerName", typeof(string));
    
            var bilTaxIdReceptorParameter = bilTaxIdReceptor != null ?
                new ObjectParameter("bilTaxIdReceptor", bilTaxIdReceptor) :
                new ObjectParameter("bilTaxIdReceptor", typeof(string));
    
            var bilReceptorNameParameter = bilReceptorName != null ?
                new ObjectParameter("bilReceptorName", bilReceptorName) :
                new ObjectParameter("bilReceptorName", typeof(string));
    
            var bilOrgCodeSellerParameter = bilOrgCodeSeller != null ?
                new ObjectParameter("bilOrgCodeSeller", bilOrgCodeSeller) :
                new ObjectParameter("bilOrgCodeSeller", typeof(string));
    
            var bilOrgCodeBuyerParameter = bilOrgCodeBuyer != null ?
                new ObjectParameter("bilOrgCodeBuyer", bilOrgCodeBuyer) :
                new ObjectParameter("bilOrgCodeBuyer", typeof(string));
    
            var bilAmountParameter = bilAmount.HasValue ?
                new ObjectParameter("bilAmount", bilAmount) :
                new ObjectParameter("bilAmount", typeof(decimal));
    
            var bilTaxPercentParameter = bilTaxPercent.HasValue ?
                new ObjectParameter("bilTaxPercent", bilTaxPercent) :
                new ObjectParameter("bilTaxPercent", typeof(double));
    
            var bilTotalAmountParameter = bilTotalAmount.HasValue ?
                new ObjectParameter("bilTotalAmount", bilTotalAmount) :
                new ObjectParameter("bilTotalAmount", typeof(decimal));
    
            var bilDateEmitionParameter = bilDateEmition.HasValue ?
                new ObjectParameter("bilDateEmition", bilDateEmition) :
                new ObjectParameter("bilDateEmition", typeof(System.DateTime));
    
            var bilDateReceptionParameter = bilDateReception.HasValue ?
                new ObjectParameter("bilDateReception", bilDateReception) :
                new ObjectParameter("bilDateReception", typeof(System.DateTime));
    
            var bilDateEndParameter = bilDateEnd.HasValue ?
                new ObjectParameter("bilDateEnd", bilDateEnd) :
                new ObjectParameter("bilDateEnd", typeof(System.DateTime));
    
            var bilDatePaymentParameter = bilDatePayment.HasValue ?
                new ObjectParameter("bilDatePayment", bilDatePayment) :
                new ObjectParameter("bilDatePayment", typeof(System.DateTime));
    
            var bilCreateDateParameter = bilCreateDate.HasValue ?
                new ObjectParameter("bilCreateDate", bilCreateDate) :
                new ObjectParameter("bilCreateDate", typeof(System.DateTime));
    
            var bilStatusParameter = bilStatus != null ?
                new ObjectParameter("bilStatus", bilStatus) :
                new ObjectParameter("bilStatus", typeof(string));
    
            var bilReasonPaymentParameter = bilReasonPayment != null ?
                new ObjectParameter("bilReasonPayment", bilReasonPayment) :
                new ObjectParameter("bilReasonPayment", typeof(string));
    
            var bilRefNumberParameter = bilRefNumber.HasValue ?
                new ObjectParameter("bilRefNumber", bilRefNumber) :
                new ObjectParameter("bilRefNumber", typeof(int));
    
            var bilPoIdParameter = bilPoId.HasValue ?
                new ObjectParameter("bilPoId", bilPoId) :
                new ObjectParameter("bilPoId", typeof(int));
    
            var bilAtcCodeParameter = bilAtcCode != null ?
                new ObjectParameter("bilAtcCode", bilAtcCode) :
                new ObjectParameter("bilAtcCode", typeof(string));
    
            var bilDocTypeParameter = bilDocType != null ?
                new ObjectParameter("bilDocType", bilDocType) :
                new ObjectParameter("bilDocType", typeof(string));
    
            var bilDocDTETypeParameter = bilDocDTEType != null ?
                new ObjectParameter("bilDocDTEType", bilDocDTEType) :
                new ObjectParameter("bilDocDTEType", typeof(string));
    
            var bilXMLDTEParameter = bilXMLDTE != null ?
                new ObjectParameter("bilXMLDTE", bilXMLDTE) :
                new ObjectParameter("bilXMLDTE", typeof(string));
    
            var bilInternalStatusParameter = bilInternalStatus != null ?
                new ObjectParameter("bilInternalStatus", bilInternalStatus) :
                new ObjectParameter("bilInternalStatus", typeof(string));
    
            var bilExternalStatusParameter = bilExternalStatus != null ?
                new ObjectParameter("bilExternalStatus", bilExternalStatus) :
                new ObjectParameter("bilExternalStatus", typeof(string));
    
            var bilInternalMailParameter = bilInternalMail != null ?
                new ObjectParameter("bilInternalMail", bilInternalMail) :
                new ObjectParameter("bilInternalMail", typeof(string));
    
            var bilExternalMailParameter = bilExternalMail != null ?
                new ObjectParameter("bilExternalMail", bilExternalMail) :
                new ObjectParameter("bilExternalMail", typeof(string));
    
            var bilOriginalMailParameter = bilOriginalMail != null ?
                new ObjectParameter("bilOriginalMail", bilOriginalMail) :
                new ObjectParameter("bilOriginalMail", typeof(string));
    
            var bilPackIdParameter = bilPackId.HasValue ?
                new ObjectParameter("bilPackId", bilPackId) :
                new ObjectParameter("bilPackId", typeof(int));
    
            var bilTGRParameter = bilTGR.HasValue ?
                new ObjectParameter("bilTGR", bilTGR) :
                new ObjectParameter("bilTGR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcDTE", bilNumberParameter, bilTaxIdSellerParameter, bilSellerNameParameter, bilTaxIdReceptorParameter, bilReceptorNameParameter, bilOrgCodeSellerParameter, bilOrgCodeBuyerParameter, bilAmountParameter, bilTaxPercentParameter, bilTotalAmountParameter, bilDateEmitionParameter, bilDateReceptionParameter, bilDateEndParameter, bilDatePaymentParameter, bilCreateDateParameter, bilStatusParameter, bilReasonPaymentParameter, bilRefNumberParameter, bilPoIdParameter, bilAtcCodeParameter, bilDocTypeParameter, bilDocDTETypeParameter, bilXMLDTEParameter, bilInternalStatusParameter, bilExternalStatusParameter, bilInternalMailParameter, bilExternalMailParameter, bilOriginalMailParameter, bilPackIdParameter, bilTGRParameter);
        }
    
        public virtual int prcSpcCreateprcOC(ObjectParameter rESULTCODE, ObjectParameter rESULTMESSAGE, ObjectParameter rESULTPORID, ObjectParameter rESULTPORNAME, string pORNAME, Nullable<int> pORSOURCEDOCUMENTTYPE, Nullable<int> pORSOURCEDOCUMENTNUMBER, Nullable<int> pORORDERTYPE, string pORBUYERORGANIZATION, string pORBUYERUSER, Nullable<int> pORBUYERSTATUS, string pORSELLERORGANIZATION, string pORSELLERSTATUS, Nullable<int> pORBIDID, string pORSELLERUSER, Nullable<int> iDD)
        {
            var pORNAMEParameter = pORNAME != null ?
                new ObjectParameter("PORNAME", pORNAME) :
                new ObjectParameter("PORNAME", typeof(string));
    
            var pORSOURCEDOCUMENTTYPEParameter = pORSOURCEDOCUMENTTYPE.HasValue ?
                new ObjectParameter("PORSOURCEDOCUMENTTYPE", pORSOURCEDOCUMENTTYPE) :
                new ObjectParameter("PORSOURCEDOCUMENTTYPE", typeof(int));
    
            var pORSOURCEDOCUMENTNUMBERParameter = pORSOURCEDOCUMENTNUMBER.HasValue ?
                new ObjectParameter("PORSOURCEDOCUMENTNUMBER", pORSOURCEDOCUMENTNUMBER) :
                new ObjectParameter("PORSOURCEDOCUMENTNUMBER", typeof(int));
    
            var pORORDERTYPEParameter = pORORDERTYPE.HasValue ?
                new ObjectParameter("PORORDERTYPE", pORORDERTYPE) :
                new ObjectParameter("PORORDERTYPE", typeof(int));
    
            var pORBUYERORGANIZATIONParameter = pORBUYERORGANIZATION != null ?
                new ObjectParameter("PORBUYERORGANIZATION", pORBUYERORGANIZATION) :
                new ObjectParameter("PORBUYERORGANIZATION", typeof(string));
    
            var pORBUYERUSERParameter = pORBUYERUSER != null ?
                new ObjectParameter("PORBUYERUSER", pORBUYERUSER) :
                new ObjectParameter("PORBUYERUSER", typeof(string));
    
            var pORBUYERSTATUSParameter = pORBUYERSTATUS.HasValue ?
                new ObjectParameter("PORBUYERSTATUS", pORBUYERSTATUS) :
                new ObjectParameter("PORBUYERSTATUS", typeof(int));
    
            var pORSELLERORGANIZATIONParameter = pORSELLERORGANIZATION != null ?
                new ObjectParameter("PORSELLERORGANIZATION", pORSELLERORGANIZATION) :
                new ObjectParameter("PORSELLERORGANIZATION", typeof(string));
    
            var pORSELLERSTATUSParameter = pORSELLERSTATUS != null ?
                new ObjectParameter("PORSELLERSTATUS", pORSELLERSTATUS) :
                new ObjectParameter("PORSELLERSTATUS", typeof(string));
    
            var pORBIDIDParameter = pORBIDID.HasValue ?
                new ObjectParameter("PORBIDID", pORBIDID) :
                new ObjectParameter("PORBIDID", typeof(int));
    
            var pORSELLERUSERParameter = pORSELLERUSER != null ?
                new ObjectParameter("PORSELLERUSER", pORSELLERUSER) :
                new ObjectParameter("PORSELLERUSER", typeof(string));
    
            var iDDParameter = iDD.HasValue ?
                new ObjectParameter("IDD", iDD) :
                new ObjectParameter("IDD", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcOC", rESULTCODE, rESULTMESSAGE, rESULTPORID, rESULTPORNAME, pORNAMEParameter, pORSOURCEDOCUMENTTYPEParameter, pORSOURCEDOCUMENTNUMBERParameter, pORORDERTYPEParameter, pORBUYERORGANIZATIONParameter, pORBUYERUSERParameter, pORBUYERSTATUSParameter, pORSELLERORGANIZATIONParameter, pORSELLERSTATUSParameter, pORBIDIDParameter, pORSELLERUSERParameter, iDDParameter);
        }
    
        public virtual int prcSpcCreateprcOC_CMDC(ObjectParameter rESULTCODE, ObjectParameter rESULTMESSAGE, ObjectParameter rESULTPORID, ObjectParameter rESULTPORNAME, string pORNAME, Nullable<int> pORSOURCEDOCUMENTTYPE, Nullable<int> pORSOURCEDOCUMENTNUMBER, Nullable<int> pORORDERTYPE, string pORBUYERORGANIZATION, string pORBUYERUSER, Nullable<int> pORBUYERSTATUS, string pORSELLERORGANIZATION, string pORSELLERSTATUS, Nullable<int> pORBIDID, string pORSELLERUSER, Nullable<int> iDD)
        {
            var pORNAMEParameter = pORNAME != null ?
                new ObjectParameter("PORNAME", pORNAME) :
                new ObjectParameter("PORNAME", typeof(string));
    
            var pORSOURCEDOCUMENTTYPEParameter = pORSOURCEDOCUMENTTYPE.HasValue ?
                new ObjectParameter("PORSOURCEDOCUMENTTYPE", pORSOURCEDOCUMENTTYPE) :
                new ObjectParameter("PORSOURCEDOCUMENTTYPE", typeof(int));
    
            var pORSOURCEDOCUMENTNUMBERParameter = pORSOURCEDOCUMENTNUMBER.HasValue ?
                new ObjectParameter("PORSOURCEDOCUMENTNUMBER", pORSOURCEDOCUMENTNUMBER) :
                new ObjectParameter("PORSOURCEDOCUMENTNUMBER", typeof(int));
    
            var pORORDERTYPEParameter = pORORDERTYPE.HasValue ?
                new ObjectParameter("PORORDERTYPE", pORORDERTYPE) :
                new ObjectParameter("PORORDERTYPE", typeof(int));
    
            var pORBUYERORGANIZATIONParameter = pORBUYERORGANIZATION != null ?
                new ObjectParameter("PORBUYERORGANIZATION", pORBUYERORGANIZATION) :
                new ObjectParameter("PORBUYERORGANIZATION", typeof(string));
    
            var pORBUYERUSERParameter = pORBUYERUSER != null ?
                new ObjectParameter("PORBUYERUSER", pORBUYERUSER) :
                new ObjectParameter("PORBUYERUSER", typeof(string));
    
            var pORBUYERSTATUSParameter = pORBUYERSTATUS.HasValue ?
                new ObjectParameter("PORBUYERSTATUS", pORBUYERSTATUS) :
                new ObjectParameter("PORBUYERSTATUS", typeof(int));
    
            var pORSELLERORGANIZATIONParameter = pORSELLERORGANIZATION != null ?
                new ObjectParameter("PORSELLERORGANIZATION", pORSELLERORGANIZATION) :
                new ObjectParameter("PORSELLERORGANIZATION", typeof(string));
    
            var pORSELLERSTATUSParameter = pORSELLERSTATUS != null ?
                new ObjectParameter("PORSELLERSTATUS", pORSELLERSTATUS) :
                new ObjectParameter("PORSELLERSTATUS", typeof(string));
    
            var pORBIDIDParameter = pORBIDID.HasValue ?
                new ObjectParameter("PORBIDID", pORBIDID) :
                new ObjectParameter("PORBIDID", typeof(int));
    
            var pORSELLERUSERParameter = pORSELLERUSER != null ?
                new ObjectParameter("PORSELLERUSER", pORSELLERUSER) :
                new ObjectParameter("PORSELLERUSER", typeof(string));
    
            var iDDParameter = iDD.HasValue ?
                new ObjectParameter("IDD", iDD) :
                new ObjectParameter("IDD", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcOC_CMDC", rESULTCODE, rESULTMESSAGE, rESULTPORID, rESULTPORNAME, pORNAMEParameter, pORSOURCEDOCUMENTTYPEParameter, pORSOURCEDOCUMENTNUMBERParameter, pORORDERTYPEParameter, pORBUYERORGANIZATIONParameter, pORBUYERUSERParameter, pORBUYERSTATUSParameter, pORSELLERORGANIZATIONParameter, pORSELLERSTATUSParameter, pORBIDIDParameter, pORSELLERUSERParameter, iDDParameter);
        }
    
        public virtual int prcSpcCreateprcOpeningComment(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, Nullable<int> bocBID, string bocComment)
        {
            var bocBIDParameter = bocBID.HasValue ?
                new ObjectParameter("bocBID", bocBID) :
                new ObjectParameter("bocBID", typeof(int));
    
            var bocCommentParameter = bocComment != null ?
                new ObjectParameter("bocComment", bocComment) :
                new ObjectParameter("bocComment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcOpeningComment", resultCode, resultMessage, resultID, bocBIDParameter, bocCommentParameter);
        }
    
        public virtual int prcSpcCreateprcPOApproval(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, Nullable<int> papOrder, Nullable<System.DateTime> papDate, Nullable<int> papApprovalType, string papNumber, string papText1, string papText2, string papText3, string papApproverName, string papApproverPosition, Nullable<int> porJustifyType)
        {
            var papOrderParameter = papOrder.HasValue ?
                new ObjectParameter("papOrder", papOrder) :
                new ObjectParameter("papOrder", typeof(int));
    
            var papDateParameter = papDate.HasValue ?
                new ObjectParameter("papDate", papDate) :
                new ObjectParameter("papDate", typeof(System.DateTime));
    
            var papApprovalTypeParameter = papApprovalType.HasValue ?
                new ObjectParameter("papApprovalType", papApprovalType) :
                new ObjectParameter("papApprovalType", typeof(int));
    
            var papNumberParameter = papNumber != null ?
                new ObjectParameter("papNumber", papNumber) :
                new ObjectParameter("papNumber", typeof(string));
    
            var papText1Parameter = papText1 != null ?
                new ObjectParameter("papText1", papText1) :
                new ObjectParameter("papText1", typeof(string));
    
            var papText2Parameter = papText2 != null ?
                new ObjectParameter("papText2", papText2) :
                new ObjectParameter("papText2", typeof(string));
    
            var papText3Parameter = papText3 != null ?
                new ObjectParameter("papText3", papText3) :
                new ObjectParameter("papText3", typeof(string));
    
            var papApproverNameParameter = papApproverName != null ?
                new ObjectParameter("papApproverName", papApproverName) :
                new ObjectParameter("papApproverName", typeof(string));
    
            var papApproverPositionParameter = papApproverPosition != null ?
                new ObjectParameter("papApproverPosition", papApproverPosition) :
                new ObjectParameter("papApproverPosition", typeof(string));
    
            var porJustifyTypeParameter = porJustifyType.HasValue ?
                new ObjectParameter("porJustifyType", porJustifyType) :
                new ObjectParameter("porJustifyType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcPOApproval", resultCode, resultMessage, resultID, papOrderParameter, papDateParameter, papApprovalTypeParameter, papNumberParameter, papText1Parameter, papText2Parameter, papText3Parameter, papApproverNameParameter, papApproverPositionParameter, porJustifyTypeParameter);
        }
    
        public virtual int prcSpcCreateprcPOCharge(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, Nullable<int> pchOrder, Nullable<int> pchItem, Nullable<int> pchCharge, Nullable<double> pchPercent, Nullable<double> pchFixedAmount, Nullable<double> pchChargeAmount, string pchDescription)
        {
            var pchOrderParameter = pchOrder.HasValue ?
                new ObjectParameter("pchOrder", pchOrder) :
                new ObjectParameter("pchOrder", typeof(int));
    
            var pchItemParameter = pchItem.HasValue ?
                new ObjectParameter("pchItem", pchItem) :
                new ObjectParameter("pchItem", typeof(int));
    
            var pchChargeParameter = pchCharge.HasValue ?
                new ObjectParameter("pchCharge", pchCharge) :
                new ObjectParameter("pchCharge", typeof(int));
    
            var pchPercentParameter = pchPercent.HasValue ?
                new ObjectParameter("pchPercent", pchPercent) :
                new ObjectParameter("pchPercent", typeof(double));
    
            var pchFixedAmountParameter = pchFixedAmount.HasValue ?
                new ObjectParameter("pchFixedAmount", pchFixedAmount) :
                new ObjectParameter("pchFixedAmount", typeof(double));
    
            var pchChargeAmountParameter = pchChargeAmount.HasValue ?
                new ObjectParameter("pchChargeAmount", pchChargeAmount) :
                new ObjectParameter("pchChargeAmount", typeof(double));
    
            var pchDescriptionParameter = pchDescription != null ?
                new ObjectParameter("pchDescription", pchDescription) :
                new ObjectParameter("pchDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcPOCharge", resultCode, resultMessage, resultID, pchOrderParameter, pchItemParameter, pchChargeParameter, pchPercentParameter, pchFixedAmountParameter, pchChargeAmountParameter, pchDescriptionParameter);
        }
    
        public virtual int prcSpcCreateprcPOclause(ObjectParameter resultID, string pocDescription, string pocTitle, Nullable<int> pocPorId)
        {
            var pocDescriptionParameter = pocDescription != null ?
                new ObjectParameter("pocDescription", pocDescription) :
                new ObjectParameter("pocDescription", typeof(string));
    
            var pocTitleParameter = pocTitle != null ?
                new ObjectParameter("pocTitle", pocTitle) :
                new ObjectParameter("pocTitle", typeof(string));
    
            var pocPorIdParameter = pocPorId.HasValue ?
                new ObjectParameter("pocPorId", pocPorId) :
                new ObjectParameter("pocPorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcPOclause", resultID, pocDescriptionParameter, pocTitleParameter, pocPorIdParameter);
        }
    
        public virtual int prcSpcCreateprcPODiscount(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, Nullable<int> pdcOrder, Nullable<int> pdcItem, Nullable<int> pdcDiscount, Nullable<double> pdcPercent, Nullable<double> pdcFixedAmount, Nullable<double> pdcDiscountAmount, string pdcDescription)
        {
            var pdcOrderParameter = pdcOrder.HasValue ?
                new ObjectParameter("pdcOrder", pdcOrder) :
                new ObjectParameter("pdcOrder", typeof(int));
    
            var pdcItemParameter = pdcItem.HasValue ?
                new ObjectParameter("pdcItem", pdcItem) :
                new ObjectParameter("pdcItem", typeof(int));
    
            var pdcDiscountParameter = pdcDiscount.HasValue ?
                new ObjectParameter("pdcDiscount", pdcDiscount) :
                new ObjectParameter("pdcDiscount", typeof(int));
    
            var pdcPercentParameter = pdcPercent.HasValue ?
                new ObjectParameter("pdcPercent", pdcPercent) :
                new ObjectParameter("pdcPercent", typeof(double));
    
            var pdcFixedAmountParameter = pdcFixedAmount.HasValue ?
                new ObjectParameter("pdcFixedAmount", pdcFixedAmount) :
                new ObjectParameter("pdcFixedAmount", typeof(double));
    
            var pdcDiscountAmountParameter = pdcDiscountAmount.HasValue ?
                new ObjectParameter("pdcDiscountAmount", pdcDiscountAmount) :
                new ObjectParameter("pdcDiscountAmount", typeof(double));
    
            var pdcDescriptionParameter = pdcDescription != null ?
                new ObjectParameter("pdcDescription", pdcDescription) :
                new ObjectParameter("pdcDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcPODiscount", resultCode, resultMessage, resultID, pdcOrderParameter, pdcItemParameter, pdcDiscountParameter, pdcPercentParameter, pdcFixedAmountParameter, pdcDiscountAmountParameter, pdcDescriptionParameter);
        }
    
        public virtual int prcSpcCreateprcPOHeader(ObjectParameter rESULTCODE, ObjectParameter rESULTMESSAGE, ObjectParameter rESULTPORID, ObjectParameter rESULTPORNAME, string pORNAME, Nullable<int> pORREQUISITION, Nullable<int> pORBUYERSTATUS, string oRGCODE, string uSRCODE, Nullable<int> pORORDERTYPE, string pORCODE, Nullable<short> mODIFYPORNAME, string pORDESCRIPTION)
        {
            var pORNAMEParameter = pORNAME != null ?
                new ObjectParameter("PORNAME", pORNAME) :
                new ObjectParameter("PORNAME", typeof(string));
    
            var pORREQUISITIONParameter = pORREQUISITION.HasValue ?
                new ObjectParameter("PORREQUISITION", pORREQUISITION) :
                new ObjectParameter("PORREQUISITION", typeof(int));
    
            var pORBUYERSTATUSParameter = pORBUYERSTATUS.HasValue ?
                new ObjectParameter("PORBUYERSTATUS", pORBUYERSTATUS) :
                new ObjectParameter("PORBUYERSTATUS", typeof(int));
    
            var oRGCODEParameter = oRGCODE != null ?
                new ObjectParameter("ORGCODE", oRGCODE) :
                new ObjectParameter("ORGCODE", typeof(string));
    
            var uSRCODEParameter = uSRCODE != null ?
                new ObjectParameter("USRCODE", uSRCODE) :
                new ObjectParameter("USRCODE", typeof(string));
    
            var pORORDERTYPEParameter = pORORDERTYPE.HasValue ?
                new ObjectParameter("PORORDERTYPE", pORORDERTYPE) :
                new ObjectParameter("PORORDERTYPE", typeof(int));
    
            var pORCODEParameter = pORCODE != null ?
                new ObjectParameter("PORCODE", pORCODE) :
                new ObjectParameter("PORCODE", typeof(string));
    
            var mODIFYPORNAMEParameter = mODIFYPORNAME.HasValue ?
                new ObjectParameter("MODIFYPORNAME", mODIFYPORNAME) :
                new ObjectParameter("MODIFYPORNAME", typeof(short));
    
            var pORDESCRIPTIONParameter = pORDESCRIPTION != null ?
                new ObjectParameter("PORDESCRIPTION", pORDESCRIPTION) :
                new ObjectParameter("PORDESCRIPTION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcPOHeader", rESULTCODE, rESULTMESSAGE, rESULTPORID, rESULTPORNAME, pORNAMEParameter, pORREQUISITIONParameter, pORBUYERSTATUSParameter, oRGCODEParameter, uSRCODEParameter, pORORDERTYPEParameter, pORCODEParameter, mODIFYPORNAMEParameter, pORDESCRIPTIONParameter);
        }
    
        public virtual int prcSpcCreateprcPOHeaderFromRFB(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultPorID, ObjectParameter resultPorName, string porName, string porDescription, Nullable<int> porSourceDocumentType, Nullable<int> porSourceDocumentNumber, Nullable<int> porOrderType, string porBuyerOrganization, string porBuyerUser, Nullable<int> porBuyerStatus, string porSellerOrganization, string porSellerUser, string porSellerStatus)
        {
            var porNameParameter = porName != null ?
                new ObjectParameter("porName", porName) :
                new ObjectParameter("porName", typeof(string));
    
            var porDescriptionParameter = porDescription != null ?
                new ObjectParameter("porDescription", porDescription) :
                new ObjectParameter("porDescription", typeof(string));
    
            var porSourceDocumentTypeParameter = porSourceDocumentType.HasValue ?
                new ObjectParameter("porSourceDocumentType", porSourceDocumentType) :
                new ObjectParameter("porSourceDocumentType", typeof(int));
    
            var porSourceDocumentNumberParameter = porSourceDocumentNumber.HasValue ?
                new ObjectParameter("porSourceDocumentNumber", porSourceDocumentNumber) :
                new ObjectParameter("porSourceDocumentNumber", typeof(int));
    
            var porOrderTypeParameter = porOrderType.HasValue ?
                new ObjectParameter("porOrderType", porOrderType) :
                new ObjectParameter("porOrderType", typeof(int));
    
            var porBuyerOrganizationParameter = porBuyerOrganization != null ?
                new ObjectParameter("porBuyerOrganization", porBuyerOrganization) :
                new ObjectParameter("porBuyerOrganization", typeof(string));
    
            var porBuyerUserParameter = porBuyerUser != null ?
                new ObjectParameter("porBuyerUser", porBuyerUser) :
                new ObjectParameter("porBuyerUser", typeof(string));
    
            var porBuyerStatusParameter = porBuyerStatus.HasValue ?
                new ObjectParameter("porBuyerStatus", porBuyerStatus) :
                new ObjectParameter("porBuyerStatus", typeof(int));
    
            var porSellerOrganizationParameter = porSellerOrganization != null ?
                new ObjectParameter("porSellerOrganization", porSellerOrganization) :
                new ObjectParameter("porSellerOrganization", typeof(string));
    
            var porSellerUserParameter = porSellerUser != null ?
                new ObjectParameter("porSellerUser", porSellerUser) :
                new ObjectParameter("porSellerUser", typeof(string));
    
            var porSellerStatusParameter = porSellerStatus != null ?
                new ObjectParameter("porSellerStatus", porSellerStatus) :
                new ObjectParameter("porSellerStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcPOHeaderFromRFB", resultCode, resultMessage, resultPorID, resultPorName, porNameParameter, porDescriptionParameter, porSourceDocumentTypeParameter, porSourceDocumentNumberParameter, porOrderTypeParameter, porBuyerOrganizationParameter, porBuyerUserParameter, porBuyerStatusParameter, porSellerOrganizationParameter, porSellerUserParameter, porSellerStatusParameter);
        }
    
        public virtual int prcSpcCreateprcPOHeaderLA(ObjectParameter rESULTCODE, ObjectParameter rESULTMESSAGE, ObjectParameter rESULTPORID, ObjectParameter rESULTPORNAME, Nullable<int> pORREQUISITION, Nullable<System.DateTime> pORCREATIONDATE, string pORMKPSELLERREFERENCE, string pORCODE, string pORNAME, Nullable<int> pORORDERTYPE, string pORBUYERORGANIZATION, string pORBUYERUSER, Nullable<int> pORBUYERSTATUS, string pORSELLERORGANIZATION, string pORSELLERUSER, Nullable<int> pORSELLERSTATUS, Nullable<int> pORPAYMENTMETHOD, Nullable<int> pORINVOICEADDRESS, Nullable<int> pORSHIPADDRESS, Nullable<short> mODIFYPORNAME, string pORCURRENCY, Nullable<double> pORPERCENTTAXES, Nullable<int> pORTAXCODE, string oRGTAXIDBUYER, string eCTNAMEBUYER, string oRGTAXIDSELLER, string eCTNAMESELLER)
        {
            var pORREQUISITIONParameter = pORREQUISITION.HasValue ?
                new ObjectParameter("PORREQUISITION", pORREQUISITION) :
                new ObjectParameter("PORREQUISITION", typeof(int));
    
            var pORCREATIONDATEParameter = pORCREATIONDATE.HasValue ?
                new ObjectParameter("PORCREATIONDATE", pORCREATIONDATE) :
                new ObjectParameter("PORCREATIONDATE", typeof(System.DateTime));
    
            var pORMKPSELLERREFERENCEParameter = pORMKPSELLERREFERENCE != null ?
                new ObjectParameter("PORMKPSELLERREFERENCE", pORMKPSELLERREFERENCE) :
                new ObjectParameter("PORMKPSELLERREFERENCE", typeof(string));
    
            var pORCODEParameter = pORCODE != null ?
                new ObjectParameter("PORCODE", pORCODE) :
                new ObjectParameter("PORCODE", typeof(string));
    
            var pORNAMEParameter = pORNAME != null ?
                new ObjectParameter("PORNAME", pORNAME) :
                new ObjectParameter("PORNAME", typeof(string));
    
            var pORORDERTYPEParameter = pORORDERTYPE.HasValue ?
                new ObjectParameter("PORORDERTYPE", pORORDERTYPE) :
                new ObjectParameter("PORORDERTYPE", typeof(int));
    
            var pORBUYERORGANIZATIONParameter = pORBUYERORGANIZATION != null ?
                new ObjectParameter("PORBUYERORGANIZATION", pORBUYERORGANIZATION) :
                new ObjectParameter("PORBUYERORGANIZATION", typeof(string));
    
            var pORBUYERUSERParameter = pORBUYERUSER != null ?
                new ObjectParameter("PORBUYERUSER", pORBUYERUSER) :
                new ObjectParameter("PORBUYERUSER", typeof(string));
    
            var pORBUYERSTATUSParameter = pORBUYERSTATUS.HasValue ?
                new ObjectParameter("PORBUYERSTATUS", pORBUYERSTATUS) :
                new ObjectParameter("PORBUYERSTATUS", typeof(int));
    
            var pORSELLERORGANIZATIONParameter = pORSELLERORGANIZATION != null ?
                new ObjectParameter("PORSELLERORGANIZATION", pORSELLERORGANIZATION) :
                new ObjectParameter("PORSELLERORGANIZATION", typeof(string));
    
            var pORSELLERUSERParameter = pORSELLERUSER != null ?
                new ObjectParameter("PORSELLERUSER", pORSELLERUSER) :
                new ObjectParameter("PORSELLERUSER", typeof(string));
    
            var pORSELLERSTATUSParameter = pORSELLERSTATUS.HasValue ?
                new ObjectParameter("PORSELLERSTATUS", pORSELLERSTATUS) :
                new ObjectParameter("PORSELLERSTATUS", typeof(int));
    
            var pORPAYMENTMETHODParameter = pORPAYMENTMETHOD.HasValue ?
                new ObjectParameter("PORPAYMENTMETHOD", pORPAYMENTMETHOD) :
                new ObjectParameter("PORPAYMENTMETHOD", typeof(int));
    
            var pORINVOICEADDRESSParameter = pORINVOICEADDRESS.HasValue ?
                new ObjectParameter("PORINVOICEADDRESS", pORINVOICEADDRESS) :
                new ObjectParameter("PORINVOICEADDRESS", typeof(int));
    
            var pORSHIPADDRESSParameter = pORSHIPADDRESS.HasValue ?
                new ObjectParameter("PORSHIPADDRESS", pORSHIPADDRESS) :
                new ObjectParameter("PORSHIPADDRESS", typeof(int));
    
            var mODIFYPORNAMEParameter = mODIFYPORNAME.HasValue ?
                new ObjectParameter("MODIFYPORNAME", mODIFYPORNAME) :
                new ObjectParameter("MODIFYPORNAME", typeof(short));
    
            var pORCURRENCYParameter = pORCURRENCY != null ?
                new ObjectParameter("PORCURRENCY", pORCURRENCY) :
                new ObjectParameter("PORCURRENCY", typeof(string));
    
            var pORPERCENTTAXESParameter = pORPERCENTTAXES.HasValue ?
                new ObjectParameter("PORPERCENTTAXES", pORPERCENTTAXES) :
                new ObjectParameter("PORPERCENTTAXES", typeof(double));
    
            var pORTAXCODEParameter = pORTAXCODE.HasValue ?
                new ObjectParameter("PORTAXCODE", pORTAXCODE) :
                new ObjectParameter("PORTAXCODE", typeof(int));
    
            var oRGTAXIDBUYERParameter = oRGTAXIDBUYER != null ?
                new ObjectParameter("ORGTAXIDBUYER", oRGTAXIDBUYER) :
                new ObjectParameter("ORGTAXIDBUYER", typeof(string));
    
            var eCTNAMEBUYERParameter = eCTNAMEBUYER != null ?
                new ObjectParameter("ECTNAMEBUYER", eCTNAMEBUYER) :
                new ObjectParameter("ECTNAMEBUYER", typeof(string));
    
            var oRGTAXIDSELLERParameter = oRGTAXIDSELLER != null ?
                new ObjectParameter("ORGTAXIDSELLER", oRGTAXIDSELLER) :
                new ObjectParameter("ORGTAXIDSELLER", typeof(string));
    
            var eCTNAMESELLERParameter = eCTNAMESELLER != null ?
                new ObjectParameter("ECTNAMESELLER", eCTNAMESELLER) :
                new ObjectParameter("ECTNAMESELLER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcPOHeaderLA", rESULTCODE, rESULTMESSAGE, rESULTPORID, rESULTPORNAME, pORREQUISITIONParameter, pORCREATIONDATEParameter, pORMKPSELLERREFERENCEParameter, pORCODEParameter, pORNAMEParameter, pORORDERTYPEParameter, pORBUYERORGANIZATIONParameter, pORBUYERUSERParameter, pORBUYERSTATUSParameter, pORSELLERORGANIZATIONParameter, pORSELLERUSERParameter, pORSELLERSTATUSParameter, pORPAYMENTMETHODParameter, pORINVOICEADDRESSParameter, pORSHIPADDRESSParameter, mODIFYPORNAMEParameter, pORCURRENCYParameter, pORPERCENTTAXESParameter, pORTAXCODEParameter, oRGTAXIDBUYERParameter, eCTNAMEBUYERParameter, oRGTAXIDSELLERParameter, eCTNAMESELLERParameter);
        }
    
        public virtual int PRCSPCCREATEPRCPOHEADERNew(ObjectParameter rESULTCODE, ObjectParameter rESULTMESSAGE, ObjectParameter rESULTPORID, ObjectParameter rESULTPORNAME, string pORNAME, Nullable<int> pORREQUISITION, Nullable<int> pORBUYERSTATUS, string oRGCODE, string uSRCODE, Nullable<int> pORORDERTYPE, string pORCODE, Nullable<short> mODIFYPORNAME, string pORDESCRIPTION, string pORFinanciamiento)
        {
            var pORNAMEParameter = pORNAME != null ?
                new ObjectParameter("PORNAME", pORNAME) :
                new ObjectParameter("PORNAME", typeof(string));
    
            var pORREQUISITIONParameter = pORREQUISITION.HasValue ?
                new ObjectParameter("PORREQUISITION", pORREQUISITION) :
                new ObjectParameter("PORREQUISITION", typeof(int));
    
            var pORBUYERSTATUSParameter = pORBUYERSTATUS.HasValue ?
                new ObjectParameter("PORBUYERSTATUS", pORBUYERSTATUS) :
                new ObjectParameter("PORBUYERSTATUS", typeof(int));
    
            var oRGCODEParameter = oRGCODE != null ?
                new ObjectParameter("ORGCODE", oRGCODE) :
                new ObjectParameter("ORGCODE", typeof(string));
    
            var uSRCODEParameter = uSRCODE != null ?
                new ObjectParameter("USRCODE", uSRCODE) :
                new ObjectParameter("USRCODE", typeof(string));
    
            var pORORDERTYPEParameter = pORORDERTYPE.HasValue ?
                new ObjectParameter("PORORDERTYPE", pORORDERTYPE) :
                new ObjectParameter("PORORDERTYPE", typeof(int));
    
            var pORCODEParameter = pORCODE != null ?
                new ObjectParameter("PORCODE", pORCODE) :
                new ObjectParameter("PORCODE", typeof(string));
    
            var mODIFYPORNAMEParameter = mODIFYPORNAME.HasValue ?
                new ObjectParameter("MODIFYPORNAME", mODIFYPORNAME) :
                new ObjectParameter("MODIFYPORNAME", typeof(short));
    
            var pORDESCRIPTIONParameter = pORDESCRIPTION != null ?
                new ObjectParameter("PORDESCRIPTION", pORDESCRIPTION) :
                new ObjectParameter("PORDESCRIPTION", typeof(string));
    
            var pORFinanciamientoParameter = pORFinanciamiento != null ?
                new ObjectParameter("PORFinanciamiento", pORFinanciamiento) :
                new ObjectParameter("PORFinanciamiento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PRCSPCCREATEPRCPOHEADERNew", rESULTCODE, rESULTMESSAGE, rESULTPORID, rESULTPORNAME, pORNAMEParameter, pORREQUISITIONParameter, pORBUYERSTATUSParameter, oRGCODEParameter, uSRCODEParameter, pORORDERTYPEParameter, pORCODEParameter, mODIFYPORNAMEParameter, pORDESCRIPTIONParameter, pORFinanciamientoParameter);
        }
    
        public virtual int prcSpcCreateprcPOItem(ObjectParameter resultId, Nullable<int> poiOrder, Nullable<double> poiQuantity, Nullable<double> poiNetPrice, Nullable<int> poiGoodAndService, string poiName, string poiDescription, Nullable<int> poiSchema, string poiCategory, Nullable<double> poiTotalDiscount, Nullable<double> poiTotalCharge, Nullable<double> poiTotalTax, string poiUserDefined1)
        {
            var poiOrderParameter = poiOrder.HasValue ?
                new ObjectParameter("poiOrder", poiOrder) :
                new ObjectParameter("poiOrder", typeof(int));
    
            var poiQuantityParameter = poiQuantity.HasValue ?
                new ObjectParameter("poiQuantity", poiQuantity) :
                new ObjectParameter("poiQuantity", typeof(double));
    
            var poiNetPriceParameter = poiNetPrice.HasValue ?
                new ObjectParameter("poiNetPrice", poiNetPrice) :
                new ObjectParameter("poiNetPrice", typeof(double));
    
            var poiGoodAndServiceParameter = poiGoodAndService.HasValue ?
                new ObjectParameter("poiGoodAndService", poiGoodAndService) :
                new ObjectParameter("poiGoodAndService", typeof(int));
    
            var poiNameParameter = poiName != null ?
                new ObjectParameter("poiName", poiName) :
                new ObjectParameter("poiName", typeof(string));
    
            var poiDescriptionParameter = poiDescription != null ?
                new ObjectParameter("poiDescription", poiDescription) :
                new ObjectParameter("poiDescription", typeof(string));
    
            var poiSchemaParameter = poiSchema.HasValue ?
                new ObjectParameter("poiSchema", poiSchema) :
                new ObjectParameter("poiSchema", typeof(int));
    
            var poiCategoryParameter = poiCategory != null ?
                new ObjectParameter("poiCategory", poiCategory) :
                new ObjectParameter("poiCategory", typeof(string));
    
            var poiTotalDiscountParameter = poiTotalDiscount.HasValue ?
                new ObjectParameter("poiTotalDiscount", poiTotalDiscount) :
                new ObjectParameter("poiTotalDiscount", typeof(double));
    
            var poiTotalChargeParameter = poiTotalCharge.HasValue ?
                new ObjectParameter("poiTotalCharge", poiTotalCharge) :
                new ObjectParameter("poiTotalCharge", typeof(double));
    
            var poiTotalTaxParameter = poiTotalTax.HasValue ?
                new ObjectParameter("poiTotalTax", poiTotalTax) :
                new ObjectParameter("poiTotalTax", typeof(double));
    
            var poiUserDefined1Parameter = poiUserDefined1 != null ?
                new ObjectParameter("poiUserDefined1", poiUserDefined1) :
                new ObjectParameter("poiUserDefined1", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcPOItem", resultId, poiOrderParameter, poiQuantityParameter, poiNetPriceParameter, poiGoodAndServiceParameter, poiNameParameter, poiDescriptionParameter, poiSchemaParameter, poiCategoryParameter, poiTotalDiscountParameter, poiTotalChargeParameter, poiTotalTaxParameter, poiUserDefined1Parameter);
        }
    
        public virtual int prcSpcCreateprcPOItemByCart(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, Nullable<int> poiGoodAndService, string poiBuyerPartCode, string poiSellerPartCode, string poiMfrPartCode, Nullable<double> poiQuantity, string poiUOM, string poiDescription, string poiName, string poiCategory, Nullable<int> poiSchema, Nullable<int> poiOrder, Nullable<int> poiFrameworkContract)
        {
            var poiGoodAndServiceParameter = poiGoodAndService.HasValue ?
                new ObjectParameter("poiGoodAndService", poiGoodAndService) :
                new ObjectParameter("poiGoodAndService", typeof(int));
    
            var poiBuyerPartCodeParameter = poiBuyerPartCode != null ?
                new ObjectParameter("poiBuyerPartCode", poiBuyerPartCode) :
                new ObjectParameter("poiBuyerPartCode", typeof(string));
    
            var poiSellerPartCodeParameter = poiSellerPartCode != null ?
                new ObjectParameter("poiSellerPartCode", poiSellerPartCode) :
                new ObjectParameter("poiSellerPartCode", typeof(string));
    
            var poiMfrPartCodeParameter = poiMfrPartCode != null ?
                new ObjectParameter("poiMfrPartCode", poiMfrPartCode) :
                new ObjectParameter("poiMfrPartCode", typeof(string));
    
            var poiQuantityParameter = poiQuantity.HasValue ?
                new ObjectParameter("poiQuantity", poiQuantity) :
                new ObjectParameter("poiQuantity", typeof(double));
    
            var poiUOMParameter = poiUOM != null ?
                new ObjectParameter("poiUOM", poiUOM) :
                new ObjectParameter("poiUOM", typeof(string));
    
            var poiDescriptionParameter = poiDescription != null ?
                new ObjectParameter("poiDescription", poiDescription) :
                new ObjectParameter("poiDescription", typeof(string));
    
            var poiNameParameter = poiName != null ?
                new ObjectParameter("poiName", poiName) :
                new ObjectParameter("poiName", typeof(string));
    
            var poiCategoryParameter = poiCategory != null ?
                new ObjectParameter("poiCategory", poiCategory) :
                new ObjectParameter("poiCategory", typeof(string));
    
            var poiSchemaParameter = poiSchema.HasValue ?
                new ObjectParameter("poiSchema", poiSchema) :
                new ObjectParameter("poiSchema", typeof(int));
    
            var poiOrderParameter = poiOrder.HasValue ?
                new ObjectParameter("poiOrder", poiOrder) :
                new ObjectParameter("poiOrder", typeof(int));
    
            var poiFrameworkContractParameter = poiFrameworkContract.HasValue ?
                new ObjectParameter("poiFrameworkContract", poiFrameworkContract) :
                new ObjectParameter("poiFrameworkContract", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcPOItemByCart", resultCode, resultMessage, resultID, poiGoodAndServiceParameter, poiBuyerPartCodeParameter, poiSellerPartCodeParameter, poiMfrPartCodeParameter, poiQuantityParameter, poiUOMParameter, poiDescriptionParameter, poiNameParameter, poiCategoryParameter, poiSchemaParameter, poiOrderParameter, poiFrameworkContractParameter);
        }
    
        public virtual int prcSpcCreateprcPOItemCM(ObjectParameter resultId, Nullable<int> poiOrder, Nullable<double> poiQuantity, Nullable<double> poiNetPrice, Nullable<int> poiGoodAndService, string poiName, string poiDescription, Nullable<int> poiSchema, string poiCategory, Nullable<double> poiTotalDiscount, Nullable<double> poiTotalCharge, Nullable<double> poiTotalTax, string poiUserDefined1, string poiSupplierPartCode, Nullable<int> poiIdConvenioMarco, string poiNroLicitacionPublica)
        {
            var poiOrderParameter = poiOrder.HasValue ?
                new ObjectParameter("poiOrder", poiOrder) :
                new ObjectParameter("poiOrder", typeof(int));
    
            var poiQuantityParameter = poiQuantity.HasValue ?
                new ObjectParameter("poiQuantity", poiQuantity) :
                new ObjectParameter("poiQuantity", typeof(double));
    
            var poiNetPriceParameter = poiNetPrice.HasValue ?
                new ObjectParameter("poiNetPrice", poiNetPrice) :
                new ObjectParameter("poiNetPrice", typeof(double));
    
            var poiGoodAndServiceParameter = poiGoodAndService.HasValue ?
                new ObjectParameter("poiGoodAndService", poiGoodAndService) :
                new ObjectParameter("poiGoodAndService", typeof(int));
    
            var poiNameParameter = poiName != null ?
                new ObjectParameter("poiName", poiName) :
                new ObjectParameter("poiName", typeof(string));
    
            var poiDescriptionParameter = poiDescription != null ?
                new ObjectParameter("poiDescription", poiDescription) :
                new ObjectParameter("poiDescription", typeof(string));
    
            var poiSchemaParameter = poiSchema.HasValue ?
                new ObjectParameter("poiSchema", poiSchema) :
                new ObjectParameter("poiSchema", typeof(int));
    
            var poiCategoryParameter = poiCategory != null ?
                new ObjectParameter("poiCategory", poiCategory) :
                new ObjectParameter("poiCategory", typeof(string));
    
            var poiTotalDiscountParameter = poiTotalDiscount.HasValue ?
                new ObjectParameter("poiTotalDiscount", poiTotalDiscount) :
                new ObjectParameter("poiTotalDiscount", typeof(double));
    
            var poiTotalChargeParameter = poiTotalCharge.HasValue ?
                new ObjectParameter("poiTotalCharge", poiTotalCharge) :
                new ObjectParameter("poiTotalCharge", typeof(double));
    
            var poiTotalTaxParameter = poiTotalTax.HasValue ?
                new ObjectParameter("poiTotalTax", poiTotalTax) :
                new ObjectParameter("poiTotalTax", typeof(double));
    
            var poiUserDefined1Parameter = poiUserDefined1 != null ?
                new ObjectParameter("poiUserDefined1", poiUserDefined1) :
                new ObjectParameter("poiUserDefined1", typeof(string));
    
            var poiSupplierPartCodeParameter = poiSupplierPartCode != null ?
                new ObjectParameter("poiSupplierPartCode", poiSupplierPartCode) :
                new ObjectParameter("poiSupplierPartCode", typeof(string));
    
            var poiIdConvenioMarcoParameter = poiIdConvenioMarco.HasValue ?
                new ObjectParameter("poiIdConvenioMarco", poiIdConvenioMarco) :
                new ObjectParameter("poiIdConvenioMarco", typeof(int));
    
            var poiNroLicitacionPublicaParameter = poiNroLicitacionPublica != null ?
                new ObjectParameter("poiNroLicitacionPublica", poiNroLicitacionPublica) :
                new ObjectParameter("poiNroLicitacionPublica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcPOItemCM", resultId, poiOrderParameter, poiQuantityParameter, poiNetPriceParameter, poiGoodAndServiceParameter, poiNameParameter, poiDescriptionParameter, poiSchemaParameter, poiCategoryParameter, poiTotalDiscountParameter, poiTotalChargeParameter, poiTotalTaxParameter, poiUserDefined1Parameter, poiSupplierPartCodeParameter, poiIdConvenioMarcoParameter, poiNroLicitacionPublicaParameter);
        }
    
        public virtual int prcSpcCreateprcPOItemII(ObjectParameter resultId, Nullable<int> poiOrder, Nullable<double> poiQuantity, Nullable<double> poiNetPrice, Nullable<int> poiGoodAndService, string poiName, string poiDescription, Nullable<int> poiSchema, string poiCategory, Nullable<double> poiTotalDiscount, Nullable<double> poiTotalCharge, Nullable<double> poiTotalTax, string poiUserDefined1, string poiUOM, string poiCurrency)
        {
            var poiOrderParameter = poiOrder.HasValue ?
                new ObjectParameter("poiOrder", poiOrder) :
                new ObjectParameter("poiOrder", typeof(int));
    
            var poiQuantityParameter = poiQuantity.HasValue ?
                new ObjectParameter("poiQuantity", poiQuantity) :
                new ObjectParameter("poiQuantity", typeof(double));
    
            var poiNetPriceParameter = poiNetPrice.HasValue ?
                new ObjectParameter("poiNetPrice", poiNetPrice) :
                new ObjectParameter("poiNetPrice", typeof(double));
    
            var poiGoodAndServiceParameter = poiGoodAndService.HasValue ?
                new ObjectParameter("poiGoodAndService", poiGoodAndService) :
                new ObjectParameter("poiGoodAndService", typeof(int));
    
            var poiNameParameter = poiName != null ?
                new ObjectParameter("poiName", poiName) :
                new ObjectParameter("poiName", typeof(string));
    
            var poiDescriptionParameter = poiDescription != null ?
                new ObjectParameter("poiDescription", poiDescription) :
                new ObjectParameter("poiDescription", typeof(string));
    
            var poiSchemaParameter = poiSchema.HasValue ?
                new ObjectParameter("poiSchema", poiSchema) :
                new ObjectParameter("poiSchema", typeof(int));
    
            var poiCategoryParameter = poiCategory != null ?
                new ObjectParameter("poiCategory", poiCategory) :
                new ObjectParameter("poiCategory", typeof(string));
    
            var poiTotalDiscountParameter = poiTotalDiscount.HasValue ?
                new ObjectParameter("poiTotalDiscount", poiTotalDiscount) :
                new ObjectParameter("poiTotalDiscount", typeof(double));
    
            var poiTotalChargeParameter = poiTotalCharge.HasValue ?
                new ObjectParameter("poiTotalCharge", poiTotalCharge) :
                new ObjectParameter("poiTotalCharge", typeof(double));
    
            var poiTotalTaxParameter = poiTotalTax.HasValue ?
                new ObjectParameter("poiTotalTax", poiTotalTax) :
                new ObjectParameter("poiTotalTax", typeof(double));
    
            var poiUserDefined1Parameter = poiUserDefined1 != null ?
                new ObjectParameter("poiUserDefined1", poiUserDefined1) :
                new ObjectParameter("poiUserDefined1", typeof(string));
    
            var poiUOMParameter = poiUOM != null ?
                new ObjectParameter("poiUOM", poiUOM) :
                new ObjectParameter("poiUOM", typeof(string));
    
            var poiCurrencyParameter = poiCurrency != null ?
                new ObjectParameter("poiCurrency", poiCurrency) :
                new ObjectParameter("poiCurrency", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcPOItemII", resultId, poiOrderParameter, poiQuantityParameter, poiNetPriceParameter, poiGoodAndServiceParameter, poiNameParameter, poiDescriptionParameter, poiSchemaParameter, poiCategoryParameter, poiTotalDiscountParameter, poiTotalChargeParameter, poiTotalTaxParameter, poiUserDefined1Parameter, poiUOMParameter, poiCurrencyParameter);
        }
    
        public virtual int prcSpcCreateprcPOItemIII(ObjectParameter resultId, Nullable<int> poiOrder, Nullable<double> poiQuantity, Nullable<double> poiNetPrice, Nullable<int> poiGoodAndService, string poiName, string poiDescription, Nullable<int> poiSchema, string poiCategory, Nullable<double> poiTotalDiscount, Nullable<double> poiTotalCharge, Nullable<double> poiTotalTax, string poiUserDefined1, string poiSupplierPartCode)
        {
            var poiOrderParameter = poiOrder.HasValue ?
                new ObjectParameter("poiOrder", poiOrder) :
                new ObjectParameter("poiOrder", typeof(int));
    
            var poiQuantityParameter = poiQuantity.HasValue ?
                new ObjectParameter("poiQuantity", poiQuantity) :
                new ObjectParameter("poiQuantity", typeof(double));
    
            var poiNetPriceParameter = poiNetPrice.HasValue ?
                new ObjectParameter("poiNetPrice", poiNetPrice) :
                new ObjectParameter("poiNetPrice", typeof(double));
    
            var poiGoodAndServiceParameter = poiGoodAndService.HasValue ?
                new ObjectParameter("poiGoodAndService", poiGoodAndService) :
                new ObjectParameter("poiGoodAndService", typeof(int));
    
            var poiNameParameter = poiName != null ?
                new ObjectParameter("poiName", poiName) :
                new ObjectParameter("poiName", typeof(string));
    
            var poiDescriptionParameter = poiDescription != null ?
                new ObjectParameter("poiDescription", poiDescription) :
                new ObjectParameter("poiDescription", typeof(string));
    
            var poiSchemaParameter = poiSchema.HasValue ?
                new ObjectParameter("poiSchema", poiSchema) :
                new ObjectParameter("poiSchema", typeof(int));
    
            var poiCategoryParameter = poiCategory != null ?
                new ObjectParameter("poiCategory", poiCategory) :
                new ObjectParameter("poiCategory", typeof(string));
    
            var poiTotalDiscountParameter = poiTotalDiscount.HasValue ?
                new ObjectParameter("poiTotalDiscount", poiTotalDiscount) :
                new ObjectParameter("poiTotalDiscount", typeof(double));
    
            var poiTotalChargeParameter = poiTotalCharge.HasValue ?
                new ObjectParameter("poiTotalCharge", poiTotalCharge) :
                new ObjectParameter("poiTotalCharge", typeof(double));
    
            var poiTotalTaxParameter = poiTotalTax.HasValue ?
                new ObjectParameter("poiTotalTax", poiTotalTax) :
                new ObjectParameter("poiTotalTax", typeof(double));
    
            var poiUserDefined1Parameter = poiUserDefined1 != null ?
                new ObjectParameter("poiUserDefined1", poiUserDefined1) :
                new ObjectParameter("poiUserDefined1", typeof(string));
    
            var poiSupplierPartCodeParameter = poiSupplierPartCode != null ?
                new ObjectParameter("poiSupplierPartCode", poiSupplierPartCode) :
                new ObjectParameter("poiSupplierPartCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcPOItemIII", resultId, poiOrderParameter, poiQuantityParameter, poiNetPriceParameter, poiGoodAndServiceParameter, poiNameParameter, poiDescriptionParameter, poiSchemaParameter, poiCategoryParameter, poiTotalDiscountParameter, poiTotalChargeParameter, poiTotalTaxParameter, poiUserDefined1Parameter, poiSupplierPartCodeParameter);
        }
    
        public virtual int prcSpcCreateprcPOItemLA(ObjectParameter resultId, Nullable<int> poiOrder, Nullable<double> poiQuantity, Nullable<double> poiNetPrice, Nullable<int> poiGoodAndService, string poiName, string poiDescription, Nullable<int> poiSchema, string poiCategory, Nullable<double> poiTotalDiscount, Nullable<double> poiTotalCharge, Nullable<double> poiTotalTax, string poiUserDefined1)
        {
            var poiOrderParameter = poiOrder.HasValue ?
                new ObjectParameter("poiOrder", poiOrder) :
                new ObjectParameter("poiOrder", typeof(int));
    
            var poiQuantityParameter = poiQuantity.HasValue ?
                new ObjectParameter("poiQuantity", poiQuantity) :
                new ObjectParameter("poiQuantity", typeof(double));
    
            var poiNetPriceParameter = poiNetPrice.HasValue ?
                new ObjectParameter("poiNetPrice", poiNetPrice) :
                new ObjectParameter("poiNetPrice", typeof(double));
    
            var poiGoodAndServiceParameter = poiGoodAndService.HasValue ?
                new ObjectParameter("poiGoodAndService", poiGoodAndService) :
                new ObjectParameter("poiGoodAndService", typeof(int));
    
            var poiNameParameter = poiName != null ?
                new ObjectParameter("poiName", poiName) :
                new ObjectParameter("poiName", typeof(string));
    
            var poiDescriptionParameter = poiDescription != null ?
                new ObjectParameter("poiDescription", poiDescription) :
                new ObjectParameter("poiDescription", typeof(string));
    
            var poiSchemaParameter = poiSchema.HasValue ?
                new ObjectParameter("poiSchema", poiSchema) :
                new ObjectParameter("poiSchema", typeof(int));
    
            var poiCategoryParameter = poiCategory != null ?
                new ObjectParameter("poiCategory", poiCategory) :
                new ObjectParameter("poiCategory", typeof(string));
    
            var poiTotalDiscountParameter = poiTotalDiscount.HasValue ?
                new ObjectParameter("poiTotalDiscount", poiTotalDiscount) :
                new ObjectParameter("poiTotalDiscount", typeof(double));
    
            var poiTotalChargeParameter = poiTotalCharge.HasValue ?
                new ObjectParameter("poiTotalCharge", poiTotalCharge) :
                new ObjectParameter("poiTotalCharge", typeof(double));
    
            var poiTotalTaxParameter = poiTotalTax.HasValue ?
                new ObjectParameter("poiTotalTax", poiTotalTax) :
                new ObjectParameter("poiTotalTax", typeof(double));
    
            var poiUserDefined1Parameter = poiUserDefined1 != null ?
                new ObjectParameter("poiUserDefined1", poiUserDefined1) :
                new ObjectParameter("poiUserDefined1", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcPOItemLA", resultId, poiOrderParameter, poiQuantityParameter, poiNetPriceParameter, poiGoodAndServiceParameter, poiNameParameter, poiDescriptionParameter, poiSchemaParameter, poiCategoryParameter, poiTotalDiscountParameter, poiTotalChargeParameter, poiTotalTaxParameter, poiUserDefined1Parameter);
        }
    
        public virtual int prcSpcCreateprcPOOrderCharge(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, Nullable<int> pocIsActive, Nullable<int> pocCode, string pocName)
        {
            var pocIsActiveParameter = pocIsActive.HasValue ?
                new ObjectParameter("pocIsActive", pocIsActive) :
                new ObjectParameter("pocIsActive", typeof(int));
    
            var pocCodeParameter = pocCode.HasValue ?
                new ObjectParameter("pocCode", pocCode) :
                new ObjectParameter("pocCode", typeof(int));
    
            var pocNameParameter = pocName != null ?
                new ObjectParameter("pocName", pocName) :
                new ObjectParameter("pocName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcPOOrderCharge", resultCode, resultMessage, resultID, pocIsActiveParameter, pocCodeParameter, pocNameParameter);
        }
    
        public virtual int prcSpcCreateprcPOOrderDiscount(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, Nullable<int> podIsActive, Nullable<int> podCode, string podName)
        {
            var podIsActiveParameter = podIsActive.HasValue ?
                new ObjectParameter("podIsActive", podIsActive) :
                new ObjectParameter("podIsActive", typeof(int));
    
            var podCodeParameter = podCode.HasValue ?
                new ObjectParameter("podCode", podCode) :
                new ObjectParameter("podCode", typeof(int));
    
            var podNameParameter = podName != null ?
                new ObjectParameter("podName", podName) :
                new ObjectParameter("podName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcPOOrderDiscount", resultCode, resultMessage, resultID, podIsActiveParameter, podCodeParameter, podNameParameter);
        }
    
        public virtual int prcSpcCreateprcPOTax(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, Nullable<int> ptxOrder, Nullable<int> ptxItem, Nullable<int> ptxTax, Nullable<double> ptxExemptAmount, Nullable<double> ptxTaxableAmount, Nullable<double> ptxTaxAmount)
        {
            var ptxOrderParameter = ptxOrder.HasValue ?
                new ObjectParameter("ptxOrder", ptxOrder) :
                new ObjectParameter("ptxOrder", typeof(int));
    
            var ptxItemParameter = ptxItem.HasValue ?
                new ObjectParameter("ptxItem", ptxItem) :
                new ObjectParameter("ptxItem", typeof(int));
    
            var ptxTaxParameter = ptxTax.HasValue ?
                new ObjectParameter("ptxTax", ptxTax) :
                new ObjectParameter("ptxTax", typeof(int));
    
            var ptxExemptAmountParameter = ptxExemptAmount.HasValue ?
                new ObjectParameter("ptxExemptAmount", ptxExemptAmount) :
                new ObjectParameter("ptxExemptAmount", typeof(double));
    
            var ptxTaxableAmountParameter = ptxTaxableAmount.HasValue ?
                new ObjectParameter("ptxTaxableAmount", ptxTaxableAmount) :
                new ObjectParameter("ptxTaxableAmount", typeof(double));
    
            var ptxTaxAmountParameter = ptxTaxAmount.HasValue ?
                new ObjectParameter("ptxTaxAmount", ptxTaxAmount) :
                new ObjectParameter("ptxTaxAmount", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcPOTax", resultCode, resultMessage, resultID, ptxOrderParameter, ptxItemParameter, ptxTaxParameter, ptxExemptAmountParameter, ptxTaxableAmountParameter, ptxTaxAmountParameter);
        }
    
        public virtual int prcSpcCreateprcPOVersion(ObjectParameter rESULTCODE, ObjectParameter rESULTMESSAGE, ObjectParameter rESULTID, string pOVXML, string pOVCOMMENT, Nullable<int> pOVORDER, Nullable<int> pOVPOSELLERSTATUS, Nullable<int> pOVPOBUYERSTATUS, string pOVUSER)
        {
            var pOVXMLParameter = pOVXML != null ?
                new ObjectParameter("POVXML", pOVXML) :
                new ObjectParameter("POVXML", typeof(string));
    
            var pOVCOMMENTParameter = pOVCOMMENT != null ?
                new ObjectParameter("POVCOMMENT", pOVCOMMENT) :
                new ObjectParameter("POVCOMMENT", typeof(string));
    
            var pOVORDERParameter = pOVORDER.HasValue ?
                new ObjectParameter("POVORDER", pOVORDER) :
                new ObjectParameter("POVORDER", typeof(int));
    
            var pOVPOSELLERSTATUSParameter = pOVPOSELLERSTATUS.HasValue ?
                new ObjectParameter("POVPOSELLERSTATUS", pOVPOSELLERSTATUS) :
                new ObjectParameter("POVPOSELLERSTATUS", typeof(int));
    
            var pOVPOBUYERSTATUSParameter = pOVPOBUYERSTATUS.HasValue ?
                new ObjectParameter("POVPOBUYERSTATUS", pOVPOBUYERSTATUS) :
                new ObjectParameter("POVPOBUYERSTATUS", typeof(int));
    
            var pOVUSERParameter = pOVUSER != null ?
                new ObjectParameter("POVUSER", pOVUSER) :
                new ObjectParameter("POVUSER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcPOVersion", rESULTCODE, rESULTMESSAGE, rESULTID, pOVXMLParameter, pOVCOMMENTParameter, pOVORDERParameter, pOVPOSELLERSTATUSParameter, pOVPOBUYERSTATUSParameter, pOVUSERParameter);
        }
    
        public virtual int prcSpcCreateprcQuestion(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, Nullable<int> biqBID, string biqText)
        {
            var biqBIDParameter = biqBID.HasValue ?
                new ObjectParameter("biqBID", biqBID) :
                new ObjectParameter("biqBID", typeof(int));
    
            var biqTextParameter = biqText != null ?
                new ObjectParameter("biqText", biqText) :
                new ObjectParameter("biqText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcQuestion", resultCode, resultMessage, resultID, biqBIDParameter, biqTextParameter);
        }
    
        public virtual int prcSpcCreateprcRegisterCriteriaClauseRFB(ObjectParameter newId, Nullable<int> rbcRFBCode, Nullable<int> crclID, Nullable<int> rbaID, Nullable<int> rbcID)
        {
            var rbcRFBCodeParameter = rbcRFBCode.HasValue ?
                new ObjectParameter("rbcRFBCode", rbcRFBCode) :
                new ObjectParameter("rbcRFBCode", typeof(int));
    
            var crclIDParameter = crclID.HasValue ?
                new ObjectParameter("crclID", crclID) :
                new ObjectParameter("crclID", typeof(int));
    
            var rbaIDParameter = rbaID.HasValue ?
                new ObjectParameter("rbaID", rbaID) :
                new ObjectParameter("rbaID", typeof(int));
    
            var rbcIDParameter = rbcID.HasValue ?
                new ObjectParameter("rbcID", rbcID) :
                new ObjectParameter("rbcID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcRegisterCriteriaClauseRFB", newId, rbcRFBCodeParameter, crclIDParameter, rbaIDParameter, rbcIDParameter);
        }
    
        public virtual int prcSpcCreateprcREQItem(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, Nullable<int> rqiRequisition, Nullable<int> rqiGoodAndService, Nullable<int> rqiSchema, string rqiCategory, string rqiName, string rqiDescription, string rqiUOM, Nullable<double> rqiQuantity, string rqiBuyerPartCode, string rqiManufacturerPartCode, string rqiSupplierPartCode, Nullable<int> rqiFrameworkContract, Nullable<short> rqiInFrameworkContract, Nullable<short> rqiUpdated, Nullable<short> rqiDeleted)
        {
            var rqiRequisitionParameter = rqiRequisition.HasValue ?
                new ObjectParameter("rqiRequisition", rqiRequisition) :
                new ObjectParameter("rqiRequisition", typeof(int));
    
            var rqiGoodAndServiceParameter = rqiGoodAndService.HasValue ?
                new ObjectParameter("rqiGoodAndService", rqiGoodAndService) :
                new ObjectParameter("rqiGoodAndService", typeof(int));
    
            var rqiSchemaParameter = rqiSchema.HasValue ?
                new ObjectParameter("rqiSchema", rqiSchema) :
                new ObjectParameter("rqiSchema", typeof(int));
    
            var rqiCategoryParameter = rqiCategory != null ?
                new ObjectParameter("rqiCategory", rqiCategory) :
                new ObjectParameter("rqiCategory", typeof(string));
    
            var rqiNameParameter = rqiName != null ?
                new ObjectParameter("rqiName", rqiName) :
                new ObjectParameter("rqiName", typeof(string));
    
            var rqiDescriptionParameter = rqiDescription != null ?
                new ObjectParameter("rqiDescription", rqiDescription) :
                new ObjectParameter("rqiDescription", typeof(string));
    
            var rqiUOMParameter = rqiUOM != null ?
                new ObjectParameter("rqiUOM", rqiUOM) :
                new ObjectParameter("rqiUOM", typeof(string));
    
            var rqiQuantityParameter = rqiQuantity.HasValue ?
                new ObjectParameter("rqiQuantity", rqiQuantity) :
                new ObjectParameter("rqiQuantity", typeof(double));
    
            var rqiBuyerPartCodeParameter = rqiBuyerPartCode != null ?
                new ObjectParameter("rqiBuyerPartCode", rqiBuyerPartCode) :
                new ObjectParameter("rqiBuyerPartCode", typeof(string));
    
            var rqiManufacturerPartCodeParameter = rqiManufacturerPartCode != null ?
                new ObjectParameter("rqiManufacturerPartCode", rqiManufacturerPartCode) :
                new ObjectParameter("rqiManufacturerPartCode", typeof(string));
    
            var rqiSupplierPartCodeParameter = rqiSupplierPartCode != null ?
                new ObjectParameter("rqiSupplierPartCode", rqiSupplierPartCode) :
                new ObjectParameter("rqiSupplierPartCode", typeof(string));
    
            var rqiFrameworkContractParameter = rqiFrameworkContract.HasValue ?
                new ObjectParameter("rqiFrameworkContract", rqiFrameworkContract) :
                new ObjectParameter("rqiFrameworkContract", typeof(int));
    
            var rqiInFrameworkContractParameter = rqiInFrameworkContract.HasValue ?
                new ObjectParameter("rqiInFrameworkContract", rqiInFrameworkContract) :
                new ObjectParameter("rqiInFrameworkContract", typeof(short));
    
            var rqiUpdatedParameter = rqiUpdated.HasValue ?
                new ObjectParameter("rqiUpdated", rqiUpdated) :
                new ObjectParameter("rqiUpdated", typeof(short));
    
            var rqiDeletedParameter = rqiDeleted.HasValue ?
                new ObjectParameter("rqiDeleted", rqiDeleted) :
                new ObjectParameter("rqiDeleted", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcREQItem", resultCode, resultMessage, resultID, rqiRequisitionParameter, rqiGoodAndServiceParameter, rqiSchemaParameter, rqiCategoryParameter, rqiNameParameter, rqiDescriptionParameter, rqiUOMParameter, rqiQuantityParameter, rqiBuyerPartCodeParameter, rqiManufacturerPartCodeParameter, rqiSupplierPartCodeParameter, rqiFrameworkContractParameter, rqiInFrameworkContractParameter, rqiUpdatedParameter, rqiDeletedParameter);
        }
    
        public virtual int prcSpcCreateprcREQRequisition(ObjectParameter rESULTCODE, ObjectParameter rESULTMESSAGE, ObjectParameter rESULTID, string rEQNAME, string rEQORGANIZATION, string rEQUSER, Nullable<int> rEQPARENTCODE, Nullable<short> rEQPRIVACY)
        {
            var rEQNAMEParameter = rEQNAME != null ?
                new ObjectParameter("REQNAME", rEQNAME) :
                new ObjectParameter("REQNAME", typeof(string));
    
            var rEQORGANIZATIONParameter = rEQORGANIZATION != null ?
                new ObjectParameter("REQORGANIZATION", rEQORGANIZATION) :
                new ObjectParameter("REQORGANIZATION", typeof(string));
    
            var rEQUSERParameter = rEQUSER != null ?
                new ObjectParameter("REQUSER", rEQUSER) :
                new ObjectParameter("REQUSER", typeof(string));
    
            var rEQPARENTCODEParameter = rEQPARENTCODE.HasValue ?
                new ObjectParameter("REQPARENTCODE", rEQPARENTCODE) :
                new ObjectParameter("REQPARENTCODE", typeof(int));
    
            var rEQPRIVACYParameter = rEQPRIVACY.HasValue ?
                new ObjectParameter("REQPRIVACY", rEQPRIVACY) :
                new ObjectParameter("REQPRIVACY", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcREQRequisition", rESULTCODE, rESULTMESSAGE, rESULTID, rEQNAMEParameter, rEQORGANIZATIONParameter, rEQUSERParameter, rEQPARENTCODEParameter, rEQPRIVACYParameter);
        }
    
        public virtual int prcSpcCreateprcRFBApproval(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, Nullable<int> rapRFBCode, Nullable<System.DateTime> rapDate, Nullable<int> rapApprovalType, string rapNumber, string rapText1, string rapText2, string rapText3, string rapApproverName, string rapApproverPosition, Nullable<int> rapApprovalStep, Nullable<int> rbhJustifyType)
        {
            var rapRFBCodeParameter = rapRFBCode.HasValue ?
                new ObjectParameter("rapRFBCode", rapRFBCode) :
                new ObjectParameter("rapRFBCode", typeof(int));
    
            var rapDateParameter = rapDate.HasValue ?
                new ObjectParameter("rapDate", rapDate) :
                new ObjectParameter("rapDate", typeof(System.DateTime));
    
            var rapApprovalTypeParameter = rapApprovalType.HasValue ?
                new ObjectParameter("rapApprovalType", rapApprovalType) :
                new ObjectParameter("rapApprovalType", typeof(int));
    
            var rapNumberParameter = rapNumber != null ?
                new ObjectParameter("rapNumber", rapNumber) :
                new ObjectParameter("rapNumber", typeof(string));
    
            var rapText1Parameter = rapText1 != null ?
                new ObjectParameter("rapText1", rapText1) :
                new ObjectParameter("rapText1", typeof(string));
    
            var rapText2Parameter = rapText2 != null ?
                new ObjectParameter("rapText2", rapText2) :
                new ObjectParameter("rapText2", typeof(string));
    
            var rapText3Parameter = rapText3 != null ?
                new ObjectParameter("rapText3", rapText3) :
                new ObjectParameter("rapText3", typeof(string));
    
            var rapApproverNameParameter = rapApproverName != null ?
                new ObjectParameter("rapApproverName", rapApproverName) :
                new ObjectParameter("rapApproverName", typeof(string));
    
            var rapApproverPositionParameter = rapApproverPosition != null ?
                new ObjectParameter("rapApproverPosition", rapApproverPosition) :
                new ObjectParameter("rapApproverPosition", typeof(string));
    
            var rapApprovalStepParameter = rapApprovalStep.HasValue ?
                new ObjectParameter("rapApprovalStep", rapApprovalStep) :
                new ObjectParameter("rapApprovalStep", typeof(int));
    
            var rbhJustifyTypeParameter = rbhJustifyType.HasValue ?
                new ObjectParameter("rbhJustifyType", rbhJustifyType) :
                new ObjectParameter("rbhJustifyType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcRFBApproval", resultCode, resultMessage, resultID, rapRFBCodeParameter, rapDateParameter, rapApprovalTypeParameter, rapNumberParameter, rapText1Parameter, rapText2Parameter, rapText3Parameter, rapApproverNameParameter, rapApproverPositionParameter, rapApprovalStepParameter, rbhJustifyTypeParameter);
        }
    
        public virtual int prcSpcCreateprcRFBAprovTR(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<short> isActiveTR, Nullable<int> idDocTR, string observTR, Nullable<short> aprovStateTR, Nullable<System.DateTime> aprovDateTR, Nullable<System.DateTime> aprovDateRealTR, string aprovIDOficio)
        {
            var isActiveTRParameter = isActiveTR.HasValue ?
                new ObjectParameter("IsActiveTR", isActiveTR) :
                new ObjectParameter("IsActiveTR", typeof(short));
    
            var idDocTRParameter = idDocTR.HasValue ?
                new ObjectParameter("IdDocTR", idDocTR) :
                new ObjectParameter("IdDocTR", typeof(int));
    
            var observTRParameter = observTR != null ?
                new ObjectParameter("ObservTR", observTR) :
                new ObjectParameter("ObservTR", typeof(string));
    
            var aprovStateTRParameter = aprovStateTR.HasValue ?
                new ObjectParameter("AprovStateTR", aprovStateTR) :
                new ObjectParameter("AprovStateTR", typeof(short));
    
            var aprovDateTRParameter = aprovDateTR.HasValue ?
                new ObjectParameter("AprovDateTR", aprovDateTR) :
                new ObjectParameter("AprovDateTR", typeof(System.DateTime));
    
            var aprovDateRealTRParameter = aprovDateRealTR.HasValue ?
                new ObjectParameter("AprovDateRealTR", aprovDateRealTR) :
                new ObjectParameter("AprovDateRealTR", typeof(System.DateTime));
    
            var aprovIDOficioParameter = aprovIDOficio != null ?
                new ObjectParameter("AprovIDOficio", aprovIDOficio) :
                new ObjectParameter("AprovIDOficio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcRFBAprovTR", resultCode, resultMessage, isActiveTRParameter, idDocTRParameter, observTRParameter, aprovStateTRParameter, aprovDateTRParameter, aprovDateRealTRParameter, aprovIDOficioParameter);
        }
    
        public virtual int prcSpcCreateprcRFBAwardCriteria(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, Nullable<int> rbaRFBCode, string rbaName, Nullable<int> rbaDataType, Nullable<int> rbaScope, Nullable<double> rbaPercentage, Nullable<short> rbaIsChecked, string rbaComment)
        {
            var rbaRFBCodeParameter = rbaRFBCode.HasValue ?
                new ObjectParameter("rbaRFBCode", rbaRFBCode) :
                new ObjectParameter("rbaRFBCode", typeof(int));
    
            var rbaNameParameter = rbaName != null ?
                new ObjectParameter("rbaName", rbaName) :
                new ObjectParameter("rbaName", typeof(string));
    
            var rbaDataTypeParameter = rbaDataType.HasValue ?
                new ObjectParameter("rbaDataType", rbaDataType) :
                new ObjectParameter("rbaDataType", typeof(int));
    
            var rbaScopeParameter = rbaScope.HasValue ?
                new ObjectParameter("rbaScope", rbaScope) :
                new ObjectParameter("rbaScope", typeof(int));
    
            var rbaPercentageParameter = rbaPercentage.HasValue ?
                new ObjectParameter("rbaPercentage", rbaPercentage) :
                new ObjectParameter("rbaPercentage", typeof(double));
    
            var rbaIsCheckedParameter = rbaIsChecked.HasValue ?
                new ObjectParameter("rbaIsChecked", rbaIsChecked) :
                new ObjectParameter("rbaIsChecked", typeof(short));
    
            var rbaCommentParameter = rbaComment != null ?
                new ObjectParameter("rbaComment", rbaComment) :
                new ObjectParameter("rbaComment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcRFBAwardCriteria", resultCode, resultMessage, resultID, rbaRFBCodeParameter, rbaNameParameter, rbaDataTypeParameter, rbaScopeParameter, rbaPercentageParameter, rbaIsCheckedParameter, rbaCommentParameter);
        }
    
        public virtual int prcSpcCreateprcRFBAwardCriteriaCS(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, Nullable<int> rbaRFBCode, string rbaName, Nullable<int> rbaDataType, Nullable<int> rbaScope, Nullable<double> rbaPercentage, Nullable<short> rbaIsChecked, string rbaComment)
        {
            var rbaRFBCodeParameter = rbaRFBCode.HasValue ?
                new ObjectParameter("rbaRFBCode", rbaRFBCode) :
                new ObjectParameter("rbaRFBCode", typeof(int));
    
            var rbaNameParameter = rbaName != null ?
                new ObjectParameter("rbaName", rbaName) :
                new ObjectParameter("rbaName", typeof(string));
    
            var rbaDataTypeParameter = rbaDataType.HasValue ?
                new ObjectParameter("rbaDataType", rbaDataType) :
                new ObjectParameter("rbaDataType", typeof(int));
    
            var rbaScopeParameter = rbaScope.HasValue ?
                new ObjectParameter("rbaScope", rbaScope) :
                new ObjectParameter("rbaScope", typeof(int));
    
            var rbaPercentageParameter = rbaPercentage.HasValue ?
                new ObjectParameter("rbaPercentage", rbaPercentage) :
                new ObjectParameter("rbaPercentage", typeof(double));
    
            var rbaIsCheckedParameter = rbaIsChecked.HasValue ?
                new ObjectParameter("rbaIsChecked", rbaIsChecked) :
                new ObjectParameter("rbaIsChecked", typeof(short));
    
            var rbaCommentParameter = rbaComment != null ?
                new ObjectParameter("rbaComment", rbaComment) :
                new ObjectParameter("rbaComment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcRFBAwardCriteriaCS", resultCode, resultMessage, resultID, rbaRFBCodeParameter, rbaNameParameter, rbaDataTypeParameter, rbaScopeParameter, rbaPercentageParameter, rbaIsCheckedParameter, rbaCommentParameter);
        }
    
        public virtual int prcSpcCreateprcRFBAwardCriteriaPRECS(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, Nullable<int> rbaRFBCode, string rbaName, Nullable<int> rbaDataType, Nullable<int> rbaScope, Nullable<double> rbaPercentage, Nullable<short> rbaIsChecked, string rbaComment)
        {
            var rbaRFBCodeParameter = rbaRFBCode.HasValue ?
                new ObjectParameter("rbaRFBCode", rbaRFBCode) :
                new ObjectParameter("rbaRFBCode", typeof(int));
    
            var rbaNameParameter = rbaName != null ?
                new ObjectParameter("rbaName", rbaName) :
                new ObjectParameter("rbaName", typeof(string));
    
            var rbaDataTypeParameter = rbaDataType.HasValue ?
                new ObjectParameter("rbaDataType", rbaDataType) :
                new ObjectParameter("rbaDataType", typeof(int));
    
            var rbaScopeParameter = rbaScope.HasValue ?
                new ObjectParameter("rbaScope", rbaScope) :
                new ObjectParameter("rbaScope", typeof(int));
    
            var rbaPercentageParameter = rbaPercentage.HasValue ?
                new ObjectParameter("rbaPercentage", rbaPercentage) :
                new ObjectParameter("rbaPercentage", typeof(double));
    
            var rbaIsCheckedParameter = rbaIsChecked.HasValue ?
                new ObjectParameter("rbaIsChecked", rbaIsChecked) :
                new ObjectParameter("rbaIsChecked", typeof(short));
    
            var rbaCommentParameter = rbaComment != null ?
                new ObjectParameter("rbaComment", rbaComment) :
                new ObjectParameter("rbaComment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcRFBAwardCriteriaPRECS", resultCode, resultMessage, resultID, rbaRFBCodeParameter, rbaNameParameter, rbaDataTypeParameter, rbaScopeParameter, rbaPercentageParameter, rbaIsCheckedParameter, rbaCommentParameter);
        }
    
        public virtual int prcSpcCreateprcRFBClause(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, string rbcDescription, string rbcTitle, Nullable<short> rbcSequence, Nullable<int> rbcRFBCode)
        {
            var rbcDescriptionParameter = rbcDescription != null ?
                new ObjectParameter("rbcDescription", rbcDescription) :
                new ObjectParameter("rbcDescription", typeof(string));
    
            var rbcTitleParameter = rbcTitle != null ?
                new ObjectParameter("rbcTitle", rbcTitle) :
                new ObjectParameter("rbcTitle", typeof(string));
    
            var rbcSequenceParameter = rbcSequence.HasValue ?
                new ObjectParameter("rbcSequence", rbcSequence) :
                new ObjectParameter("rbcSequence", typeof(short));
    
            var rbcRFBCodeParameter = rbcRFBCode.HasValue ?
                new ObjectParameter("rbcRFBCode", rbcRFBCode) :
                new ObjectParameter("rbcRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcRFBClause", resultCode, resultMessage, resultID, rbcDescriptionParameter, rbcTitleParameter, rbcSequenceParameter, rbcRFBCodeParameter);
        }
    
        public virtual int prcSpcCreateprcRFBDate(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, Nullable<System.DateTime> rbdEstimatedContractSign, Nullable<System.DateTime> rbdEstimatedAwardDate, Nullable<int> rbdEstimatedAwardPeriod, Nullable<int> rbdEstimatedAwardProcess, Nullable<System.DateTime> rbdQuestionPublication, Nullable<System.DateTime> rbdQuestionClose, Nullable<System.DateTime> rbdQuestionOpening, Nullable<System.DateTime> rbdEconomicBidOpening, Nullable<System.DateTime> rbdTechnicalBidOpening, Nullable<System.DateTime> rbdEconomicBidReception, Nullable<System.DateTime> rbdTechnicalBidReception, Nullable<System.DateTime> rbdPhysicalMediaIssue, Nullable<System.DateTime> rbdOpeningDate, Nullable<int> rbdRFBCode)
        {
            var rbdEstimatedContractSignParameter = rbdEstimatedContractSign.HasValue ?
                new ObjectParameter("rbdEstimatedContractSign", rbdEstimatedContractSign) :
                new ObjectParameter("rbdEstimatedContractSign", typeof(System.DateTime));
    
            var rbdEstimatedAwardDateParameter = rbdEstimatedAwardDate.HasValue ?
                new ObjectParameter("rbdEstimatedAwardDate", rbdEstimatedAwardDate) :
                new ObjectParameter("rbdEstimatedAwardDate", typeof(System.DateTime));
    
            var rbdEstimatedAwardPeriodParameter = rbdEstimatedAwardPeriod.HasValue ?
                new ObjectParameter("rbdEstimatedAwardPeriod", rbdEstimatedAwardPeriod) :
                new ObjectParameter("rbdEstimatedAwardPeriod", typeof(int));
    
            var rbdEstimatedAwardProcessParameter = rbdEstimatedAwardProcess.HasValue ?
                new ObjectParameter("rbdEstimatedAwardProcess", rbdEstimatedAwardProcess) :
                new ObjectParameter("rbdEstimatedAwardProcess", typeof(int));
    
            var rbdQuestionPublicationParameter = rbdQuestionPublication.HasValue ?
                new ObjectParameter("rbdQuestionPublication", rbdQuestionPublication) :
                new ObjectParameter("rbdQuestionPublication", typeof(System.DateTime));
    
            var rbdQuestionCloseParameter = rbdQuestionClose.HasValue ?
                new ObjectParameter("rbdQuestionClose", rbdQuestionClose) :
                new ObjectParameter("rbdQuestionClose", typeof(System.DateTime));
    
            var rbdQuestionOpeningParameter = rbdQuestionOpening.HasValue ?
                new ObjectParameter("rbdQuestionOpening", rbdQuestionOpening) :
                new ObjectParameter("rbdQuestionOpening", typeof(System.DateTime));
    
            var rbdEconomicBidOpeningParameter = rbdEconomicBidOpening.HasValue ?
                new ObjectParameter("rbdEconomicBidOpening", rbdEconomicBidOpening) :
                new ObjectParameter("rbdEconomicBidOpening", typeof(System.DateTime));
    
            var rbdTechnicalBidOpeningParameter = rbdTechnicalBidOpening.HasValue ?
                new ObjectParameter("rbdTechnicalBidOpening", rbdTechnicalBidOpening) :
                new ObjectParameter("rbdTechnicalBidOpening", typeof(System.DateTime));
    
            var rbdEconomicBidReceptionParameter = rbdEconomicBidReception.HasValue ?
                new ObjectParameter("rbdEconomicBidReception", rbdEconomicBidReception) :
                new ObjectParameter("rbdEconomicBidReception", typeof(System.DateTime));
    
            var rbdTechnicalBidReceptionParameter = rbdTechnicalBidReception.HasValue ?
                new ObjectParameter("rbdTechnicalBidReception", rbdTechnicalBidReception) :
                new ObjectParameter("rbdTechnicalBidReception", typeof(System.DateTime));
    
            var rbdPhysicalMediaIssueParameter = rbdPhysicalMediaIssue.HasValue ?
                new ObjectParameter("rbdPhysicalMediaIssue", rbdPhysicalMediaIssue) :
                new ObjectParameter("rbdPhysicalMediaIssue", typeof(System.DateTime));
    
            var rbdOpeningDateParameter = rbdOpeningDate.HasValue ?
                new ObjectParameter("rbdOpeningDate", rbdOpeningDate) :
                new ObjectParameter("rbdOpeningDate", typeof(System.DateTime));
    
            var rbdRFBCodeParameter = rbdRFBCode.HasValue ?
                new ObjectParameter("rbdRFBCode", rbdRFBCode) :
                new ObjectParameter("rbdRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcRFBDate", resultCode, resultMessage, resultID, rbdEstimatedContractSignParameter, rbdEstimatedAwardDateParameter, rbdEstimatedAwardPeriodParameter, rbdEstimatedAwardProcessParameter, rbdQuestionPublicationParameter, rbdQuestionCloseParameter, rbdQuestionOpeningParameter, rbdEconomicBidOpeningParameter, rbdTechnicalBidOpeningParameter, rbdEconomicBidReceptionParameter, rbdTechnicalBidReceptionParameter, rbdPhysicalMediaIssueParameter, rbdOpeningDateParameter, rbdRFBCodeParameter);
        }
    
        public virtual int prcSpcCreateprcRFBDateContratacionServicios(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, Nullable<int> rbdRFBCode, Nullable<System.DateTime> rbdPhysicalMediaIssue, Nullable<System.DateTime> rbdTechnicalBidReception, Nullable<System.DateTime> rbdEconomicBidReception, Nullable<System.DateTime> rbdTechnicalBidOpening, Nullable<System.DateTime> rbdEconomicBidOpening, Nullable<System.DateTime> rbdQuestionOpening, Nullable<System.DateTime> rbdQuestionClose, Nullable<System.DateTime> rbdQuestionPublication, Nullable<int> rbdEstimatedAwardProcess, Nullable<int> rbdEstimatedAwardPeriod, Nullable<System.DateTime> rbdEstimatedAwardDate, Nullable<System.DateTime> rbdEstimatedContractSign, Nullable<System.DateTime> rbdOpeningDate, Nullable<System.DateTime> rbdDatePreCierre, Nullable<System.DateTime> rbdDatePrePublicacion)
        {
            var rbdRFBCodeParameter = rbdRFBCode.HasValue ?
                new ObjectParameter("rbdRFBCode", rbdRFBCode) :
                new ObjectParameter("rbdRFBCode", typeof(int));
    
            var rbdPhysicalMediaIssueParameter = rbdPhysicalMediaIssue.HasValue ?
                new ObjectParameter("rbdPhysicalMediaIssue", rbdPhysicalMediaIssue) :
                new ObjectParameter("rbdPhysicalMediaIssue", typeof(System.DateTime));
    
            var rbdTechnicalBidReceptionParameter = rbdTechnicalBidReception.HasValue ?
                new ObjectParameter("rbdTechnicalBidReception", rbdTechnicalBidReception) :
                new ObjectParameter("rbdTechnicalBidReception", typeof(System.DateTime));
    
            var rbdEconomicBidReceptionParameter = rbdEconomicBidReception.HasValue ?
                new ObjectParameter("rbdEconomicBidReception", rbdEconomicBidReception) :
                new ObjectParameter("rbdEconomicBidReception", typeof(System.DateTime));
    
            var rbdTechnicalBidOpeningParameter = rbdTechnicalBidOpening.HasValue ?
                new ObjectParameter("rbdTechnicalBidOpening", rbdTechnicalBidOpening) :
                new ObjectParameter("rbdTechnicalBidOpening", typeof(System.DateTime));
    
            var rbdEconomicBidOpeningParameter = rbdEconomicBidOpening.HasValue ?
                new ObjectParameter("rbdEconomicBidOpening", rbdEconomicBidOpening) :
                new ObjectParameter("rbdEconomicBidOpening", typeof(System.DateTime));
    
            var rbdQuestionOpeningParameter = rbdQuestionOpening.HasValue ?
                new ObjectParameter("rbdQuestionOpening", rbdQuestionOpening) :
                new ObjectParameter("rbdQuestionOpening", typeof(System.DateTime));
    
            var rbdQuestionCloseParameter = rbdQuestionClose.HasValue ?
                new ObjectParameter("rbdQuestionClose", rbdQuestionClose) :
                new ObjectParameter("rbdQuestionClose", typeof(System.DateTime));
    
            var rbdQuestionPublicationParameter = rbdQuestionPublication.HasValue ?
                new ObjectParameter("rbdQuestionPublication", rbdQuestionPublication) :
                new ObjectParameter("rbdQuestionPublication", typeof(System.DateTime));
    
            var rbdEstimatedAwardProcessParameter = rbdEstimatedAwardProcess.HasValue ?
                new ObjectParameter("rbdEstimatedAwardProcess", rbdEstimatedAwardProcess) :
                new ObjectParameter("rbdEstimatedAwardProcess", typeof(int));
    
            var rbdEstimatedAwardPeriodParameter = rbdEstimatedAwardPeriod.HasValue ?
                new ObjectParameter("rbdEstimatedAwardPeriod", rbdEstimatedAwardPeriod) :
                new ObjectParameter("rbdEstimatedAwardPeriod", typeof(int));
    
            var rbdEstimatedAwardDateParameter = rbdEstimatedAwardDate.HasValue ?
                new ObjectParameter("rbdEstimatedAwardDate", rbdEstimatedAwardDate) :
                new ObjectParameter("rbdEstimatedAwardDate", typeof(System.DateTime));
    
            var rbdEstimatedContractSignParameter = rbdEstimatedContractSign.HasValue ?
                new ObjectParameter("rbdEstimatedContractSign", rbdEstimatedContractSign) :
                new ObjectParameter("rbdEstimatedContractSign", typeof(System.DateTime));
    
            var rbdOpeningDateParameter = rbdOpeningDate.HasValue ?
                new ObjectParameter("rbdOpeningDate", rbdOpeningDate) :
                new ObjectParameter("rbdOpeningDate", typeof(System.DateTime));
    
            var rbdDatePreCierreParameter = rbdDatePreCierre.HasValue ?
                new ObjectParameter("rbdDatePreCierre", rbdDatePreCierre) :
                new ObjectParameter("rbdDatePreCierre", typeof(System.DateTime));
    
            var rbdDatePrePublicacionParameter = rbdDatePrePublicacion.HasValue ?
                new ObjectParameter("rbdDatePrePublicacion", rbdDatePrePublicacion) :
                new ObjectParameter("rbdDatePrePublicacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcRFBDateContratacionServicios", resultCode, resultMessage, resultID, rbdRFBCodeParameter, rbdPhysicalMediaIssueParameter, rbdTechnicalBidReceptionParameter, rbdEconomicBidReceptionParameter, rbdTechnicalBidOpeningParameter, rbdEconomicBidOpeningParameter, rbdQuestionOpeningParameter, rbdQuestionCloseParameter, rbdQuestionPublicationParameter, rbdEstimatedAwardProcessParameter, rbdEstimatedAwardPeriodParameter, rbdEstimatedAwardDateParameter, rbdEstimatedContractSignParameter, rbdOpeningDateParameter, rbdDatePreCierreParameter, rbdDatePrePublicacionParameter);
        }
    
        public virtual int prcSpcCreateprcRFBDateContratacionServiciosII(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, Nullable<int> rbdRFBCode, Nullable<System.DateTime> rbdPhysicalMediaIssue, Nullable<int> rcsDiasRecepcionOfertas, string rcsHorasRecepcionOfertas, Nullable<int> rcsDiasInicioPreguntas, string rcsHorasInicioPreguntas, Nullable<int> rcsDiasFinPreguntas, string rcsHorasFinPreguntas, Nullable<int> rcsAperturaElectronica, string rcsHorasAperturaElectronica, Nullable<int> rcsDiasPublicacionRespuesta, string rcsHorasPublicacionRespuesta, Nullable<int> rbdEstimatedAwardProcess, Nullable<int> rbdEstimatedAwardPeriod, Nullable<int> rbdEstimatedAwardDate, Nullable<System.DateTime> rbdEstimatedContractSign, Nullable<System.DateTime> rbdOpeningDate, Nullable<System.DateTime> rbdDatePreCierre, Nullable<System.DateTime> rbdDatePrePublicacion, string rcsHoraAdjudicacion)
        {
            var rbdRFBCodeParameter = rbdRFBCode.HasValue ?
                new ObjectParameter("rbdRFBCode", rbdRFBCode) :
                new ObjectParameter("rbdRFBCode", typeof(int));
    
            var rbdPhysicalMediaIssueParameter = rbdPhysicalMediaIssue.HasValue ?
                new ObjectParameter("rbdPhysicalMediaIssue", rbdPhysicalMediaIssue) :
                new ObjectParameter("rbdPhysicalMediaIssue", typeof(System.DateTime));
    
            var rcsDiasRecepcionOfertasParameter = rcsDiasRecepcionOfertas.HasValue ?
                new ObjectParameter("rcsDiasRecepcionOfertas", rcsDiasRecepcionOfertas) :
                new ObjectParameter("rcsDiasRecepcionOfertas", typeof(int));
    
            var rcsHorasRecepcionOfertasParameter = rcsHorasRecepcionOfertas != null ?
                new ObjectParameter("rcsHorasRecepcionOfertas", rcsHorasRecepcionOfertas) :
                new ObjectParameter("rcsHorasRecepcionOfertas", typeof(string));
    
            var rcsDiasInicioPreguntasParameter = rcsDiasInicioPreguntas.HasValue ?
                new ObjectParameter("rcsDiasInicioPreguntas", rcsDiasInicioPreguntas) :
                new ObjectParameter("rcsDiasInicioPreguntas", typeof(int));
    
            var rcsHorasInicioPreguntasParameter = rcsHorasInicioPreguntas != null ?
                new ObjectParameter("rcsHorasInicioPreguntas", rcsHorasInicioPreguntas) :
                new ObjectParameter("rcsHorasInicioPreguntas", typeof(string));
    
            var rcsDiasFinPreguntasParameter = rcsDiasFinPreguntas.HasValue ?
                new ObjectParameter("rcsDiasFinPreguntas", rcsDiasFinPreguntas) :
                new ObjectParameter("rcsDiasFinPreguntas", typeof(int));
    
            var rcsHorasFinPreguntasParameter = rcsHorasFinPreguntas != null ?
                new ObjectParameter("rcsHorasFinPreguntas", rcsHorasFinPreguntas) :
                new ObjectParameter("rcsHorasFinPreguntas", typeof(string));
    
            var rcsAperturaElectronicaParameter = rcsAperturaElectronica.HasValue ?
                new ObjectParameter("rcsAperturaElectronica", rcsAperturaElectronica) :
                new ObjectParameter("rcsAperturaElectronica", typeof(int));
    
            var rcsHorasAperturaElectronicaParameter = rcsHorasAperturaElectronica != null ?
                new ObjectParameter("rcsHorasAperturaElectronica", rcsHorasAperturaElectronica) :
                new ObjectParameter("rcsHorasAperturaElectronica", typeof(string));
    
            var rcsDiasPublicacionRespuestaParameter = rcsDiasPublicacionRespuesta.HasValue ?
                new ObjectParameter("rcsDiasPublicacionRespuesta", rcsDiasPublicacionRespuesta) :
                new ObjectParameter("rcsDiasPublicacionRespuesta", typeof(int));
    
            var rcsHorasPublicacionRespuestaParameter = rcsHorasPublicacionRespuesta != null ?
                new ObjectParameter("rcsHorasPublicacionRespuesta", rcsHorasPublicacionRespuesta) :
                new ObjectParameter("rcsHorasPublicacionRespuesta", typeof(string));
    
            var rbdEstimatedAwardProcessParameter = rbdEstimatedAwardProcess.HasValue ?
                new ObjectParameter("rbdEstimatedAwardProcess", rbdEstimatedAwardProcess) :
                new ObjectParameter("rbdEstimatedAwardProcess", typeof(int));
    
            var rbdEstimatedAwardPeriodParameter = rbdEstimatedAwardPeriod.HasValue ?
                new ObjectParameter("rbdEstimatedAwardPeriod", rbdEstimatedAwardPeriod) :
                new ObjectParameter("rbdEstimatedAwardPeriod", typeof(int));
    
            var rbdEstimatedAwardDateParameter = rbdEstimatedAwardDate.HasValue ?
                new ObjectParameter("rbdEstimatedAwardDate", rbdEstimatedAwardDate) :
                new ObjectParameter("rbdEstimatedAwardDate", typeof(int));
    
            var rbdEstimatedContractSignParameter = rbdEstimatedContractSign.HasValue ?
                new ObjectParameter("rbdEstimatedContractSign", rbdEstimatedContractSign) :
                new ObjectParameter("rbdEstimatedContractSign", typeof(System.DateTime));
    
            var rbdOpeningDateParameter = rbdOpeningDate.HasValue ?
                new ObjectParameter("rbdOpeningDate", rbdOpeningDate) :
                new ObjectParameter("rbdOpeningDate", typeof(System.DateTime));
    
            var rbdDatePreCierreParameter = rbdDatePreCierre.HasValue ?
                new ObjectParameter("rbdDatePreCierre", rbdDatePreCierre) :
                new ObjectParameter("rbdDatePreCierre", typeof(System.DateTime));
    
            var rbdDatePrePublicacionParameter = rbdDatePrePublicacion.HasValue ?
                new ObjectParameter("rbdDatePrePublicacion", rbdDatePrePublicacion) :
                new ObjectParameter("rbdDatePrePublicacion", typeof(System.DateTime));
    
            var rcsHoraAdjudicacionParameter = rcsHoraAdjudicacion != null ?
                new ObjectParameter("rcsHoraAdjudicacion", rcsHoraAdjudicacion) :
                new ObjectParameter("rcsHoraAdjudicacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcRFBDateContratacionServiciosII", resultCode, resultMessage, resultID, rbdRFBCodeParameter, rbdPhysicalMediaIssueParameter, rcsDiasRecepcionOfertasParameter, rcsHorasRecepcionOfertasParameter, rcsDiasInicioPreguntasParameter, rcsHorasInicioPreguntasParameter, rcsDiasFinPreguntasParameter, rcsHorasFinPreguntasParameter, rcsAperturaElectronicaParameter, rcsHorasAperturaElectronicaParameter, rcsDiasPublicacionRespuestaParameter, rcsHorasPublicacionRespuestaParameter, rbdEstimatedAwardProcessParameter, rbdEstimatedAwardPeriodParameter, rbdEstimatedAwardDateParameter, rbdEstimatedContractSignParameter, rbdOpeningDateParameter, rbdDatePreCierreParameter, rbdDatePrePublicacionParameter, rcsHoraAdjudicacionParameter);
        }
    
        public virtual int prcSpcCreateprcRFBDateContratacionServiciosTR(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, Nullable<int> rbdRFBCode, Nullable<System.DateTime> rbdPhysicalMediaIssue, Nullable<int> rcsDiasRecepcionOfertas, string rcsHorasRecepcionOfertas, Nullable<int> rcsDiasInicioPreguntas, string rcsHorasInicioPreguntas, Nullable<int> rcsDiasFinPreguntas, string rcsHorasFinPreguntas, Nullable<int> rcsAperturaElectronica, string rcsHorasAperturaElectronica, Nullable<int> rcsDiasPublicacionRespuesta, string rcsHorasPublicacionRespuesta, Nullable<int> rbdEstimatedAwardProcess, Nullable<int> rbdEstimatedAwardPeriod, Nullable<int> rbdEstimatedAwardDate, Nullable<System.DateTime> rbdEstimatedContractSign, Nullable<System.DateTime> rbdOpeningDate, Nullable<int> rcsDiaFechaPreCierre, string rcsHoraFechaPreCierre, string rcsHoraAdjudicacion)
        {
            var rbdRFBCodeParameter = rbdRFBCode.HasValue ?
                new ObjectParameter("rbdRFBCode", rbdRFBCode) :
                new ObjectParameter("rbdRFBCode", typeof(int));
    
            var rbdPhysicalMediaIssueParameter = rbdPhysicalMediaIssue.HasValue ?
                new ObjectParameter("rbdPhysicalMediaIssue", rbdPhysicalMediaIssue) :
                new ObjectParameter("rbdPhysicalMediaIssue", typeof(System.DateTime));
    
            var rcsDiasRecepcionOfertasParameter = rcsDiasRecepcionOfertas.HasValue ?
                new ObjectParameter("rcsDiasRecepcionOfertas", rcsDiasRecepcionOfertas) :
                new ObjectParameter("rcsDiasRecepcionOfertas", typeof(int));
    
            var rcsHorasRecepcionOfertasParameter = rcsHorasRecepcionOfertas != null ?
                new ObjectParameter("rcsHorasRecepcionOfertas", rcsHorasRecepcionOfertas) :
                new ObjectParameter("rcsHorasRecepcionOfertas", typeof(string));
    
            var rcsDiasInicioPreguntasParameter = rcsDiasInicioPreguntas.HasValue ?
                new ObjectParameter("rcsDiasInicioPreguntas", rcsDiasInicioPreguntas) :
                new ObjectParameter("rcsDiasInicioPreguntas", typeof(int));
    
            var rcsHorasInicioPreguntasParameter = rcsHorasInicioPreguntas != null ?
                new ObjectParameter("rcsHorasInicioPreguntas", rcsHorasInicioPreguntas) :
                new ObjectParameter("rcsHorasInicioPreguntas", typeof(string));
    
            var rcsDiasFinPreguntasParameter = rcsDiasFinPreguntas.HasValue ?
                new ObjectParameter("rcsDiasFinPreguntas", rcsDiasFinPreguntas) :
                new ObjectParameter("rcsDiasFinPreguntas", typeof(int));
    
            var rcsHorasFinPreguntasParameter = rcsHorasFinPreguntas != null ?
                new ObjectParameter("rcsHorasFinPreguntas", rcsHorasFinPreguntas) :
                new ObjectParameter("rcsHorasFinPreguntas", typeof(string));
    
            var rcsAperturaElectronicaParameter = rcsAperturaElectronica.HasValue ?
                new ObjectParameter("rcsAperturaElectronica", rcsAperturaElectronica) :
                new ObjectParameter("rcsAperturaElectronica", typeof(int));
    
            var rcsHorasAperturaElectronicaParameter = rcsHorasAperturaElectronica != null ?
                new ObjectParameter("rcsHorasAperturaElectronica", rcsHorasAperturaElectronica) :
                new ObjectParameter("rcsHorasAperturaElectronica", typeof(string));
    
            var rcsDiasPublicacionRespuestaParameter = rcsDiasPublicacionRespuesta.HasValue ?
                new ObjectParameter("rcsDiasPublicacionRespuesta", rcsDiasPublicacionRespuesta) :
                new ObjectParameter("rcsDiasPublicacionRespuesta", typeof(int));
    
            var rcsHorasPublicacionRespuestaParameter = rcsHorasPublicacionRespuesta != null ?
                new ObjectParameter("rcsHorasPublicacionRespuesta", rcsHorasPublicacionRespuesta) :
                new ObjectParameter("rcsHorasPublicacionRespuesta", typeof(string));
    
            var rbdEstimatedAwardProcessParameter = rbdEstimatedAwardProcess.HasValue ?
                new ObjectParameter("rbdEstimatedAwardProcess", rbdEstimatedAwardProcess) :
                new ObjectParameter("rbdEstimatedAwardProcess", typeof(int));
    
            var rbdEstimatedAwardPeriodParameter = rbdEstimatedAwardPeriod.HasValue ?
                new ObjectParameter("rbdEstimatedAwardPeriod", rbdEstimatedAwardPeriod) :
                new ObjectParameter("rbdEstimatedAwardPeriod", typeof(int));
    
            var rbdEstimatedAwardDateParameter = rbdEstimatedAwardDate.HasValue ?
                new ObjectParameter("rbdEstimatedAwardDate", rbdEstimatedAwardDate) :
                new ObjectParameter("rbdEstimatedAwardDate", typeof(int));
    
            var rbdEstimatedContractSignParameter = rbdEstimatedContractSign.HasValue ?
                new ObjectParameter("rbdEstimatedContractSign", rbdEstimatedContractSign) :
                new ObjectParameter("rbdEstimatedContractSign", typeof(System.DateTime));
    
            var rbdOpeningDateParameter = rbdOpeningDate.HasValue ?
                new ObjectParameter("rbdOpeningDate", rbdOpeningDate) :
                new ObjectParameter("rbdOpeningDate", typeof(System.DateTime));
    
            var rcsDiaFechaPreCierreParameter = rcsDiaFechaPreCierre.HasValue ?
                new ObjectParameter("rcsDiaFechaPreCierre", rcsDiaFechaPreCierre) :
                new ObjectParameter("rcsDiaFechaPreCierre", typeof(int));
    
            var rcsHoraFechaPreCierreParameter = rcsHoraFechaPreCierre != null ?
                new ObjectParameter("rcsHoraFechaPreCierre", rcsHoraFechaPreCierre) :
                new ObjectParameter("rcsHoraFechaPreCierre", typeof(string));
    
            var rcsHoraAdjudicacionParameter = rcsHoraAdjudicacion != null ?
                new ObjectParameter("rcsHoraAdjudicacion", rcsHoraAdjudicacion) :
                new ObjectParameter("rcsHoraAdjudicacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcRFBDateContratacionServiciosTR", resultCode, resultMessage, resultID, rbdRFBCodeParameter, rbdPhysicalMediaIssueParameter, rcsDiasRecepcionOfertasParameter, rcsHorasRecepcionOfertasParameter, rcsDiasInicioPreguntasParameter, rcsHorasInicioPreguntasParameter, rcsDiasFinPreguntasParameter, rcsHorasFinPreguntasParameter, rcsAperturaElectronicaParameter, rcsHorasAperturaElectronicaParameter, rcsDiasPublicacionRespuestaParameter, rcsHorasPublicacionRespuestaParameter, rbdEstimatedAwardProcessParameter, rbdEstimatedAwardPeriodParameter, rbdEstimatedAwardDateParameter, rbdEstimatedContractSignParameter, rbdOpeningDateParameter, rcsDiaFechaPreCierreParameter, rcsHoraFechaPreCierreParameter, rcsHoraAdjudicacionParameter);
        }
    
        public virtual int prcSpcCreateprcRFBDateMakeRazon(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, Nullable<int> rbdRFBCode, Nullable<System.DateTime> rbdPhysicalMediaIssue, Nullable<System.DateTime> rbdTechnicalBidReception, Nullable<System.DateTime> rbdEconomicBidReception, Nullable<System.DateTime> rbdTechnicalBidOpening, Nullable<System.DateTime> rbdEconomicBidOpening, Nullable<System.DateTime> rbdQuestionOpening, Nullable<System.DateTime> rbdQuestionClose, Nullable<System.DateTime> rbdQuestionPublication, Nullable<int> rbdEstimatedAwardProcess, Nullable<int> rbdEstimatedAwardPeriod, Nullable<System.DateTime> rbdEstimatedAwardDate, Nullable<System.DateTime> rbdEstimatedContractSign, Nullable<System.DateTime> rbdOpeningDate)
        {
            var rbdRFBCodeParameter = rbdRFBCode.HasValue ?
                new ObjectParameter("rbdRFBCode", rbdRFBCode) :
                new ObjectParameter("rbdRFBCode", typeof(int));
    
            var rbdPhysicalMediaIssueParameter = rbdPhysicalMediaIssue.HasValue ?
                new ObjectParameter("rbdPhysicalMediaIssue", rbdPhysicalMediaIssue) :
                new ObjectParameter("rbdPhysicalMediaIssue", typeof(System.DateTime));
    
            var rbdTechnicalBidReceptionParameter = rbdTechnicalBidReception.HasValue ?
                new ObjectParameter("rbdTechnicalBidReception", rbdTechnicalBidReception) :
                new ObjectParameter("rbdTechnicalBidReception", typeof(System.DateTime));
    
            var rbdEconomicBidReceptionParameter = rbdEconomicBidReception.HasValue ?
                new ObjectParameter("rbdEconomicBidReception", rbdEconomicBidReception) :
                new ObjectParameter("rbdEconomicBidReception", typeof(System.DateTime));
    
            var rbdTechnicalBidOpeningParameter = rbdTechnicalBidOpening.HasValue ?
                new ObjectParameter("rbdTechnicalBidOpening", rbdTechnicalBidOpening) :
                new ObjectParameter("rbdTechnicalBidOpening", typeof(System.DateTime));
    
            var rbdEconomicBidOpeningParameter = rbdEconomicBidOpening.HasValue ?
                new ObjectParameter("rbdEconomicBidOpening", rbdEconomicBidOpening) :
                new ObjectParameter("rbdEconomicBidOpening", typeof(System.DateTime));
    
            var rbdQuestionOpeningParameter = rbdQuestionOpening.HasValue ?
                new ObjectParameter("rbdQuestionOpening", rbdQuestionOpening) :
                new ObjectParameter("rbdQuestionOpening", typeof(System.DateTime));
    
            var rbdQuestionCloseParameter = rbdQuestionClose.HasValue ?
                new ObjectParameter("rbdQuestionClose", rbdQuestionClose) :
                new ObjectParameter("rbdQuestionClose", typeof(System.DateTime));
    
            var rbdQuestionPublicationParameter = rbdQuestionPublication.HasValue ?
                new ObjectParameter("rbdQuestionPublication", rbdQuestionPublication) :
                new ObjectParameter("rbdQuestionPublication", typeof(System.DateTime));
    
            var rbdEstimatedAwardProcessParameter = rbdEstimatedAwardProcess.HasValue ?
                new ObjectParameter("rbdEstimatedAwardProcess", rbdEstimatedAwardProcess) :
                new ObjectParameter("rbdEstimatedAwardProcess", typeof(int));
    
            var rbdEstimatedAwardPeriodParameter = rbdEstimatedAwardPeriod.HasValue ?
                new ObjectParameter("rbdEstimatedAwardPeriod", rbdEstimatedAwardPeriod) :
                new ObjectParameter("rbdEstimatedAwardPeriod", typeof(int));
    
            var rbdEstimatedAwardDateParameter = rbdEstimatedAwardDate.HasValue ?
                new ObjectParameter("rbdEstimatedAwardDate", rbdEstimatedAwardDate) :
                new ObjectParameter("rbdEstimatedAwardDate", typeof(System.DateTime));
    
            var rbdEstimatedContractSignParameter = rbdEstimatedContractSign.HasValue ?
                new ObjectParameter("rbdEstimatedContractSign", rbdEstimatedContractSign) :
                new ObjectParameter("rbdEstimatedContractSign", typeof(System.DateTime));
    
            var rbdOpeningDateParameter = rbdOpeningDate.HasValue ?
                new ObjectParameter("rbdOpeningDate", rbdOpeningDate) :
                new ObjectParameter("rbdOpeningDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcRFBDateMakeRazon", resultCode, resultMessage, resultID, rbdRFBCodeParameter, rbdPhysicalMediaIssueParameter, rbdTechnicalBidReceptionParameter, rbdEconomicBidReceptionParameter, rbdTechnicalBidOpeningParameter, rbdEconomicBidOpeningParameter, rbdQuestionOpeningParameter, rbdQuestionCloseParameter, rbdQuestionPublicationParameter, rbdEstimatedAwardProcessParameter, rbdEstimatedAwardPeriodParameter, rbdEstimatedAwardDateParameter, rbdEstimatedContractSignParameter, rbdOpeningDateParameter);
        }
    
        public virtual int prcSpcCreateprcRFBEncuestaRespuesta(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, Nullable<int> reoID, Nullable<int> rbhCode)
        {
            var reoIDParameter = reoID.HasValue ?
                new ObjectParameter("reoID", reoID) :
                new ObjectParameter("reoID", typeof(int));
    
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcRFBEncuestaRespuesta", resultCode, resultMessage, resultID, reoIDParameter, rbhCodeParameter);
        }
    
        public virtual int prcSpcCreateprcRFBGuarantee(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, string rgaComment, string rgaDescripcion, string rgaCurrency, Nullable<double> rgaAmount, string rgaAmountType, string rgaRestitution, Nullable<System.DateTime> rgaExpirationDate, string rgaBeneficiary, Nullable<int> rgaDocumentType, Nullable<int> rgaDocumentSubType, Nullable<int> rgaGuaranteeType, Nullable<short> rgaSequence, Nullable<int> rgaRFBCode, Nullable<int> rgaInstitution, string rgaGuaranteeNumber, string rgaOrganization, Nullable<short> rgaIsBasis, string rgaGuaranteeDocumentTypes)
        {
            var rgaCommentParameter = rgaComment != null ?
                new ObjectParameter("rgaComment", rgaComment) :
                new ObjectParameter("rgaComment", typeof(string));
    
            var rgaDescripcionParameter = rgaDescripcion != null ?
                new ObjectParameter("rgaDescripcion", rgaDescripcion) :
                new ObjectParameter("rgaDescripcion", typeof(string));
    
            var rgaCurrencyParameter = rgaCurrency != null ?
                new ObjectParameter("rgaCurrency", rgaCurrency) :
                new ObjectParameter("rgaCurrency", typeof(string));
    
            var rgaAmountParameter = rgaAmount.HasValue ?
                new ObjectParameter("rgaAmount", rgaAmount) :
                new ObjectParameter("rgaAmount", typeof(double));
    
            var rgaAmountTypeParameter = rgaAmountType != null ?
                new ObjectParameter("rgaAmountType", rgaAmountType) :
                new ObjectParameter("rgaAmountType", typeof(string));
    
            var rgaRestitutionParameter = rgaRestitution != null ?
                new ObjectParameter("rgaRestitution", rgaRestitution) :
                new ObjectParameter("rgaRestitution", typeof(string));
    
            var rgaExpirationDateParameter = rgaExpirationDate.HasValue ?
                new ObjectParameter("rgaExpirationDate", rgaExpirationDate) :
                new ObjectParameter("rgaExpirationDate", typeof(System.DateTime));
    
            var rgaBeneficiaryParameter = rgaBeneficiary != null ?
                new ObjectParameter("rgaBeneficiary", rgaBeneficiary) :
                new ObjectParameter("rgaBeneficiary", typeof(string));
    
            var rgaDocumentTypeParameter = rgaDocumentType.HasValue ?
                new ObjectParameter("rgaDocumentType", rgaDocumentType) :
                new ObjectParameter("rgaDocumentType", typeof(int));
    
            var rgaDocumentSubTypeParameter = rgaDocumentSubType.HasValue ?
                new ObjectParameter("rgaDocumentSubType", rgaDocumentSubType) :
                new ObjectParameter("rgaDocumentSubType", typeof(int));
    
            var rgaGuaranteeTypeParameter = rgaGuaranteeType.HasValue ?
                new ObjectParameter("rgaGuaranteeType", rgaGuaranteeType) :
                new ObjectParameter("rgaGuaranteeType", typeof(int));
    
            var rgaSequenceParameter = rgaSequence.HasValue ?
                new ObjectParameter("rgaSequence", rgaSequence) :
                new ObjectParameter("rgaSequence", typeof(short));
    
            var rgaRFBCodeParameter = rgaRFBCode.HasValue ?
                new ObjectParameter("rgaRFBCode", rgaRFBCode) :
                new ObjectParameter("rgaRFBCode", typeof(int));
    
            var rgaInstitutionParameter = rgaInstitution.HasValue ?
                new ObjectParameter("rgaInstitution", rgaInstitution) :
                new ObjectParameter("rgaInstitution", typeof(int));
    
            var rgaGuaranteeNumberParameter = rgaGuaranteeNumber != null ?
                new ObjectParameter("rgaGuaranteeNumber", rgaGuaranteeNumber) :
                new ObjectParameter("rgaGuaranteeNumber", typeof(string));
    
            var rgaOrganizationParameter = rgaOrganization != null ?
                new ObjectParameter("rgaOrganization", rgaOrganization) :
                new ObjectParameter("rgaOrganization", typeof(string));
    
            var rgaIsBasisParameter = rgaIsBasis.HasValue ?
                new ObjectParameter("rgaIsBasis", rgaIsBasis) :
                new ObjectParameter("rgaIsBasis", typeof(short));
    
            var rgaGuaranteeDocumentTypesParameter = rgaGuaranteeDocumentTypes != null ?
                new ObjectParameter("rgaGuaranteeDocumentTypes", rgaGuaranteeDocumentTypes) :
                new ObjectParameter("rgaGuaranteeDocumentTypes", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcRFBGuarantee", resultCode, resultMessage, resultID, rgaCommentParameter, rgaDescripcionParameter, rgaCurrencyParameter, rgaAmountParameter, rgaAmountTypeParameter, rgaRestitutionParameter, rgaExpirationDateParameter, rgaBeneficiaryParameter, rgaDocumentTypeParameter, rgaDocumentSubTypeParameter, rgaGuaranteeTypeParameter, rgaSequenceParameter, rgaRFBCodeParameter, rgaInstitutionParameter, rgaGuaranteeNumberParameter, rgaOrganizationParameter, rgaIsBasisParameter, rgaGuaranteeDocumentTypesParameter);
        }
    
        public virtual int prcSpcCreateprcRFBGuaranteeBID(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, string rgaComment, string rgaDescripcion, string rgaCurrency, Nullable<double> rgaAmount, string rgaAmountType, string rgaRestitution, Nullable<System.DateTime> rgaExpirationDate, string rgaBeneficiary, Nullable<int> rgaDocumentType, Nullable<int> rgaDocumentSubType, Nullable<int> rgaGuaranteeType, Nullable<short> rgaSequence, Nullable<int> rgaRFBCode, Nullable<int> rgaInstitution, string rgaGuaranteeNumber, string rgaOrganization, Nullable<short> rgaIsBasis, Nullable<int> rgaBID, Nullable<int> referenceID)
        {
            var rgaCommentParameter = rgaComment != null ?
                new ObjectParameter("rgaComment", rgaComment) :
                new ObjectParameter("rgaComment", typeof(string));
    
            var rgaDescripcionParameter = rgaDescripcion != null ?
                new ObjectParameter("rgaDescripcion", rgaDescripcion) :
                new ObjectParameter("rgaDescripcion", typeof(string));
    
            var rgaCurrencyParameter = rgaCurrency != null ?
                new ObjectParameter("rgaCurrency", rgaCurrency) :
                new ObjectParameter("rgaCurrency", typeof(string));
    
            var rgaAmountParameter = rgaAmount.HasValue ?
                new ObjectParameter("rgaAmount", rgaAmount) :
                new ObjectParameter("rgaAmount", typeof(double));
    
            var rgaAmountTypeParameter = rgaAmountType != null ?
                new ObjectParameter("rgaAmountType", rgaAmountType) :
                new ObjectParameter("rgaAmountType", typeof(string));
    
            var rgaRestitutionParameter = rgaRestitution != null ?
                new ObjectParameter("rgaRestitution", rgaRestitution) :
                new ObjectParameter("rgaRestitution", typeof(string));
    
            var rgaExpirationDateParameter = rgaExpirationDate.HasValue ?
                new ObjectParameter("rgaExpirationDate", rgaExpirationDate) :
                new ObjectParameter("rgaExpirationDate", typeof(System.DateTime));
    
            var rgaBeneficiaryParameter = rgaBeneficiary != null ?
                new ObjectParameter("rgaBeneficiary", rgaBeneficiary) :
                new ObjectParameter("rgaBeneficiary", typeof(string));
    
            var rgaDocumentTypeParameter = rgaDocumentType.HasValue ?
                new ObjectParameter("rgaDocumentType", rgaDocumentType) :
                new ObjectParameter("rgaDocumentType", typeof(int));
    
            var rgaDocumentSubTypeParameter = rgaDocumentSubType.HasValue ?
                new ObjectParameter("rgaDocumentSubType", rgaDocumentSubType) :
                new ObjectParameter("rgaDocumentSubType", typeof(int));
    
            var rgaGuaranteeTypeParameter = rgaGuaranteeType.HasValue ?
                new ObjectParameter("rgaGuaranteeType", rgaGuaranteeType) :
                new ObjectParameter("rgaGuaranteeType", typeof(int));
    
            var rgaSequenceParameter = rgaSequence.HasValue ?
                new ObjectParameter("rgaSequence", rgaSequence) :
                new ObjectParameter("rgaSequence", typeof(short));
    
            var rgaRFBCodeParameter = rgaRFBCode.HasValue ?
                new ObjectParameter("rgaRFBCode", rgaRFBCode) :
                new ObjectParameter("rgaRFBCode", typeof(int));
    
            var rgaInstitutionParameter = rgaInstitution.HasValue ?
                new ObjectParameter("rgaInstitution", rgaInstitution) :
                new ObjectParameter("rgaInstitution", typeof(int));
    
            var rgaGuaranteeNumberParameter = rgaGuaranteeNumber != null ?
                new ObjectParameter("rgaGuaranteeNumber", rgaGuaranteeNumber) :
                new ObjectParameter("rgaGuaranteeNumber", typeof(string));
    
            var rgaOrganizationParameter = rgaOrganization != null ?
                new ObjectParameter("rgaOrganization", rgaOrganization) :
                new ObjectParameter("rgaOrganization", typeof(string));
    
            var rgaIsBasisParameter = rgaIsBasis.HasValue ?
                new ObjectParameter("rgaIsBasis", rgaIsBasis) :
                new ObjectParameter("rgaIsBasis", typeof(short));
    
            var rgaBIDParameter = rgaBID.HasValue ?
                new ObjectParameter("rgaBID", rgaBID) :
                new ObjectParameter("rgaBID", typeof(int));
    
            var referenceIDParameter = referenceID.HasValue ?
                new ObjectParameter("ReferenceID", referenceID) :
                new ObjectParameter("ReferenceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcRFBGuaranteeBID", resultCode, resultMessage, resultID, rgaCommentParameter, rgaDescripcionParameter, rgaCurrencyParameter, rgaAmountParameter, rgaAmountTypeParameter, rgaRestitutionParameter, rgaExpirationDateParameter, rgaBeneficiaryParameter, rgaDocumentTypeParameter, rgaDocumentSubTypeParameter, rgaGuaranteeTypeParameter, rgaSequenceParameter, rgaRFBCodeParameter, rgaInstitutionParameter, rgaGuaranteeNumberParameter, rgaOrganizationParameter, rgaIsBasisParameter, rgaBIDParameter, referenceIDParameter);
        }
    
        public virtual int prcSpcCreateprcRFBHeader(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, string rbhOutsourcingComments, Nullable<short> rbhOutsourcingAllowed, string rbhContractPaymentMethod, Nullable<int> rbhContractTimePeriod, Nullable<int> rbhContractTime, Nullable<int> rbhContractDuration, string rbhEstimatedCurrency, Nullable<double> rbhEstimatedAmount, Nullable<short> rbhIsUniqueCurrency, string rbhCurrency, string rbhContactFax, string rbhContactPhone, string rbhContactEmail, string rbhContactPosition, string rbhContactLastName, string rbhContactFirstName, Nullable<int> rbhContactCode, string rbhOwnerDistrict, string rbhOwnerCity, string rbhOwnerCountry, string rbhOwnerAddress, string rbhOwnerTaxID, string rbhOwnerUnit, string rbhOwnerName, string rbhOwnerOrganizationCode, Nullable<int> rbhProcessSubType, Nullable<int> rbhProcessType, Nullable<int> rbhDocumentSubType, Nullable<int> rbhDocumentType, string rbhDescription, string rbhName, string rbhExternalCode, Nullable<int> rbhTemplate, string rbhUser, string rbhOrganization, string rbhEnterprise, Nullable<int> rbhEconomicStatus, Nullable<int> rbhTechnicalStatus, Nullable<int> rbhDocumentStatus, Nullable<System.DateTime> rbhCreationDate, Nullable<int> rbhRequisition, Nullable<short> rbhIsTemplate, Nullable<int> rbhCode)
        {
            var rbhOutsourcingCommentsParameter = rbhOutsourcingComments != null ?
                new ObjectParameter("rbhOutsourcingComments", rbhOutsourcingComments) :
                new ObjectParameter("rbhOutsourcingComments", typeof(string));
    
            var rbhOutsourcingAllowedParameter = rbhOutsourcingAllowed.HasValue ?
                new ObjectParameter("rbhOutsourcingAllowed", rbhOutsourcingAllowed) :
                new ObjectParameter("rbhOutsourcingAllowed", typeof(short));
    
            var rbhContractPaymentMethodParameter = rbhContractPaymentMethod != null ?
                new ObjectParameter("rbhContractPaymentMethod", rbhContractPaymentMethod) :
                new ObjectParameter("rbhContractPaymentMethod", typeof(string));
    
            var rbhContractTimePeriodParameter = rbhContractTimePeriod.HasValue ?
                new ObjectParameter("rbhContractTimePeriod", rbhContractTimePeriod) :
                new ObjectParameter("rbhContractTimePeriod", typeof(int));
    
            var rbhContractTimeParameter = rbhContractTime.HasValue ?
                new ObjectParameter("rbhContractTime", rbhContractTime) :
                new ObjectParameter("rbhContractTime", typeof(int));
    
            var rbhContractDurationParameter = rbhContractDuration.HasValue ?
                new ObjectParameter("rbhContractDuration", rbhContractDuration) :
                new ObjectParameter("rbhContractDuration", typeof(int));
    
            var rbhEstimatedCurrencyParameter = rbhEstimatedCurrency != null ?
                new ObjectParameter("rbhEstimatedCurrency", rbhEstimatedCurrency) :
                new ObjectParameter("rbhEstimatedCurrency", typeof(string));
    
            var rbhEstimatedAmountParameter = rbhEstimatedAmount.HasValue ?
                new ObjectParameter("rbhEstimatedAmount", rbhEstimatedAmount) :
                new ObjectParameter("rbhEstimatedAmount", typeof(double));
    
            var rbhIsUniqueCurrencyParameter = rbhIsUniqueCurrency.HasValue ?
                new ObjectParameter("rbhIsUniqueCurrency", rbhIsUniqueCurrency) :
                new ObjectParameter("rbhIsUniqueCurrency", typeof(short));
    
            var rbhCurrencyParameter = rbhCurrency != null ?
                new ObjectParameter("rbhCurrency", rbhCurrency) :
                new ObjectParameter("rbhCurrency", typeof(string));
    
            var rbhContactFaxParameter = rbhContactFax != null ?
                new ObjectParameter("rbhContactFax", rbhContactFax) :
                new ObjectParameter("rbhContactFax", typeof(string));
    
            var rbhContactPhoneParameter = rbhContactPhone != null ?
                new ObjectParameter("rbhContactPhone", rbhContactPhone) :
                new ObjectParameter("rbhContactPhone", typeof(string));
    
            var rbhContactEmailParameter = rbhContactEmail != null ?
                new ObjectParameter("rbhContactEmail", rbhContactEmail) :
                new ObjectParameter("rbhContactEmail", typeof(string));
    
            var rbhContactPositionParameter = rbhContactPosition != null ?
                new ObjectParameter("rbhContactPosition", rbhContactPosition) :
                new ObjectParameter("rbhContactPosition", typeof(string));
    
            var rbhContactLastNameParameter = rbhContactLastName != null ?
                new ObjectParameter("rbhContactLastName", rbhContactLastName) :
                new ObjectParameter("rbhContactLastName", typeof(string));
    
            var rbhContactFirstNameParameter = rbhContactFirstName != null ?
                new ObjectParameter("rbhContactFirstName", rbhContactFirstName) :
                new ObjectParameter("rbhContactFirstName", typeof(string));
    
            var rbhContactCodeParameter = rbhContactCode.HasValue ?
                new ObjectParameter("rbhContactCode", rbhContactCode) :
                new ObjectParameter("rbhContactCode", typeof(int));
    
            var rbhOwnerDistrictParameter = rbhOwnerDistrict != null ?
                new ObjectParameter("rbhOwnerDistrict", rbhOwnerDistrict) :
                new ObjectParameter("rbhOwnerDistrict", typeof(string));
    
            var rbhOwnerCityParameter = rbhOwnerCity != null ?
                new ObjectParameter("rbhOwnerCity", rbhOwnerCity) :
                new ObjectParameter("rbhOwnerCity", typeof(string));
    
            var rbhOwnerCountryParameter = rbhOwnerCountry != null ?
                new ObjectParameter("rbhOwnerCountry", rbhOwnerCountry) :
                new ObjectParameter("rbhOwnerCountry", typeof(string));
    
            var rbhOwnerAddressParameter = rbhOwnerAddress != null ?
                new ObjectParameter("rbhOwnerAddress", rbhOwnerAddress) :
                new ObjectParameter("rbhOwnerAddress", typeof(string));
    
            var rbhOwnerTaxIDParameter = rbhOwnerTaxID != null ?
                new ObjectParameter("rbhOwnerTaxID", rbhOwnerTaxID) :
                new ObjectParameter("rbhOwnerTaxID", typeof(string));
    
            var rbhOwnerUnitParameter = rbhOwnerUnit != null ?
                new ObjectParameter("rbhOwnerUnit", rbhOwnerUnit) :
                new ObjectParameter("rbhOwnerUnit", typeof(string));
    
            var rbhOwnerNameParameter = rbhOwnerName != null ?
                new ObjectParameter("rbhOwnerName", rbhOwnerName) :
                new ObjectParameter("rbhOwnerName", typeof(string));
    
            var rbhOwnerOrganizationCodeParameter = rbhOwnerOrganizationCode != null ?
                new ObjectParameter("rbhOwnerOrganizationCode", rbhOwnerOrganizationCode) :
                new ObjectParameter("rbhOwnerOrganizationCode", typeof(string));
    
            var rbhProcessSubTypeParameter = rbhProcessSubType.HasValue ?
                new ObjectParameter("rbhProcessSubType", rbhProcessSubType) :
                new ObjectParameter("rbhProcessSubType", typeof(int));
    
            var rbhProcessTypeParameter = rbhProcessType.HasValue ?
                new ObjectParameter("rbhProcessType", rbhProcessType) :
                new ObjectParameter("rbhProcessType", typeof(int));
    
            var rbhDocumentSubTypeParameter = rbhDocumentSubType.HasValue ?
                new ObjectParameter("rbhDocumentSubType", rbhDocumentSubType) :
                new ObjectParameter("rbhDocumentSubType", typeof(int));
    
            var rbhDocumentTypeParameter = rbhDocumentType.HasValue ?
                new ObjectParameter("rbhDocumentType", rbhDocumentType) :
                new ObjectParameter("rbhDocumentType", typeof(int));
    
            var rbhDescriptionParameter = rbhDescription != null ?
                new ObjectParameter("rbhDescription", rbhDescription) :
                new ObjectParameter("rbhDescription", typeof(string));
    
            var rbhNameParameter = rbhName != null ?
                new ObjectParameter("rbhName", rbhName) :
                new ObjectParameter("rbhName", typeof(string));
    
            var rbhExternalCodeParameter = rbhExternalCode != null ?
                new ObjectParameter("rbhExternalCode", rbhExternalCode) :
                new ObjectParameter("rbhExternalCode", typeof(string));
    
            var rbhTemplateParameter = rbhTemplate.HasValue ?
                new ObjectParameter("rbhTemplate", rbhTemplate) :
                new ObjectParameter("rbhTemplate", typeof(int));
    
            var rbhUserParameter = rbhUser != null ?
                new ObjectParameter("rbhUser", rbhUser) :
                new ObjectParameter("rbhUser", typeof(string));
    
            var rbhOrganizationParameter = rbhOrganization != null ?
                new ObjectParameter("rbhOrganization", rbhOrganization) :
                new ObjectParameter("rbhOrganization", typeof(string));
    
            var rbhEnterpriseParameter = rbhEnterprise != null ?
                new ObjectParameter("rbhEnterprise", rbhEnterprise) :
                new ObjectParameter("rbhEnterprise", typeof(string));
    
            var rbhEconomicStatusParameter = rbhEconomicStatus.HasValue ?
                new ObjectParameter("rbhEconomicStatus", rbhEconomicStatus) :
                new ObjectParameter("rbhEconomicStatus", typeof(int));
    
            var rbhTechnicalStatusParameter = rbhTechnicalStatus.HasValue ?
                new ObjectParameter("rbhTechnicalStatus", rbhTechnicalStatus) :
                new ObjectParameter("rbhTechnicalStatus", typeof(int));
    
            var rbhDocumentStatusParameter = rbhDocumentStatus.HasValue ?
                new ObjectParameter("rbhDocumentStatus", rbhDocumentStatus) :
                new ObjectParameter("rbhDocumentStatus", typeof(int));
    
            var rbhCreationDateParameter = rbhCreationDate.HasValue ?
                new ObjectParameter("rbhCreationDate", rbhCreationDate) :
                new ObjectParameter("rbhCreationDate", typeof(System.DateTime));
    
            var rbhRequisitionParameter = rbhRequisition.HasValue ?
                new ObjectParameter("rbhRequisition", rbhRequisition) :
                new ObjectParameter("rbhRequisition", typeof(int));
    
            var rbhIsTemplateParameter = rbhIsTemplate.HasValue ?
                new ObjectParameter("rbhIsTemplate", rbhIsTemplate) :
                new ObjectParameter("rbhIsTemplate", typeof(short));
    
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcRFBHeader", resultCode, resultMessage, resultID, rbhOutsourcingCommentsParameter, rbhOutsourcingAllowedParameter, rbhContractPaymentMethodParameter, rbhContractTimePeriodParameter, rbhContractTimeParameter, rbhContractDurationParameter, rbhEstimatedCurrencyParameter, rbhEstimatedAmountParameter, rbhIsUniqueCurrencyParameter, rbhCurrencyParameter, rbhContactFaxParameter, rbhContactPhoneParameter, rbhContactEmailParameter, rbhContactPositionParameter, rbhContactLastNameParameter, rbhContactFirstNameParameter, rbhContactCodeParameter, rbhOwnerDistrictParameter, rbhOwnerCityParameter, rbhOwnerCountryParameter, rbhOwnerAddressParameter, rbhOwnerTaxIDParameter, rbhOwnerUnitParameter, rbhOwnerNameParameter, rbhOwnerOrganizationCodeParameter, rbhProcessSubTypeParameter, rbhProcessTypeParameter, rbhDocumentSubTypeParameter, rbhDocumentTypeParameter, rbhDescriptionParameter, rbhNameParameter, rbhExternalCodeParameter, rbhTemplateParameter, rbhUserParameter, rbhOrganizationParameter, rbhEnterpriseParameter, rbhEconomicStatusParameter, rbhTechnicalStatusParameter, rbhDocumentStatusParameter, rbhCreationDateParameter, rbhRequisitionParameter, rbhIsTemplateParameter, rbhCodeParameter);
        }
    
        public virtual int prcSpcCreateprcRFBHeaderFromHeader(ObjectParameter resultCode, ObjectParameter requisition, ObjectParameter resultMessage, ObjectParameter resultID, Nullable<int> rbhCode, Nullable<System.DateTime> rbhCreationDate, string rbhExternalCode, Nullable<int> rbhProcessType, Nullable<int> rbhDocumentStatus, Nullable<int> rbhProcessSubType, string rbhProcessSubTypeAbbreviation, string rbhUser, string rbhName, string rbhDescription, Nullable<bool> rFBItem, Nullable<bool> rFBRequisite, Nullable<bool> rFBLegalRecords, Nullable<bool> rFBAwardCriteria, Nullable<bool> rFBGuarantee, Nullable<bool> rFBClause, Nullable<bool> administrativePrecedents, Nullable<bool> organizationContact, Nullable<bool> contract, string rbhContactFax, string rbhContactPhone, string rbhContactEmail, string rbhContactPosition, string rbhContactLastName, string rbhContactFirstName, Nullable<int> rbhContactCode, string rbhOwnerDistrict, string rbhOwnerCity, string rbhOwnerCountry, string rbhOwnerAddress, string rbhContractPaymentMethod, Nullable<int> rbhContractTimePeriod, Nullable<int> rbhContractTime, Nullable<int> rbhContractDuration, string rbhEstimatedCurrency, Nullable<double> rbhEstimatedAmount, Nullable<short> rbhIsUniqueCurrency, string rbhCurrency, string rbhObservationCheckText, string rbhObservationComment, string rbhOwnerName, string rbhOrganization, string rbhEnterprise, string rbhOwnerOrganizationCode, string rbhOwnerUnit)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            var rbhCreationDateParameter = rbhCreationDate.HasValue ?
                new ObjectParameter("rbhCreationDate", rbhCreationDate) :
                new ObjectParameter("rbhCreationDate", typeof(System.DateTime));
    
            var rbhExternalCodeParameter = rbhExternalCode != null ?
                new ObjectParameter("rbhExternalCode", rbhExternalCode) :
                new ObjectParameter("rbhExternalCode", typeof(string));
    
            var rbhProcessTypeParameter = rbhProcessType.HasValue ?
                new ObjectParameter("rbhProcessType", rbhProcessType) :
                new ObjectParameter("rbhProcessType", typeof(int));
    
            var rbhDocumentStatusParameter = rbhDocumentStatus.HasValue ?
                new ObjectParameter("rbhDocumentStatus", rbhDocumentStatus) :
                new ObjectParameter("rbhDocumentStatus", typeof(int));
    
            var rbhProcessSubTypeParameter = rbhProcessSubType.HasValue ?
                new ObjectParameter("rbhProcessSubType", rbhProcessSubType) :
                new ObjectParameter("rbhProcessSubType", typeof(int));
    
            var rbhProcessSubTypeAbbreviationParameter = rbhProcessSubTypeAbbreviation != null ?
                new ObjectParameter("rbhProcessSubTypeAbbreviation", rbhProcessSubTypeAbbreviation) :
                new ObjectParameter("rbhProcessSubTypeAbbreviation", typeof(string));
    
            var rbhUserParameter = rbhUser != null ?
                new ObjectParameter("rbhUser", rbhUser) :
                new ObjectParameter("rbhUser", typeof(string));
    
            var rbhNameParameter = rbhName != null ?
                new ObjectParameter("rbhName", rbhName) :
                new ObjectParameter("rbhName", typeof(string));
    
            var rbhDescriptionParameter = rbhDescription != null ?
                new ObjectParameter("rbhDescription", rbhDescription) :
                new ObjectParameter("rbhDescription", typeof(string));
    
            var rFBItemParameter = rFBItem.HasValue ?
                new ObjectParameter("RFBItem", rFBItem) :
                new ObjectParameter("RFBItem", typeof(bool));
    
            var rFBRequisiteParameter = rFBRequisite.HasValue ?
                new ObjectParameter("RFBRequisite", rFBRequisite) :
                new ObjectParameter("RFBRequisite", typeof(bool));
    
            var rFBLegalRecordsParameter = rFBLegalRecords.HasValue ?
                new ObjectParameter("RFBLegalRecords", rFBLegalRecords) :
                new ObjectParameter("RFBLegalRecords", typeof(bool));
    
            var rFBAwardCriteriaParameter = rFBAwardCriteria.HasValue ?
                new ObjectParameter("RFBAwardCriteria", rFBAwardCriteria) :
                new ObjectParameter("RFBAwardCriteria", typeof(bool));
    
            var rFBGuaranteeParameter = rFBGuarantee.HasValue ?
                new ObjectParameter("RFBGuarantee", rFBGuarantee) :
                new ObjectParameter("RFBGuarantee", typeof(bool));
    
            var rFBClauseParameter = rFBClause.HasValue ?
                new ObjectParameter("RFBClause", rFBClause) :
                new ObjectParameter("RFBClause", typeof(bool));
    
            var administrativePrecedentsParameter = administrativePrecedents.HasValue ?
                new ObjectParameter("AdministrativePrecedents", administrativePrecedents) :
                new ObjectParameter("AdministrativePrecedents", typeof(bool));
    
            var organizationContactParameter = organizationContact.HasValue ?
                new ObjectParameter("OrganizationContact", organizationContact) :
                new ObjectParameter("OrganizationContact", typeof(bool));
    
            var contractParameter = contract.HasValue ?
                new ObjectParameter("Contract", contract) :
                new ObjectParameter("Contract", typeof(bool));
    
            var rbhContactFaxParameter = rbhContactFax != null ?
                new ObjectParameter("rbhContactFax", rbhContactFax) :
                new ObjectParameter("rbhContactFax", typeof(string));
    
            var rbhContactPhoneParameter = rbhContactPhone != null ?
                new ObjectParameter("rbhContactPhone", rbhContactPhone) :
                new ObjectParameter("rbhContactPhone", typeof(string));
    
            var rbhContactEmailParameter = rbhContactEmail != null ?
                new ObjectParameter("rbhContactEmail", rbhContactEmail) :
                new ObjectParameter("rbhContactEmail", typeof(string));
    
            var rbhContactPositionParameter = rbhContactPosition != null ?
                new ObjectParameter("rbhContactPosition", rbhContactPosition) :
                new ObjectParameter("rbhContactPosition", typeof(string));
    
            var rbhContactLastNameParameter = rbhContactLastName != null ?
                new ObjectParameter("rbhContactLastName", rbhContactLastName) :
                new ObjectParameter("rbhContactLastName", typeof(string));
    
            var rbhContactFirstNameParameter = rbhContactFirstName != null ?
                new ObjectParameter("rbhContactFirstName", rbhContactFirstName) :
                new ObjectParameter("rbhContactFirstName", typeof(string));
    
            var rbhContactCodeParameter = rbhContactCode.HasValue ?
                new ObjectParameter("rbhContactCode", rbhContactCode) :
                new ObjectParameter("rbhContactCode", typeof(int));
    
            var rbhOwnerDistrictParameter = rbhOwnerDistrict != null ?
                new ObjectParameter("rbhOwnerDistrict", rbhOwnerDistrict) :
                new ObjectParameter("rbhOwnerDistrict", typeof(string));
    
            var rbhOwnerCityParameter = rbhOwnerCity != null ?
                new ObjectParameter("rbhOwnerCity", rbhOwnerCity) :
                new ObjectParameter("rbhOwnerCity", typeof(string));
    
            var rbhOwnerCountryParameter = rbhOwnerCountry != null ?
                new ObjectParameter("rbhOwnerCountry", rbhOwnerCountry) :
                new ObjectParameter("rbhOwnerCountry", typeof(string));
    
            var rbhOwnerAddressParameter = rbhOwnerAddress != null ?
                new ObjectParameter("rbhOwnerAddress", rbhOwnerAddress) :
                new ObjectParameter("rbhOwnerAddress", typeof(string));
    
            var rbhContractPaymentMethodParameter = rbhContractPaymentMethod != null ?
                new ObjectParameter("rbhContractPaymentMethod", rbhContractPaymentMethod) :
                new ObjectParameter("rbhContractPaymentMethod", typeof(string));
    
            var rbhContractTimePeriodParameter = rbhContractTimePeriod.HasValue ?
                new ObjectParameter("rbhContractTimePeriod", rbhContractTimePeriod) :
                new ObjectParameter("rbhContractTimePeriod", typeof(int));
    
            var rbhContractTimeParameter = rbhContractTime.HasValue ?
                new ObjectParameter("rbhContractTime", rbhContractTime) :
                new ObjectParameter("rbhContractTime", typeof(int));
    
            var rbhContractDurationParameter = rbhContractDuration.HasValue ?
                new ObjectParameter("rbhContractDuration", rbhContractDuration) :
                new ObjectParameter("rbhContractDuration", typeof(int));
    
            var rbhEstimatedCurrencyParameter = rbhEstimatedCurrency != null ?
                new ObjectParameter("rbhEstimatedCurrency", rbhEstimatedCurrency) :
                new ObjectParameter("rbhEstimatedCurrency", typeof(string));
    
            var rbhEstimatedAmountParameter = rbhEstimatedAmount.HasValue ?
                new ObjectParameter("rbhEstimatedAmount", rbhEstimatedAmount) :
                new ObjectParameter("rbhEstimatedAmount", typeof(double));
    
            var rbhIsUniqueCurrencyParameter = rbhIsUniqueCurrency.HasValue ?
                new ObjectParameter("rbhIsUniqueCurrency", rbhIsUniqueCurrency) :
                new ObjectParameter("rbhIsUniqueCurrency", typeof(short));
    
            var rbhCurrencyParameter = rbhCurrency != null ?
                new ObjectParameter("rbhCurrency", rbhCurrency) :
                new ObjectParameter("rbhCurrency", typeof(string));
    
            var rbhObservationCheckTextParameter = rbhObservationCheckText != null ?
                new ObjectParameter("rbhObservationCheckText", rbhObservationCheckText) :
                new ObjectParameter("rbhObservationCheckText", typeof(string));
    
            var rbhObservationCommentParameter = rbhObservationComment != null ?
                new ObjectParameter("rbhObservationComment", rbhObservationComment) :
                new ObjectParameter("rbhObservationComment", typeof(string));
    
            var rbhOwnerNameParameter = rbhOwnerName != null ?
                new ObjectParameter("rbhOwnerName", rbhOwnerName) :
                new ObjectParameter("rbhOwnerName", typeof(string));
    
            var rbhOrganizationParameter = rbhOrganization != null ?
                new ObjectParameter("rbhOrganization", rbhOrganization) :
                new ObjectParameter("rbhOrganization", typeof(string));
    
            var rbhEnterpriseParameter = rbhEnterprise != null ?
                new ObjectParameter("rbhEnterprise", rbhEnterprise) :
                new ObjectParameter("rbhEnterprise", typeof(string));
    
            var rbhOwnerOrganizationCodeParameter = rbhOwnerOrganizationCode != null ?
                new ObjectParameter("rbhOwnerOrganizationCode", rbhOwnerOrganizationCode) :
                new ObjectParameter("rbhOwnerOrganizationCode", typeof(string));
    
            var rbhOwnerUnitParameter = rbhOwnerUnit != null ?
                new ObjectParameter("rbhOwnerUnit", rbhOwnerUnit) :
                new ObjectParameter("rbhOwnerUnit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcRFBHeaderFromHeader", resultCode, requisition, resultMessage, resultID, rbhCodeParameter, rbhCreationDateParameter, rbhExternalCodeParameter, rbhProcessTypeParameter, rbhDocumentStatusParameter, rbhProcessSubTypeParameter, rbhProcessSubTypeAbbreviationParameter, rbhUserParameter, rbhNameParameter, rbhDescriptionParameter, rFBItemParameter, rFBRequisiteParameter, rFBLegalRecordsParameter, rFBAwardCriteriaParameter, rFBGuaranteeParameter, rFBClauseParameter, administrativePrecedentsParameter, organizationContactParameter, contractParameter, rbhContactFaxParameter, rbhContactPhoneParameter, rbhContactEmailParameter, rbhContactPositionParameter, rbhContactLastNameParameter, rbhContactFirstNameParameter, rbhContactCodeParameter, rbhOwnerDistrictParameter, rbhOwnerCityParameter, rbhOwnerCountryParameter, rbhOwnerAddressParameter, rbhContractPaymentMethodParameter, rbhContractTimePeriodParameter, rbhContractTimeParameter, rbhContractDurationParameter, rbhEstimatedCurrencyParameter, rbhEstimatedAmountParameter, rbhIsUniqueCurrencyParameter, rbhCurrencyParameter, rbhObservationCheckTextParameter, rbhObservationCommentParameter, rbhOwnerNameParameter, rbhOrganizationParameter, rbhEnterpriseParameter, rbhOwnerOrganizationCodeParameter, rbhOwnerUnitParameter);
        }
    
        public virtual ObjectResult<string> prcSpcCreateprcRFBHeaderFromTemplate(ObjectParameter rESULTCODE, ObjectParameter rESULTMESSAGE, ObjectParameter rESULTRBHCODE, ObjectParameter rESULTRBHNAME, string rBHNAME, Nullable<int> rBHREQUISITION, Nullable<int> tEMPLATEID, string oRGCODE)
        {
            var rBHNAMEParameter = rBHNAME != null ?
                new ObjectParameter("RBHNAME", rBHNAME) :
                new ObjectParameter("RBHNAME", typeof(string));
    
            var rBHREQUISITIONParameter = rBHREQUISITION.HasValue ?
                new ObjectParameter("RBHREQUISITION", rBHREQUISITION) :
                new ObjectParameter("RBHREQUISITION", typeof(int));
    
            var tEMPLATEIDParameter = tEMPLATEID.HasValue ?
                new ObjectParameter("TEMPLATEID", tEMPLATEID) :
                new ObjectParameter("TEMPLATEID", typeof(int));
    
            var oRGCODEParameter = oRGCODE != null ?
                new ObjectParameter("ORGCODE", oRGCODE) :
                new ObjectParameter("ORGCODE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("prcSpcCreateprcRFBHeaderFromTemplate", rESULTCODE, rESULTMESSAGE, rESULTRBHCODE, rESULTRBHNAME, rBHNAMEParameter, rBHREQUISITIONParameter, tEMPLATEIDParameter, oRGCODEParameter);
        }
    
        public virtual int prcSpcCreateprcRFBInvidedProviders(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, Nullable<int> rbtRFBCode, Nullable<int> rbtSchema, string rbtCategory, string rbtOrganization, string rbtProposed)
        {
            var rbtRFBCodeParameter = rbtRFBCode.HasValue ?
                new ObjectParameter("rbtRFBCode", rbtRFBCode) :
                new ObjectParameter("rbtRFBCode", typeof(int));
    
            var rbtSchemaParameter = rbtSchema.HasValue ?
                new ObjectParameter("rbtSchema", rbtSchema) :
                new ObjectParameter("rbtSchema", typeof(int));
    
            var rbtCategoryParameter = rbtCategory != null ?
                new ObjectParameter("rbtCategory", rbtCategory) :
                new ObjectParameter("rbtCategory", typeof(string));
    
            var rbtOrganizationParameter = rbtOrganization != null ?
                new ObjectParameter("rbtOrganization", rbtOrganization) :
                new ObjectParameter("rbtOrganization", typeof(string));
    
            var rbtProposedParameter = rbtProposed != null ?
                new ObjectParameter("rbtProposed", rbtProposed) :
                new ObjectParameter("rbtProposed", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcRFBInvidedProviders", resultCode, resultMessage, resultID, rbtRFBCodeParameter, rbtSchemaParameter, rbtCategoryParameter, rbtOrganizationParameter, rbtProposedParameter);
        }
    
        public virtual int prcSpcCreateprcRFBItem(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, Nullable<int> rbiGoodAndService, string rbiSupplierPartCode, string rbiManufacturerPartCode, string rbiBuyerPartCode, Nullable<double> rbiQuantity, string rbiUOM, string rbiDescription, string rbiName, string rbiCategory, Nullable<int> rbiSchema, Nullable<int> rbiRFBCode, Nullable<int> rbiFrameworkContract)
        {
            var rbiGoodAndServiceParameter = rbiGoodAndService.HasValue ?
                new ObjectParameter("rbiGoodAndService", rbiGoodAndService) :
                new ObjectParameter("rbiGoodAndService", typeof(int));
    
            var rbiSupplierPartCodeParameter = rbiSupplierPartCode != null ?
                new ObjectParameter("rbiSupplierPartCode", rbiSupplierPartCode) :
                new ObjectParameter("rbiSupplierPartCode", typeof(string));
    
            var rbiManufacturerPartCodeParameter = rbiManufacturerPartCode != null ?
                new ObjectParameter("rbiManufacturerPartCode", rbiManufacturerPartCode) :
                new ObjectParameter("rbiManufacturerPartCode", typeof(string));
    
            var rbiBuyerPartCodeParameter = rbiBuyerPartCode != null ?
                new ObjectParameter("rbiBuyerPartCode", rbiBuyerPartCode) :
                new ObjectParameter("rbiBuyerPartCode", typeof(string));
    
            var rbiQuantityParameter = rbiQuantity.HasValue ?
                new ObjectParameter("rbiQuantity", rbiQuantity) :
                new ObjectParameter("rbiQuantity", typeof(double));
    
            var rbiUOMParameter = rbiUOM != null ?
                new ObjectParameter("rbiUOM", rbiUOM) :
                new ObjectParameter("rbiUOM", typeof(string));
    
            var rbiDescriptionParameter = rbiDescription != null ?
                new ObjectParameter("rbiDescription", rbiDescription) :
                new ObjectParameter("rbiDescription", typeof(string));
    
            var rbiNameParameter = rbiName != null ?
                new ObjectParameter("rbiName", rbiName) :
                new ObjectParameter("rbiName", typeof(string));
    
            var rbiCategoryParameter = rbiCategory != null ?
                new ObjectParameter("rbiCategory", rbiCategory) :
                new ObjectParameter("rbiCategory", typeof(string));
    
            var rbiSchemaParameter = rbiSchema.HasValue ?
                new ObjectParameter("rbiSchema", rbiSchema) :
                new ObjectParameter("rbiSchema", typeof(int));
    
            var rbiRFBCodeParameter = rbiRFBCode.HasValue ?
                new ObjectParameter("rbiRFBCode", rbiRFBCode) :
                new ObjectParameter("rbiRFBCode", typeof(int));
    
            var rbiFrameworkContractParameter = rbiFrameworkContract.HasValue ?
                new ObjectParameter("rbiFrameworkContract", rbiFrameworkContract) :
                new ObjectParameter("rbiFrameworkContract", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcRFBItem", resultCode, resultMessage, resultID, rbiGoodAndServiceParameter, rbiSupplierPartCodeParameter, rbiManufacturerPartCodeParameter, rbiBuyerPartCodeParameter, rbiQuantityParameter, rbiUOMParameter, rbiDescriptionParameter, rbiNameParameter, rbiCategoryParameter, rbiSchemaParameter, rbiRFBCodeParameter, rbiFrameworkContractParameter);
        }
    
        public virtual int prcSpcCreateprcRFBLegalRecord(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, Nullable<int> rlrSourceID, Nullable<int> rlrRFBCode, Nullable<short> rlrSequence, Nullable<int> rlrLegalRecordType, Nullable<int> rlrLegalRecordValue, string rlrLegalRecordName, string rlrLegalRecordCHP, string rlrLegalRecordNOCHP)
        {
            var rlrSourceIDParameter = rlrSourceID.HasValue ?
                new ObjectParameter("rlrSourceID", rlrSourceID) :
                new ObjectParameter("rlrSourceID", typeof(int));
    
            var rlrRFBCodeParameter = rlrRFBCode.HasValue ?
                new ObjectParameter("rlrRFBCode", rlrRFBCode) :
                new ObjectParameter("rlrRFBCode", typeof(int));
    
            var rlrSequenceParameter = rlrSequence.HasValue ?
                new ObjectParameter("rlrSequence", rlrSequence) :
                new ObjectParameter("rlrSequence", typeof(short));
    
            var rlrLegalRecordTypeParameter = rlrLegalRecordType.HasValue ?
                new ObjectParameter("rlrLegalRecordType", rlrLegalRecordType) :
                new ObjectParameter("rlrLegalRecordType", typeof(int));
    
            var rlrLegalRecordValueParameter = rlrLegalRecordValue.HasValue ?
                new ObjectParameter("rlrLegalRecordValue", rlrLegalRecordValue) :
                new ObjectParameter("rlrLegalRecordValue", typeof(int));
    
            var rlrLegalRecordNameParameter = rlrLegalRecordName != null ?
                new ObjectParameter("rlrLegalRecordName", rlrLegalRecordName) :
                new ObjectParameter("rlrLegalRecordName", typeof(string));
    
            var rlrLegalRecordCHPParameter = rlrLegalRecordCHP != null ?
                new ObjectParameter("rlrLegalRecordCHP", rlrLegalRecordCHP) :
                new ObjectParameter("rlrLegalRecordCHP", typeof(string));
    
            var rlrLegalRecordNOCHPParameter = rlrLegalRecordNOCHP != null ?
                new ObjectParameter("rlrLegalRecordNOCHP", rlrLegalRecordNOCHP) :
                new ObjectParameter("rlrLegalRecordNOCHP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcRFBLegalRecord", resultCode, resultMessage, resultID, rlrSourceIDParameter, rlrRFBCodeParameter, rlrSequenceParameter, rlrLegalRecordTypeParameter, rlrLegalRecordValueParameter, rlrLegalRecordNameParameter, rlrLegalRecordCHPParameter, rlrLegalRecordNOCHPParameter);
        }
    
        public virtual int prcSpcCreateprcRFBProcessSubType(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, Nullable<int> rpsTimePeriod, Nullable<int> rpsMaximumDuration, Nullable<int> rpsMinimumDuration, string rpsName, Nullable<int> rpsCode, Nullable<short> rpsIsActive, Nullable<int> rpsProcessType)
        {
            var rpsTimePeriodParameter = rpsTimePeriod.HasValue ?
                new ObjectParameter("rpsTimePeriod", rpsTimePeriod) :
                new ObjectParameter("rpsTimePeriod", typeof(int));
    
            var rpsMaximumDurationParameter = rpsMaximumDuration.HasValue ?
                new ObjectParameter("rpsMaximumDuration", rpsMaximumDuration) :
                new ObjectParameter("rpsMaximumDuration", typeof(int));
    
            var rpsMinimumDurationParameter = rpsMinimumDuration.HasValue ?
                new ObjectParameter("rpsMinimumDuration", rpsMinimumDuration) :
                new ObjectParameter("rpsMinimumDuration", typeof(int));
    
            var rpsNameParameter = rpsName != null ?
                new ObjectParameter("rpsName", rpsName) :
                new ObjectParameter("rpsName", typeof(string));
    
            var rpsCodeParameter = rpsCode.HasValue ?
                new ObjectParameter("rpsCode", rpsCode) :
                new ObjectParameter("rpsCode", typeof(int));
    
            var rpsIsActiveParameter = rpsIsActive.HasValue ?
                new ObjectParameter("rpsIsActive", rpsIsActive) :
                new ObjectParameter("rpsIsActive", typeof(short));
    
            var rpsProcessTypeParameter = rpsProcessType.HasValue ?
                new ObjectParameter("rpsProcessType", rpsProcessType) :
                new ObjectParameter("rpsProcessType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcRFBProcessSubType", resultCode, resultMessage, resultID, rpsTimePeriodParameter, rpsMaximumDurationParameter, rpsMinimumDurationParameter, rpsNameParameter, rpsCodeParameter, rpsIsActiveParameter, rpsProcessTypeParameter);
        }
    
        public virtual int prcSpcCreateprcRFBProcessType(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, string rptName, Nullable<int> rptCode, Nullable<short> rptIsActive)
        {
            var rptNameParameter = rptName != null ?
                new ObjectParameter("rptName", rptName) :
                new ObjectParameter("rptName", typeof(string));
    
            var rptCodeParameter = rptCode.HasValue ?
                new ObjectParameter("rptCode", rptCode) :
                new ObjectParameter("rptCode", typeof(int));
    
            var rptIsActiveParameter = rptIsActive.HasValue ?
                new ObjectParameter("rptIsActive", rptIsActive) :
                new ObjectParameter("rptIsActive", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcRFBProcessType", resultCode, resultMessage, resultID, rptNameParameter, rptCodeParameter, rptIsActiveParameter);
        }
    
        public virtual int prcSpcCreateprcRFBRequisite(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, string rbrTitle, Nullable<int> rbrRequisiteType, Nullable<int> rbrRFBCode, string rbrComment, Nullable<int> rbrIsChecked, Nullable<int> rbrSequence)
        {
            var rbrTitleParameter = rbrTitle != null ?
                new ObjectParameter("rbrTitle", rbrTitle) :
                new ObjectParameter("rbrTitle", typeof(string));
    
            var rbrRequisiteTypeParameter = rbrRequisiteType.HasValue ?
                new ObjectParameter("rbrRequisiteType", rbrRequisiteType) :
                new ObjectParameter("rbrRequisiteType", typeof(int));
    
            var rbrRFBCodeParameter = rbrRFBCode.HasValue ?
                new ObjectParameter("rbrRFBCode", rbrRFBCode) :
                new ObjectParameter("rbrRFBCode", typeof(int));
    
            var rbrCommentParameter = rbrComment != null ?
                new ObjectParameter("rbrComment", rbrComment) :
                new ObjectParameter("rbrComment", typeof(string));
    
            var rbrIsCheckedParameter = rbrIsChecked.HasValue ?
                new ObjectParameter("rbrIsChecked", rbrIsChecked) :
                new ObjectParameter("rbrIsChecked", typeof(int));
    
            var rbrSequenceParameter = rbrSequence.HasValue ?
                new ObjectParameter("rbrSequence", rbrSequence) :
                new ObjectParameter("rbrSequence", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcRFBRequisite", resultCode, resultMessage, resultID, rbrTitleParameter, rbrRequisiteTypeParameter, rbrRFBCodeParameter, rbrCommentParameter, rbrIsCheckedParameter, rbrSequenceParameter);
        }
    
        public virtual int prcSpcCreateprcRFBUserDefinedDate(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, Nullable<int> rudCode, string rudName, Nullable<System.DateTime> rudValue)
        {
            var rudCodeParameter = rudCode.HasValue ?
                new ObjectParameter("rudCode", rudCode) :
                new ObjectParameter("rudCode", typeof(int));
    
            var rudNameParameter = rudName != null ?
                new ObjectParameter("rudName", rudName) :
                new ObjectParameter("rudName", typeof(string));
    
            var rudValueParameter = rudValue.HasValue ?
                new ObjectParameter("rudValue", rudValue) :
                new ObjectParameter("rudValue", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcRFBUserDefinedDate", resultCode, resultMessage, resultID, rudCodeParameter, rudNameParameter, rudValueParameter);
        }
    
        public virtual int prcSpcCreateprcRFBUserDefinedDateCS(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, Nullable<int> rudCode, string rudName, Nullable<int> intDias, string strHora)
        {
            var rudCodeParameter = rudCode.HasValue ?
                new ObjectParameter("rudCode", rudCode) :
                new ObjectParameter("rudCode", typeof(int));
    
            var rudNameParameter = rudName != null ?
                new ObjectParameter("rudName", rudName) :
                new ObjectParameter("rudName", typeof(string));
    
            var intDiasParameter = intDias.HasValue ?
                new ObjectParameter("intDias", intDias) :
                new ObjectParameter("intDias", typeof(int));
    
            var strHoraParameter = strHora != null ?
                new ObjectParameter("strHora", strHora) :
                new ObjectParameter("strHora", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcRFBUserDefinedDateCS", resultCode, resultMessage, resultID, rudCodeParameter, rudNameParameter, intDiasParameter, strHoraParameter);
        }
    
        public virtual int prcSpcCreateprcRFBVersion(ObjectParameter rESULTCODE, ObjectParameter rESULTMESSAGE, ObjectParameter rESULTID, string rBVXML, string rBVCOMMENT, Nullable<int> rBVRFBSTATUS, Nullable<int> rBVRFBCODE, string rBVUSER)
        {
            var rBVXMLParameter = rBVXML != null ?
                new ObjectParameter("RBVXML", rBVXML) :
                new ObjectParameter("RBVXML", typeof(string));
    
            var rBVCOMMENTParameter = rBVCOMMENT != null ?
                new ObjectParameter("RBVCOMMENT", rBVCOMMENT) :
                new ObjectParameter("RBVCOMMENT", typeof(string));
    
            var rBVRFBSTATUSParameter = rBVRFBSTATUS.HasValue ?
                new ObjectParameter("RBVRFBSTATUS", rBVRFBSTATUS) :
                new ObjectParameter("RBVRFBSTATUS", typeof(int));
    
            var rBVRFBCODEParameter = rBVRFBCODE.HasValue ?
                new ObjectParameter("RBVRFBCODE", rBVRFBCODE) :
                new ObjectParameter("RBVRFBCODE", typeof(int));
    
            var rBVUSERParameter = rBVUSER != null ?
                new ObjectParameter("RBVUSER", rBVUSER) :
                new ObjectParameter("RBVUSER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateprcRFBVersion", rESULTCODE, rESULTMESSAGE, rESULTID, rBVXMLParameter, rBVCOMMENTParameter, rBVRFBSTATUSParameter, rBVRFBCODEParameter, rBVUSERParameter);
        }
    
        public virtual int prcSpcCreateUpdateprcBIDBidItemFieldValue(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, Nullable<int> bfvBID, Nullable<int> bfvItem, Nullable<int> bfvBidField, string bfvValue)
        {
            var bfvBIDParameter = bfvBID.HasValue ?
                new ObjectParameter("bfvBID", bfvBID) :
                new ObjectParameter("bfvBID", typeof(int));
    
            var bfvItemParameter = bfvItem.HasValue ?
                new ObjectParameter("bfvItem", bfvItem) :
                new ObjectParameter("bfvItem", typeof(int));
    
            var bfvBidFieldParameter = bfvBidField.HasValue ?
                new ObjectParameter("bfvBidField", bfvBidField) :
                new ObjectParameter("bfvBidField", typeof(int));
    
            var bfvValueParameter = bfvValue != null ?
                new ObjectParameter("bfvValue", bfvValue) :
                new ObjectParameter("bfvValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateUpdateprcBIDBidItemFieldValue", resultCode, resultMessage, resultID, bfvBIDParameter, bfvItemParameter, bfvBidFieldParameter, bfvValueParameter);
        }
    
        public virtual int prcSpcCreateUpdateprcBIDItem(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, Nullable<int> bitBid, Nullable<int> bitItem, Nullable<short> bitIsBidded, Nullable<double> bitQuantity, string bitCurrency, Nullable<double> bitUnitNetPrice, Nullable<double> bitUniqueCurrencyPrice, Nullable<double> bitHomologatedPrice, string bitSupplierComment, Nullable<int> bitIsSelected, Nullable<double> bitAwardedQuantity)
        {
            var bitBidParameter = bitBid.HasValue ?
                new ObjectParameter("bitBid", bitBid) :
                new ObjectParameter("bitBid", typeof(int));
    
            var bitItemParameter = bitItem.HasValue ?
                new ObjectParameter("bitItem", bitItem) :
                new ObjectParameter("bitItem", typeof(int));
    
            var bitIsBiddedParameter = bitIsBidded.HasValue ?
                new ObjectParameter("bitIsBidded", bitIsBidded) :
                new ObjectParameter("bitIsBidded", typeof(short));
    
            var bitQuantityParameter = bitQuantity.HasValue ?
                new ObjectParameter("bitQuantity", bitQuantity) :
                new ObjectParameter("bitQuantity", typeof(double));
    
            var bitCurrencyParameter = bitCurrency != null ?
                new ObjectParameter("bitCurrency", bitCurrency) :
                new ObjectParameter("bitCurrency", typeof(string));
    
            var bitUnitNetPriceParameter = bitUnitNetPrice.HasValue ?
                new ObjectParameter("bitUnitNetPrice", bitUnitNetPrice) :
                new ObjectParameter("bitUnitNetPrice", typeof(double));
    
            var bitUniqueCurrencyPriceParameter = bitUniqueCurrencyPrice.HasValue ?
                new ObjectParameter("bitUniqueCurrencyPrice", bitUniqueCurrencyPrice) :
                new ObjectParameter("bitUniqueCurrencyPrice", typeof(double));
    
            var bitHomologatedPriceParameter = bitHomologatedPrice.HasValue ?
                new ObjectParameter("bitHomologatedPrice", bitHomologatedPrice) :
                new ObjectParameter("bitHomologatedPrice", typeof(double));
    
            var bitSupplierCommentParameter = bitSupplierComment != null ?
                new ObjectParameter("bitSupplierComment", bitSupplierComment) :
                new ObjectParameter("bitSupplierComment", typeof(string));
    
            var bitIsSelectedParameter = bitIsSelected.HasValue ?
                new ObjectParameter("bitIsSelected", bitIsSelected) :
                new ObjectParameter("bitIsSelected", typeof(int));
    
            var bitAwardedQuantityParameter = bitAwardedQuantity.HasValue ?
                new ObjectParameter("bitAwardedQuantity", bitAwardedQuantity) :
                new ObjectParameter("bitAwardedQuantity", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcCreateUpdateprcBIDItem", resultCode, resultMessage, resultID, bitBidParameter, bitItemParameter, bitIsBiddedParameter, bitQuantityParameter, bitCurrencyParameter, bitUnitNetPriceParameter, bitUniqueCurrencyPriceParameter, bitHomologatedPriceParameter, bitSupplierCommentParameter, bitIsSelectedParameter, bitAwardedQuantityParameter);
        }
    
        public virtual int prcSpcDeleteEvaluationCommission(Nullable<int> intrfbCode, string strRecTaxID, string strRecFirstName)
        {
            var intrfbCodeParameter = intrfbCode.HasValue ?
                new ObjectParameter("intrfbCode", intrfbCode) :
                new ObjectParameter("intrfbCode", typeof(int));
    
            var strRecTaxIDParameter = strRecTaxID != null ?
                new ObjectParameter("StrRecTaxID", strRecTaxID) :
                new ObjectParameter("StrRecTaxID", typeof(string));
    
            var strRecFirstNameParameter = strRecFirstName != null ?
                new ObjectParameter("StrRecFirstName", strRecFirstName) :
                new ObjectParameter("StrRecFirstName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcDeleteEvaluationCommission", intrfbCodeParameter, strRecTaxIDParameter, strRecFirstNameParameter);
        }
    
        public virtual int prcSpcDeleteprcBIDItem(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> bitBID)
        {
            var bitBIDParameter = bitBID.HasValue ?
                new ObjectParameter("bitBID", bitBID) :
                new ObjectParameter("bitBID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcDeleteprcBIDItem", resultCode, resultMessage, bitBIDParameter);
        }
    
        public virtual int prcSpcDeleteprcBIDItemByBIDQuote(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> bitBID)
        {
            var bitBIDParameter = bitBID.HasValue ?
                new ObjectParameter("bitBID", bitBID) :
                new ObjectParameter("bitBID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcDeleteprcBIDItemByBIDQuote", resultCode, resultMessage, bitBIDParameter);
        }
    
        public virtual int prcSpcDeleteprcBIDQuote(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> bidID)
        {
            var bidIDParameter = bidID.HasValue ?
                new ObjectParameter("bidID", bidID) :
                new ObjectParameter("bidID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcDeleteprcBIDQuote", resultCode, resultMessage, bidIDParameter);
        }
    
        public virtual int prcSpcDeleteprcBIDQuoteAndBIDItem(Nullable<int> bidID, Nullable<int> bitID, Nullable<int> rbhCode)
        {
            var bidIDParameter = bidID.HasValue ?
                new ObjectParameter("bidID", bidID) :
                new ObjectParameter("bidID", typeof(int));
    
            var bitIDParameter = bitID.HasValue ?
                new ObjectParameter("bitID", bitID) :
                new ObjectParameter("bitID", typeof(int));
    
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcDeleteprcBIDQuoteAndBIDItem", bidIDParameter, bitIDParameter, rbhCodeParameter);
        }
    
        public virtual int prcSpcDeleteprcBIDRFBTrack(ObjectParameter resultCode, ObjectParameter resultMessage, string brtOrganization, Nullable<int> brtRFBCode)
        {
            var brtOrganizationParameter = brtOrganization != null ?
                new ObjectParameter("brtOrganization", brtOrganization) :
                new ObjectParameter("brtOrganization", typeof(string));
    
            var brtRFBCodeParameter = brtRFBCode.HasValue ?
                new ObjectParameter("brtRFBCode", brtRFBCode) :
                new ObjectParameter("brtRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcDeleteprcBIDRFBTrack", resultCode, resultMessage, brtOrganizationParameter, brtRFBCodeParameter);
        }
    
        public virtual int prcSpcDeleteprcCriteriaClause(ObjectParameter result, string crclEstadoVigencia, Nullable<int> crclID)
        {
            var crclEstadoVigenciaParameter = crclEstadoVigencia != null ?
                new ObjectParameter("crclEstadoVigencia", crclEstadoVigencia) :
                new ObjectParameter("crclEstadoVigencia", typeof(string));
    
            var crclIDParameter = crclID.HasValue ?
                new ObjectParameter("crclID", crclID) :
                new ObjectParameter("crclID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcDeleteprcCriteriaClause", result, crclEstadoVigenciaParameter, crclIDParameter);
        }
    
        public virtual int prcSpcDeleteprcPOCharge(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> pchId)
        {
            var pchIdParameter = pchId.HasValue ?
                new ObjectParameter("pchId", pchId) :
                new ObjectParameter("pchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcDeleteprcPOCharge", resultCode, resultMessage, pchIdParameter);
        }
    
        public virtual int prcSpcDeleteprcPOclause(Nullable<int> pocID)
        {
            var pocIDParameter = pocID.HasValue ?
                new ObjectParameter("pocID", pocID) :
                new ObjectParameter("pocID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcDeleteprcPOclause", pocIDParameter);
        }
    
        public virtual int prcSpcDeleteprcPODiscount(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> pdcID)
        {
            var pdcIDParameter = pdcID.HasValue ?
                new ObjectParameter("pdcID", pdcID) :
                new ObjectParameter("pdcID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcDeleteprcPODiscount", resultCode, resultMessage, pdcIDParameter);
        }
    
        public virtual int prcSpcDeleteprcPOItem(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> poiId)
        {
            var poiIdParameter = poiId.HasValue ?
                new ObjectParameter("poiId", poiId) :
                new ObjectParameter("poiId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcDeleteprcPOItem", resultCode, resultMessage, poiIdParameter);
        }
    
        public virtual int prcSpcDeleteprcPOItemAdditionals(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> poiId)
        {
            var poiIdParameter = poiId.HasValue ?
                new ObjectParameter("poiId", poiId) :
                new ObjectParameter("poiId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcDeleteprcPOItemAdditionals", resultCode, resultMessage, poiIdParameter);
        }
    
        public virtual int prcSpcDeleteprcPOProductItem(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> poiId)
        {
            var poiIdParameter = poiId.HasValue ?
                new ObjectParameter("poiId", poiId) :
                new ObjectParameter("poiId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcDeleteprcPOProductItem", resultCode, resultMessage, poiIdParameter);
        }
    
        public virtual int prcSpcDeleteprcPOProductItemBackup(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> poidId, string poidUser)
        {
            var poidIdParameter = poidId.HasValue ?
                new ObjectParameter("poidId", poidId) :
                new ObjectParameter("poidId", typeof(int));
    
            var poidUserParameter = poidUser != null ?
                new ObjectParameter("poidUser", poidUser) :
                new ObjectParameter("poidUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcDeleteprcPOProductItemBackup", resultCode, resultMessage, poidIdParameter, poidUserParameter);
        }
    
        public virtual int prcSpcDeleteprcPOTax(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> ptxId)
        {
            var ptxIdParameter = ptxId.HasValue ?
                new ObjectParameter("ptxId", ptxId) :
                new ObjectParameter("ptxId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcDeleteprcPOTax", resultCode, resultMessage, ptxIdParameter);
        }
    
        public virtual int prcSpcDeleteprcRegisterCriteriaClauseRFB(Nullable<int> rbcRFBCode, Nullable<int> crclID, Nullable<int> tpcID)
        {
            var rbcRFBCodeParameter = rbcRFBCode.HasValue ?
                new ObjectParameter("rbcRFBCode", rbcRFBCode) :
                new ObjectParameter("rbcRFBCode", typeof(int));
    
            var crclIDParameter = crclID.HasValue ?
                new ObjectParameter("crclID", crclID) :
                new ObjectParameter("crclID", typeof(int));
    
            var tpcIDParameter = tpcID.HasValue ?
                new ObjectParameter("tpcID", tpcID) :
                new ObjectParameter("tpcID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcDeleteprcRegisterCriteriaClauseRFB", rbcRFBCodeParameter, crclIDParameter, tpcIDParameter);
        }
    
        public virtual int prcSpcDeleteprcREQItem(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rqiRequisition)
        {
            var rqiRequisitionParameter = rqiRequisition.HasValue ?
                new ObjectParameter("rqiRequisition", rqiRequisition) :
                new ObjectParameter("rqiRequisition", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcDeleteprcREQItem", resultCode, resultMessage, rqiRequisitionParameter);
        }
    
        public virtual int prcSpcDeleteprcREQRequisition(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> reqCode)
        {
            var reqCodeParameter = reqCode.HasValue ?
                new ObjectParameter("reqCode", reqCode) :
                new ObjectParameter("reqCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcDeleteprcREQRequisition", resultCode, resultMessage, reqCodeParameter);
        }
    
        public virtual int prcSpcDeleteprcRFBAnswer(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rswID)
        {
            var rswIDParameter = rswID.HasValue ?
                new ObjectParameter("rswID", rswID) :
                new ObjectParameter("rswID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcDeleteprcRFBAnswer", resultCode, resultMessage, rswIDParameter);
        }
    
        public virtual int prcSpcDeleteprcRFBApproval(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rapRFBCode)
        {
            var rapRFBCodeParameter = rapRFBCode.HasValue ?
                new ObjectParameter("rapRFBCode", rapRFBCode) :
                new ObjectParameter("rapRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcDeleteprcRFBApproval", resultCode, resultMessage, rapRFBCodeParameter);
        }
    
        public virtual int prcSpcDeleteprcRFBAprovTR(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbhCode)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcDeleteprcRFBAprovTR", resultCode, resultMessage, rbhCodeParameter);
        }
    
        public virtual int prcSpcDeleteprcRFBAwardCriteria(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbaID)
        {
            var rbaIDParameter = rbaID.HasValue ?
                new ObjectParameter("rbaID", rbaID) :
                new ObjectParameter("rbaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcDeleteprcRFBAwardCriteria", resultCode, resultMessage, rbaIDParameter);
        }
    
        public virtual int prcSpcDeleteprcRFBAwardCriteriaCS(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbaID)
        {
            var rbaIDParameter = rbaID.HasValue ?
                new ObjectParameter("rbaID", rbaID) :
                new ObjectParameter("rbaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcDeleteprcRFBAwardCriteriaCS", resultCode, resultMessage, rbaIDParameter);
        }
    
        public virtual int prcSpcDeleteprcRFBClause(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<short> rbcSequence, Nullable<int> rbcRFBCode)
        {
            var rbcSequenceParameter = rbcSequence.HasValue ?
                new ObjectParameter("rbcSequence", rbcSequence) :
                new ObjectParameter("rbcSequence", typeof(short));
    
            var rbcRFBCodeParameter = rbcRFBCode.HasValue ?
                new ObjectParameter("rbcRFBCode", rbcRFBCode) :
                new ObjectParameter("rbcRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcDeleteprcRFBClause", resultCode, resultMessage, rbcSequenceParameter, rbcRFBCodeParameter);
        }
    
        public virtual int prcSpcDeleteprcRFBDate(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbdRFBCode)
        {
            var rbdRFBCodeParameter = rbdRFBCode.HasValue ?
                new ObjectParameter("rbdRFBCode", rbdRFBCode) :
                new ObjectParameter("rbdRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcDeleteprcRFBDate", resultCode, resultMessage, rbdRFBCodeParameter);
        }
    
        public virtual int prcSpcDeleteprcRFBGuarantee(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rgaRFBCode, Nullable<short> rgaSequence)
        {
            var rgaRFBCodeParameter = rgaRFBCode.HasValue ?
                new ObjectParameter("rgaRFBCode", rgaRFBCode) :
                new ObjectParameter("rgaRFBCode", typeof(int));
    
            var rgaSequenceParameter = rgaSequence.HasValue ?
                new ObjectParameter("rgaSequence", rgaSequence) :
                new ObjectParameter("rgaSequence", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcDeleteprcRFBGuarantee", resultCode, resultMessage, rgaRFBCodeParameter, rgaSequenceParameter);
        }
    
        public virtual int prcSpcDeleteprcRFBGuaranteeByRgaID(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rgaID)
        {
            var rgaIDParameter = rgaID.HasValue ?
                new ObjectParameter("rgaID", rgaID) :
                new ObjectParameter("rgaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcDeleteprcRFBGuaranteeByRgaID", resultCode, resultMessage, rgaIDParameter);
        }
    
        public virtual int prcSpcDeleteprcRFBHeader(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbhCode)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcDeleteprcRFBHeader", resultCode, resultMessage, rbhCodeParameter);
        }
    
        public virtual int prcSpcDeleteprcRFBInvitation(ObjectParameter resultCode, ObjectParameter resultMessage, string rbtCategory, Nullable<int> rbtSchema, Nullable<int> typeofAcquisition, Nullable<int> rbtRFBCode)
        {
            var rbtCategoryParameter = rbtCategory != null ?
                new ObjectParameter("rbtCategory", rbtCategory) :
                new ObjectParameter("rbtCategory", typeof(string));
    
            var rbtSchemaParameter = rbtSchema.HasValue ?
                new ObjectParameter("rbtSchema", rbtSchema) :
                new ObjectParameter("rbtSchema", typeof(int));
    
            var typeofAcquisitionParameter = typeofAcquisition.HasValue ?
                new ObjectParameter("TypeofAcquisition", typeofAcquisition) :
                new ObjectParameter("TypeofAcquisition", typeof(int));
    
            var rbtRFBCodeParameter = rbtRFBCode.HasValue ?
                new ObjectParameter("rbtRFBCode", rbtRFBCode) :
                new ObjectParameter("rbtRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcDeleteprcRFBInvitation", resultCode, resultMessage, rbtCategoryParameter, rbtSchemaParameter, typeofAcquisitionParameter, rbtRFBCodeParameter);
        }
    
        public virtual int prcSpcDeleteprcRFBInvitationByCategoryAndProviders(ObjectParameter resultCode, ObjectParameter resultMessage, string rbtOrganization, string rbtCategory, Nullable<int> rbtSchema, Nullable<int> typeofAcquisition, Nullable<int> rbtRFBCode)
        {
            var rbtOrganizationParameter = rbtOrganization != null ?
                new ObjectParameter("rbtOrganization", rbtOrganization) :
                new ObjectParameter("rbtOrganization", typeof(string));
    
            var rbtCategoryParameter = rbtCategory != null ?
                new ObjectParameter("rbtCategory", rbtCategory) :
                new ObjectParameter("rbtCategory", typeof(string));
    
            var rbtSchemaParameter = rbtSchema.HasValue ?
                new ObjectParameter("rbtSchema", rbtSchema) :
                new ObjectParameter("rbtSchema", typeof(int));
    
            var typeofAcquisitionParameter = typeofAcquisition.HasValue ?
                new ObjectParameter("TypeofAcquisition", typeofAcquisition) :
                new ObjectParameter("TypeofAcquisition", typeof(int));
    
            var rbtRFBCodeParameter = rbtRFBCode.HasValue ?
                new ObjectParameter("rbtRFBCode", rbtRFBCode) :
                new ObjectParameter("rbtRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcDeleteprcRFBInvitationByCategoryAndProviders", resultCode, resultMessage, rbtOrganizationParameter, rbtCategoryParameter, rbtSchemaParameter, typeofAcquisitionParameter, rbtRFBCodeParameter);
        }
    
        public virtual int prcSpcDeleteprcRFBItem(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbiID)
        {
            var rbiIDParameter = rbiID.HasValue ?
                new ObjectParameter("rbiID", rbiID) :
                new ObjectParameter("rbiID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcDeleteprcRFBItem", resultCode, resultMessage, rbiIDParameter);
        }
    
        public virtual int prcSpcDeleteprcRFBLegalRecord(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rlrRFBCode, Nullable<short> rlrSequence)
        {
            var rlrRFBCodeParameter = rlrRFBCode.HasValue ?
                new ObjectParameter("rlrRFBCode", rlrRFBCode) :
                new ObjectParameter("rlrRFBCode", typeof(int));
    
            var rlrSequenceParameter = rlrSequence.HasValue ?
                new ObjectParameter("rlrSequence", rlrSequence) :
                new ObjectParameter("rlrSequence", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcDeleteprcRFBLegalRecord", resultCode, resultMessage, rlrRFBCodeParameter, rlrSequenceParameter);
        }
    
        public virtual int prcSpcDeleteprcRFBLegalRecord2(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rlrRFBCode, Nullable<short> rlrSequence, Nullable<int> rlrLegalRecordType)
        {
            var rlrRFBCodeParameter = rlrRFBCode.HasValue ?
                new ObjectParameter("rlrRFBCode", rlrRFBCode) :
                new ObjectParameter("rlrRFBCode", typeof(int));
    
            var rlrSequenceParameter = rlrSequence.HasValue ?
                new ObjectParameter("rlrSequence", rlrSequence) :
                new ObjectParameter("rlrSequence", typeof(short));
    
            var rlrLegalRecordTypeParameter = rlrLegalRecordType.HasValue ?
                new ObjectParameter("rlrLegalRecordType", rlrLegalRecordType) :
                new ObjectParameter("rlrLegalRecordType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcDeleteprcRFBLegalRecord2", resultCode, resultMessage, rlrRFBCodeParameter, rlrSequenceParameter, rlrLegalRecordTypeParameter);
        }
    
        public virtual int prcSpcDeleteprcRFBProcessSubType(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rpsCode)
        {
            var rpsCodeParameter = rpsCode.HasValue ?
                new ObjectParameter("rpsCode", rpsCode) :
                new ObjectParameter("rpsCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcDeleteprcRFBProcessSubType", resultCode, resultMessage, rpsCodeParameter);
        }
    
        public virtual int prcSpcDeleteprcRFBProcessType(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rptCode)
        {
            var rptCodeParameter = rptCode.HasValue ?
                new ObjectParameter("rptCode", rptCode) :
                new ObjectParameter("rptCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcDeleteprcRFBProcessType", resultCode, resultMessage, rptCodeParameter);
        }
    
        public virtual int prcSpcDeleteprcRFBRequisite(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbrID)
        {
            var rbrIDParameter = rbrID.HasValue ?
                new ObjectParameter("rbrID", rbrID) :
                new ObjectParameter("rbrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcDeleteprcRFBRequisite", resultCode, resultMessage, rbrIDParameter);
        }
    
        public virtual int prcSpcDeleteprcRFBRequisiteBase(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbrRequisiteType, Nullable<int> rbrRFBCode)
        {
            var rbrRequisiteTypeParameter = rbrRequisiteType.HasValue ?
                new ObjectParameter("rbrRequisiteType", rbrRequisiteType) :
                new ObjectParameter("rbrRequisiteType", typeof(int));
    
            var rbrRFBCodeParameter = rbrRFBCode.HasValue ?
                new ObjectParameter("rbrRFBCode", rbrRFBCode) :
                new ObjectParameter("rbrRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcDeleteprcRFBRequisiteBase", resultCode, resultMessage, rbrRequisiteTypeParameter, rbrRFBCodeParameter);
        }
    
        public virtual int prcSpcDeleteprcRFBUserDefinedDate(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rudID)
        {
            var rudIDParameter = rudID.HasValue ?
                new ObjectParameter("rudID", rudID) :
                new ObjectParameter("rudID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcDeleteprcRFBUserDefinedDate", resultCode, resultMessage, rudIDParameter);
        }
    
        public virtual int prcSpcDeleteprcRFBVersion(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<short> rbvVersion, Nullable<int> rbvRFBCode)
        {
            var rbvVersionParameter = rbvVersion.HasValue ?
                new ObjectParameter("rbvVersion", rbvVersion) :
                new ObjectParameter("rbvVersion", typeof(short));
    
            var rbvRFBCodeParameter = rbvRFBCode.HasValue ?
                new ObjectParameter("rbvRFBCode", rbvRFBCode) :
                new ObjectParameter("rbvRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcDeleteprcRFBVersion", resultCode, resultMessage, rbvVersionParameter, rbvRFBCodeParameter);
        }
    
        public virtual int prcSpcDeletePurchaseOrder(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> porID)
        {
            var porIDParameter = porID.HasValue ?
                new ObjectParameter("porID", porID) :
                new ObjectParameter("porID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcDeletePurchaseOrder", resultCode, resultMessage, porIDParameter);
        }
    
        public virtual int prcSpcDeleteRequisitionProcess(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> reqCode)
        {
            var reqCodeParameter = reqCode.HasValue ?
                new ObjectParameter("reqCode", reqCode) :
                new ObjectParameter("reqCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcDeleteRequisitionProcess", resultCode, resultMessage, reqCodeParameter);
        }
    
        public virtual int prcSpcDeleteSectionsMiniAdmin(ObjectParameter resultCode, ObjectParameter resultMessage, string strOrgCode, string strSection)
        {
            var strOrgCodeParameter = strOrgCode != null ?
                new ObjectParameter("strOrgCode", strOrgCode) :
                new ObjectParameter("strOrgCode", typeof(string));
    
            var strSectionParameter = strSection != null ?
                new ObjectParameter("strSection", strSection) :
                new ObjectParameter("strSection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcDeleteSectionsMiniAdmin", resultCode, resultMessage, strOrgCodeParameter, strSectionParameter);
        }
    
        public virtual int prcSpcDesiertaLicitacion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcDesiertaLicitacion");
        }
    
        public virtual int prcSpcDesiertaLicitacionPrePublicacion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcDesiertaLicitacionPrePublicacion");
        }
    
        public virtual ObjectResult<Nullable<int>> prcSpcDocumentAddNew(Nullable<int> rbhCode)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("prcSpcDocumentAddNew", rbhCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcEliminaAntecedente_Result> prcSpcEliminaAntecedente(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbrRFBCode, Nullable<int> rbrID)
        {
            var rbrRFBCodeParameter = rbrRFBCode.HasValue ?
                new ObjectParameter("rbrRFBCode", rbrRFBCode) :
                new ObjectParameter("rbrRFBCode", typeof(int));
    
            var rbrIDParameter = rbrID.HasValue ?
                new ObjectParameter("rbrID", rbrID) :
                new ObjectParameter("rbrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcEliminaAntecedente_Result>("prcSpcEliminaAntecedente", resultCode, resultMessage, rbrRFBCodeParameter, rbrIDParameter);
        }
    
        public virtual ObjectResult<prcSpcEliminaAntecedenteAdjunto_Result> prcSpcEliminaAntecedenteAdjunto(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbrRFBCode, string rbrAttachCode, Nullable<int> documentType, Nullable<int> documentSubType)
        {
            var rbrRFBCodeParameter = rbrRFBCode.HasValue ?
                new ObjectParameter("rbrRFBCode", rbrRFBCode) :
                new ObjectParameter("rbrRFBCode", typeof(int));
    
            var rbrAttachCodeParameter = rbrAttachCode != null ?
                new ObjectParameter("rbrAttachCode", rbrAttachCode) :
                new ObjectParameter("rbrAttachCode", typeof(string));
    
            var documentTypeParameter = documentType.HasValue ?
                new ObjectParameter("DocumentType", documentType) :
                new ObjectParameter("DocumentType", typeof(int));
    
            var documentSubTypeParameter = documentSubType.HasValue ?
                new ObjectParameter("DocumentSubType", documentSubType) :
                new ObjectParameter("DocumentSubType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcEliminaAntecedenteAdjunto_Result>("prcSpcEliminaAntecedenteAdjunto", resultCode, resultMessage, rbrRFBCodeParameter, rbrAttachCodeParameter, documentTypeParameter, documentSubTypeParameter);
        }
    
        public virtual ObjectResult<prcSpcEliminarDocumentoLegal_Result> prcSpcEliminarDocumentoLegal(Nullable<int> rlrRFBCode, Nullable<int> rlrLegalRecordType, Nullable<int> rlrID, Nullable<int> rlrSourceID)
        {
            var rlrRFBCodeParameter = rlrRFBCode.HasValue ?
                new ObjectParameter("rlrRFBCode", rlrRFBCode) :
                new ObjectParameter("rlrRFBCode", typeof(int));
    
            var rlrLegalRecordTypeParameter = rlrLegalRecordType.HasValue ?
                new ObjectParameter("rlrLegalRecordType", rlrLegalRecordType) :
                new ObjectParameter("rlrLegalRecordType", typeof(int));
    
            var rlrIDParameter = rlrID.HasValue ?
                new ObjectParameter("rlrID", rlrID) :
                new ObjectParameter("rlrID", typeof(int));
    
            var rlrSourceIDParameter = rlrSourceID.HasValue ?
                new ObjectParameter("rlrSourceID", rlrSourceID) :
                new ObjectParameter("rlrSourceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcEliminarDocumentoLegal_Result>("prcSpcEliminarDocumentoLegal", rlrRFBCodeParameter, rlrLegalRecordTypeParameter, rlrIDParameter, rlrSourceIDParameter);
        }
    
        public virtual int prcSpcEliminarprcPOHeaderProviderData(ObjectParameter resultCode, ObjectParameter resultMessage, string porID)
        {
            var porIDParameter = porID != null ?
                new ObjectParameter("porID", porID) :
                new ObjectParameter("porID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcEliminarprcPOHeaderProviderData", resultCode, resultMessage, porIDParameter);
        }
    
        public virtual ObjectResult<prcSpcEliminarRequisitoContratar_Result> prcSpcEliminarRequisitoContratar(Nullable<int> rlrRFBCode, Nullable<int> rlrLegalRecordType)
        {
            var rlrRFBCodeParameter = rlrRFBCode.HasValue ?
                new ObjectParameter("rlrRFBCode", rlrRFBCode) :
                new ObjectParameter("rlrRFBCode", typeof(int));
    
            var rlrLegalRecordTypeParameter = rlrLegalRecordType.HasValue ?
                new ObjectParameter("rlrLegalRecordType", rlrLegalRecordType) :
                new ObjectParameter("rlrLegalRecordType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcEliminarRequisitoContratar_Result>("prcSpcEliminarRequisitoContratar", rlrRFBCodeParameter, rlrLegalRecordTypeParameter);
        }
    
        public virtual int prcSpcExistAwardprcBIDItemAward(Nullable<int> intBidRFBCode, ObjectParameter intExisteOferta)
        {
            var intBidRFBCodeParameter = intBidRFBCode.HasValue ?
                new ObjectParameter("intBidRFBCode", intBidRFBCode) :
                new ObjectParameter("intBidRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcExistAwardprcBIDItemAward", intBidRFBCodeParameter, intExisteOferta);
        }
    
        public virtual int prcSpcGeneratePOHeaderFromRFB()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcGeneratePOHeaderFromRFB");
        }
    
        public virtual int prcSpcGeneratePOHeaderFromRFB_CMDC()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcGeneratePOHeaderFromRFB_CMDC");
        }
    
        public virtual int prcSpcGeneratePOHeaderFromRFB_copy()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcGeneratePOHeaderFromRFB_copy");
        }
    
        public virtual ObjectResult<string> prcSpcGetAccionLog(Nullable<int> codigo, Nullable<int> tipo)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(int));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("prcSpcGetAccionLog", codigoParameter, tipoParameter);
        }
    
        public virtual ObjectResult<prcSpcGetAcquisitionProviders_Result> prcSpcGetAcquisitionProviders(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> bidRFBCode)
        {
            var bidRFBCodeParameter = bidRFBCode.HasValue ?
                new ObjectParameter("bidRFBCode", bidRFBCode) :
                new ObjectParameter("bidRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetAcquisitionProviders_Result>("prcSpcGetAcquisitionProviders", resultCode, resultMessage, bidRFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetAllprcRFBItem_Result> prcSpcGetAllprcRFBItem(ObjectParameter resultCode, ObjectParameter resultMessage)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetAllprcRFBItem_Result>("prcSpcGetAllprcRFBItem", resultCode, resultMessage);
        }
    
        public virtual ObjectResult<Nullable<int>> prcSpcGetAperAct(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> bidID)
        {
            var bidIDParameter = bidID.HasValue ?
                new ObjectParameter("bidID", bidID) :
                new ObjectParameter("bidID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("prcSpcGetAperAct", resultCode, resultMessage, bidIDParameter);
        }
    
        public virtual int prcSpcGetAutorizacionCS(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, Nullable<int> rbhCode, Nullable<int> bidID, Nullable<int> orgCode, Nullable<int> usrCode, string descripcion)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            var bidIDParameter = bidID.HasValue ?
                new ObjectParameter("bidID", bidID) :
                new ObjectParameter("bidID", typeof(int));
    
            var orgCodeParameter = orgCode.HasValue ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(int));
    
            var usrCodeParameter = usrCode.HasValue ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcGetAutorizacionCS", resultCode, resultMessage, resultID, rbhCodeParameter, bidIDParameter, orgCodeParameter, usrCodeParameter, descripcionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> prcSpcGetBidAwardSummary(Nullable<int> rbhCode)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("prcSpcGetBidAwardSummary", rbhCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetBillHistory_Result> prcSpcGetBillHistory(Nullable<int> bilId)
        {
            var bilIdParameter = bilId.HasValue ?
                new ObjectParameter("bilId", bilId) :
                new ObjectParameter("bilId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetBillHistory_Result>("prcSpcGetBillHistory", bilIdParameter);
        }
    
        public virtual ObjectResult<prcSpcGetBillHistoryDTE_Result> prcSpcGetBillHistoryDTE(Nullable<int> bilId)
        {
            var bilIdParameter = bilId.HasValue ?
                new ObjectParameter("bilId", bilId) :
                new ObjectParameter("bilId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetBillHistoryDTE_Result>("prcSpcGetBillHistoryDTE", bilIdParameter);
        }
    
        public virtual int prcSpcGetBuyerAddress(Nullable<int> oraType, string oraOrganization)
        {
            var oraTypeParameter = oraType.HasValue ?
                new ObjectParameter("oraType", oraType) :
                new ObjectParameter("oraType", typeof(int));
    
            var oraOrganizationParameter = oraOrganization != null ?
                new ObjectParameter("oraOrganization", oraOrganization) :
                new ObjectParameter("oraOrganization", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcGetBuyerAddress", oraTypeParameter, oraOrganizationParameter);
        }
    
        public virtual ObjectResult<prcSpcGetBuyerContact_Result> prcSpcGetBuyerContact(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> psrOrder)
        {
            var psrOrderParameter = psrOrder.HasValue ?
                new ObjectParameter("psrOrder", psrOrder) :
                new ObjectParameter("psrOrder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetBuyerContact_Result>("prcSpcGetBuyerContact", resultCode, resultMessage, psrOrderParameter);
        }
    
        public virtual ObjectResult<string> prcSpcGetCurrency(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rFBCode)
        {
            var rFBCodeParameter = rFBCode.HasValue ?
                new ObjectParameter("RFBCode", rFBCode) :
                new ObjectParameter("RFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("prcSpcGetCurrency", resultCode, resultMessage, rFBCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> prcSpcGetDateCertificate(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> intNumAdq)
        {
            var intNumAdqParameter = intNumAdq.HasValue ?
                new ObjectParameter("intNumAdq", intNumAdq) :
                new ObjectParameter("intNumAdq", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("prcSpcGetDateCertificate", resultCode, resultMessage, intNumAdqParameter);
        }
    
        public virtual ObjectResult<prcSpcGetDocAdjunto_Result> prcSpcGetDocAdjunto(string rbrAttachCode)
        {
            var rbrAttachCodeParameter = rbrAttachCode != null ?
                new ObjectParameter("rbrAttachCode", rbrAttachCode) :
                new ObjectParameter("rbrAttachCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetDocAdjunto_Result>("prcSpcGetDocAdjunto", rbrAttachCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetEstadoActualyAnterior_Result> prcSpcGetEstadoActualyAnterior(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rFBCode)
        {
            var rFBCodeParameter = rFBCode.HasValue ?
                new ObjectParameter("RFBCode", rFBCode) :
                new ObjectParameter("RFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetEstadoActualyAnterior_Result>("prcSpcGetEstadoActualyAnterior", resultCode, resultMessage, rFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetEvaluatePOInformation_Result> prcSpcGetEvaluatePOInformation(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> porID, Nullable<int> actDocumentType, Nullable<int> actDocumentSubType)
        {
            var porIDParameter = porID.HasValue ?
                new ObjectParameter("porID", porID) :
                new ObjectParameter("porID", typeof(int));
    
            var actDocumentTypeParameter = actDocumentType.HasValue ?
                new ObjectParameter("actDocumentType", actDocumentType) :
                new ObjectParameter("actDocumentType", typeof(int));
    
            var actDocumentSubTypeParameter = actDocumentSubType.HasValue ?
                new ObjectParameter("actDocumentSubType", actDocumentSubType) :
                new ObjectParameter("actDocumentSubType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetEvaluatePOInformation_Result>("prcSpcGetEvaluatePOInformation", resultCode, resultMessage, porIDParameter, actDocumentTypeParameter, actDocumentSubTypeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetEvaluatePOInformationBuyer_Result> prcSpcGetEvaluatePOInformationBuyer(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> porID)
        {
            var porIDParameter = porID.HasValue ?
                new ObjectParameter("porID", porID) :
                new ObjectParameter("porID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetEvaluatePOInformationBuyer_Result>("prcSpcGetEvaluatePOInformationBuyer", resultCode, resultMessage, porIDParameter);
        }
    
        public virtual int prcSpcGetForoCS(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, Nullable<int> rbhCode, Nullable<int> bidID, Nullable<int> orgCode, Nullable<int> usrCode, string descripcion)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            var bidIDParameter = bidID.HasValue ?
                new ObjectParameter("bidID", bidID) :
                new ObjectParameter("bidID", typeof(int));
    
            var orgCodeParameter = orgCode.HasValue ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(int));
    
            var usrCodeParameter = usrCode.HasValue ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcGetForoCS", resultCode, resultMessage, resultID, rbhCodeParameter, bidIDParameter, orgCodeParameter, usrCodeParameter, descripcionParameter);
        }
    
        public virtual ObjectResult<prcSpcGetGoodAndServiceMiniAdmin_Result> prcSpcGetGoodAndServiceMiniAdmin(ObjectParameter resultCode, ObjectParameter resultMessage, string strGoodandServices)
        {
            var strGoodandServicesParameter = strGoodandServices != null ?
                new ObjectParameter("strGoodandServices", strGoodandServices) :
                new ObjectParameter("strGoodandServices", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetGoodAndServiceMiniAdmin_Result>("prcSpcGetGoodAndServiceMiniAdmin", resultCode, resultMessage, strGoodandServicesParameter);
        }
    
        public virtual ObjectResult<prcSpcGetGuarantee_Result> prcSpcGetGuarantee(Nullable<int> rgaGuaranteeType, Nullable<int> rgaRFBCode)
        {
            var rgaGuaranteeTypeParameter = rgaGuaranteeType.HasValue ?
                new ObjectParameter("rgaGuaranteeType", rgaGuaranteeType) :
                new ObjectParameter("rgaGuaranteeType", typeof(int));
    
            var rgaRFBCodeParameter = rgaRFBCode.HasValue ?
                new ObjectParameter("rgaRFBCode", rgaRFBCode) :
                new ObjectParameter("rgaRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetGuarantee_Result>("prcSpcGetGuarantee", rgaGuaranteeTypeParameter, rgaRFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetHistoryAwardDate_Result> prcSpcGetHistoryAwardDate(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbhRFBCode)
        {
            var rbhRFBCodeParameter = rbhRFBCode.HasValue ?
                new ObjectParameter("rbhRFBCode", rbhRFBCode) :
                new ObjectParameter("rbhRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetHistoryAwardDate_Result>("prcSpcGetHistoryAwardDate", resultCode, resultMessage, rbhRFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetIssuerInvoice_Result> prcSpcGetIssuerInvoice(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> porCode)
        {
            var porCodeParameter = porCode.HasValue ?
                new ObjectParameter("porCode", porCode) :
                new ObjectParameter("porCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetIssuerInvoice_Result>("prcSpcGetIssuerInvoice", resultCode, resultMessage, porCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetLineData_Result> prcSpcGetLineData(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> poiID)
        {
            var poiIDParameter = poiID.HasValue ?
                new ObjectParameter("poiID", poiID) :
                new ObjectParameter("poiID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetLineData_Result>("prcSpcGetLineData", resultCode, resultMessage, poiIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> prcSpcGetLinkedCriteriaByRFBCode(Nullable<int> crclID)
        {
            var crclIDParameter = crclID.HasValue ?
                new ObjectParameter("crclID", crclID) :
                new ObjectParameter("crclID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("prcSpcGetLinkedCriteriaByRFBCode", crclIDParameter);
        }
    
        public virtual int prcSpcGetOrganizationAddressMiniAdmin(ObjectParameter resultCode, ObjectParameter resultMessage, string strOrgCode, Nullable<int> strOraType)
        {
            var strOrgCodeParameter = strOrgCode != null ?
                new ObjectParameter("strOrgCode", strOrgCode) :
                new ObjectParameter("strOrgCode", typeof(string));
    
            var strOraTypeParameter = strOraType.HasValue ?
                new ObjectParameter("strOraType", strOraType) :
                new ObjectParameter("strOraType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcGetOrganizationAddressMiniAdmin", resultCode, resultMessage, strOrgCodeParameter, strOraTypeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetOrganizationContactMiniAdmin_Result> prcSpcGetOrganizationContactMiniAdmin(ObjectParameter resultCode, ObjectParameter resultMessage, string strOrgCode, Nullable<int> strOcoType)
        {
            var strOrgCodeParameter = strOrgCode != null ?
                new ObjectParameter("strOrgCode", strOrgCode) :
                new ObjectParameter("strOrgCode", typeof(string));
    
            var strOcoTypeParameter = strOcoType.HasValue ?
                new ObjectParameter("strOcoType", strOcoType) :
                new ObjectParameter("strOcoType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetOrganizationContactMiniAdmin_Result>("prcSpcGetOrganizationContactMiniAdmin", resultCode, resultMessage, strOrgCodeParameter, strOcoTypeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetOtherClause_Result> prcSpcGetOtherClause(Nullable<int> rbcRFBCode)
        {
            var rbcRFBCodeParameter = rbcRFBCode.HasValue ?
                new ObjectParameter("rbcRFBCode", rbcRFBCode) :
                new ObjectParameter("rbcRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetOtherClause_Result>("prcSpcGetOtherClause", rbcRFBCodeParameter);
        }
    
        public virtual ObjectResult<string> prcSpcGetPasoLog(Nullable<int> paso)
        {
            var pasoParameter = paso.HasValue ?
                new ObjectParameter("paso", paso) :
                new ObjectParameter("paso", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("prcSpcGetPasoLog", pasoParameter);
        }
    
        public virtual ObjectResult<prcSpcGetPOHeaderNameAcquiticions_Result> prcSpcGetPOHeaderNameAcquiticions(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> porID)
        {
            var porIDParameter = porID.HasValue ?
                new ObjectParameter("porID", porID) :
                new ObjectParameter("porID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetPOHeaderNameAcquiticions_Result>("prcSpcGetPOHeaderNameAcquiticions", resultCode, resultMessage, porIDParameter);
        }
    
        public virtual int prcSpcGetPOInfoByAcceptedDate(ObjectParameter resultCode, ObjectParameter resultMessage, string orgCode, string userCode, Nullable<System.DateTime> porDateBegin, Nullable<System.DateTime> porDateEnd)
        {
            var orgCodeParameter = orgCode != null ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(string));
    
            var userCodeParameter = userCode != null ?
                new ObjectParameter("userCode", userCode) :
                new ObjectParameter("userCode", typeof(string));
    
            var porDateBeginParameter = porDateBegin.HasValue ?
                new ObjectParameter("porDateBegin", porDateBegin) :
                new ObjectParameter("porDateBegin", typeof(System.DateTime));
    
            var porDateEndParameter = porDateEnd.HasValue ?
                new ObjectParameter("porDateEnd", porDateEnd) :
                new ObjectParameter("porDateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcGetPOInfoByAcceptedDate", resultCode, resultMessage, orgCodeParameter, userCodeParameter, porDateBeginParameter, porDateEndParameter);
        }
    
        public virtual int prcSpcGetPOInfoByCode(ObjectParameter resultCode, ObjectParameter resultMessage, string orgCode, string porCode)
        {
            var orgCodeParameter = orgCode != null ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(string));
    
            var porCodeParameter = porCode != null ?
                new ObjectParameter("porCode", porCode) :
                new ObjectParameter("porCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcGetPOInfoByCode", resultCode, resultMessage, orgCodeParameter, porCodeParameter);
        }
    
        public virtual int prcSpcGetPOInfoByID(ObjectParameter resultCode, ObjectParameter resultMessage, string orgCode, Nullable<int> porID)
        {
            var orgCodeParameter = orgCode != null ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(string));
    
            var porIDParameter = porID.HasValue ?
                new ObjectParameter("porID", porID) :
                new ObjectParameter("porID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcGetPOInfoByID", resultCode, resultMessage, orgCodeParameter, porIDParameter);
        }
    
        public virtual ObjectResult<prcSpcGetPOInfoByParam_Result> prcSpcGetPOInfoByParam(ObjectParameter resultCode, ObjectParameter resultMessage, string orgCode, Nullable<System.DateTime> porDateBegin, Nullable<System.DateTime> porDateEnd, string strState, Nullable<int> intEnterprise, string strCode)
        {
            var orgCodeParameter = orgCode != null ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(string));
    
            var porDateBeginParameter = porDateBegin.HasValue ?
                new ObjectParameter("porDateBegin", porDateBegin) :
                new ObjectParameter("porDateBegin", typeof(System.DateTime));
    
            var porDateEndParameter = porDateEnd.HasValue ?
                new ObjectParameter("porDateEnd", porDateEnd) :
                new ObjectParameter("porDateEnd", typeof(System.DateTime));
    
            var strStateParameter = strState != null ?
                new ObjectParameter("strState", strState) :
                new ObjectParameter("strState", typeof(string));
    
            var intEnterpriseParameter = intEnterprise.HasValue ?
                new ObjectParameter("intEnterprise", intEnterprise) :
                new ObjectParameter("intEnterprise", typeof(int));
    
            var strCodeParameter = strCode != null ?
                new ObjectParameter("strCode", strCode) :
                new ObjectParameter("strCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetPOInfoByParam_Result>("prcSpcGetPOInfoByParam", resultCode, resultMessage, orgCodeParameter, porDateBeginParameter, porDateEndParameter, strStateParameter, intEnterpriseParameter, strCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetPOInfoByRange_Result> prcSpcGetPOInfoByRange(ObjectParameter resultCode, ObjectParameter resultMessage, string orgCode, Nullable<System.DateTime> porDateBegin, Nullable<System.DateTime> porDateEnd)
        {
            var orgCodeParameter = orgCode != null ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(string));
    
            var porDateBeginParameter = porDateBegin.HasValue ?
                new ObjectParameter("porDateBegin", porDateBegin) :
                new ObjectParameter("porDateBegin", typeof(System.DateTime));
    
            var porDateEndParameter = porDateEnd.HasValue ?
                new ObjectParameter("porDateEnd", porDateEnd) :
                new ObjectParameter("porDateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetPOInfoByRange_Result>("prcSpcGetPOInfoByRange", resultCode, resultMessage, orgCodeParameter, porDateBeginParameter, porDateEndParameter);
        }
    
        public virtual ObjectResult<prcSpcGetPOState_Result> prcSpcGetPOState(ObjectParameter resultCode, ObjectParameter resultMessage, string orgCode)
        {
            var orgCodeParameter = orgCode != null ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetPOState_Result>("prcSpcGetPOState", resultCode, resultMessage, orgCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcAprovStateTR_Result> prcSpcGetprcAprovStateTR(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbhCode)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcAprovStateTR_Result>("prcSpcGetprcAprovStateTR", resultCode, resultMessage, rbhCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcAprovTR_Result> prcSpcGetprcAprovTR(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbhCode, Nullable<int> aprovTypeTR)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            var aprovTypeTRParameter = aprovTypeTR.HasValue ?
                new ObjectParameter("AprovTypeTR", aprovTypeTR) :
                new ObjectParameter("AprovTypeTR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcAprovTR_Result>("prcSpcGetprcAprovTR", resultCode, resultMessage, rbhCodeParameter, aprovTypeTRParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcAwardedProviders_Result> prcSpcGetprcAwardedProviders(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbhCode)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcAwardedProviders_Result>("prcSpcGetprcAwardedProviders", resultCode, resultMessage, rbhCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcAwardedProvidersByRFBCode_Result> prcSpcGetprcAwardedProvidersByRFBCode(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rfbCode)
        {
            var rfbCodeParameter = rfbCode.HasValue ?
                new ObjectParameter("rfbCode", rfbCode) :
                new ObjectParameter("rfbCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcAwardedProvidersByRFBCode_Result>("prcSpcGetprcAwardedProvidersByRFBCode", resultCode, resultMessage, rfbCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcAwardedProvidersByRFBCode_Desert_Result> prcSpcGetprcAwardedProvidersByRFBCode_Desert(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rfbCode)
        {
            var rfbCodeParameter = rfbCode.HasValue ?
                new ObjectParameter("rfbCode", rfbCode) :
                new ObjectParameter("rfbCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcAwardedProvidersByRFBCode_Desert_Result>("prcSpcGetprcAwardedProvidersByRFBCode_Desert", resultCode, resultMessage, rfbCodeParameter);
        }
    
        public virtual ObjectResult<PRCSPCGETPRCAWARDSUMMARY_Result> PRCSPCGETPRCAWARDSUMMARY(ObjectParameter rESULTCODE, ObjectParameter rESULTMESSAGE, Nullable<int> rBHCODE, Nullable<int> rAPAPPSTEP)
        {
            var rBHCODEParameter = rBHCODE.HasValue ?
                new ObjectParameter("RBHCODE", rBHCODE) :
                new ObjectParameter("RBHCODE", typeof(int));
    
            var rAPAPPSTEPParameter = rAPAPPSTEP.HasValue ?
                new ObjectParameter("RAPAPPSTEP", rAPAPPSTEP) :
                new ObjectParameter("RAPAPPSTEP", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PRCSPCGETPRCAWARDSUMMARY_Result>("PRCSPCGETPRCAWARDSUMMARY", rESULTCODE, rESULTMESSAGE, rBHCODEParameter, rAPAPPSTEPParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcAwardSummary_20080731_Result> prcSpcGetprcAwardSummary_20080731(ObjectParameter rESULTCODE, ObjectParameter rESULTMESSAGE, Nullable<int> rBHCODE, Nullable<int> rAPAPPSTEP)
        {
            var rBHCODEParameter = rBHCODE.HasValue ?
                new ObjectParameter("RBHCODE", rBHCODE) :
                new ObjectParameter("RBHCODE", typeof(int));
    
            var rAPAPPSTEPParameter = rAPAPPSTEP.HasValue ?
                new ObjectParameter("RAPAPPSTEP", rAPAPPSTEP) :
                new ObjectParameter("RAPAPPSTEP", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcAwardSummary_20080731_Result>("prcSpcGetprcAwardSummary_20080731", rESULTCODE, rESULTMESSAGE, rBHCODEParameter, rAPAPPSTEPParameter);
        }
    
        public virtual int prcSpcGetprcBIDDesertAward(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> bitID)
        {
            var bitIDParameter = bitID.HasValue ?
                new ObjectParameter("bitID", bitID) :
                new ObjectParameter("bitID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcGetprcBIDDesertAward", resultCode, resultMessage, bitIDParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcBIDItem_Result> prcSpcGetprcBIDItem(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> bitItem, Nullable<int> bitBID)
        {
            var bitItemParameter = bitItem.HasValue ?
                new ObjectParameter("bitItem", bitItem) :
                new ObjectParameter("bitItem", typeof(int));
    
            var bitBIDParameter = bitBID.HasValue ?
                new ObjectParameter("bitBID", bitBID) :
                new ObjectParameter("bitBID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcBIDItem_Result>("prcSpcGetprcBIDItem", resultCode, resultMessage, bitItemParameter, bitBIDParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcBIDItemAward_Result> prcSpcGetprcBIDItemAward(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> bitID)
        {
            var bitIDParameter = bitID.HasValue ?
                new ObjectParameter("bitID", bitID) :
                new ObjectParameter("bitID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcBIDItemAward_Result>("prcSpcGetprcBIDItemAward", resultCode, resultMessage, bitIDParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcBIDItemAwardbyRFB_Result> prcSpcGetprcBIDItemAwardbyRFB(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> bitID)
        {
            var bitIDParameter = bitID.HasValue ?
                new ObjectParameter("bitID", bitID) :
                new ObjectParameter("bitID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcBIDItemAwardbyRFB_Result>("prcSpcGetprcBIDItemAwardbyRFB", resultCode, resultMessage, bitIDParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcBIDItemAwardDesert_Result> prcSpcGetprcBIDItemAwardDesert(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> bitID)
        {
            var bitIDParameter = bitID.HasValue ?
                new ObjectParameter("bitID", bitID) :
                new ObjectParameter("bitID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcBIDItemAwardDesert_Result>("prcSpcGetprcBIDItemAwardDesert", resultCode, resultMessage, bitIDParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcBIDItemAwardedDesert_Result> prcSpcGetprcBIDItemAwardedDesert(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> bitID)
        {
            var bitIDParameter = bitID.HasValue ?
                new ObjectParameter("bitID", bitID) :
                new ObjectParameter("bitID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcBIDItemAwardedDesert_Result>("prcSpcGetprcBIDItemAwardedDesert", resultCode, resultMessage, bitIDParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcBIDItemGoodandServices_Result> prcSpcGetprcBIDItemGoodandServices(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<short> bitIsBidded, string bidOrganization, Nullable<int> rbhCode)
        {
            var bitIsBiddedParameter = bitIsBidded.HasValue ?
                new ObjectParameter("bitIsBidded", bitIsBidded) :
                new ObjectParameter("bitIsBidded", typeof(short));
    
            var bidOrganizationParameter = bidOrganization != null ?
                new ObjectParameter("bidOrganization", bidOrganization) :
                new ObjectParameter("bidOrganization", typeof(string));
    
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcBIDItemGoodandServices_Result>("prcSpcGetprcBIDItemGoodandServices", resultCode, resultMessage, bitIsBiddedParameter, bidOrganizationParameter, rbhCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcBIDItemGoodandServicesDifference_Result> prcSpcGetprcBIDItemGoodandServicesDifference(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<short> bitIsBidded, string bidOrganization, Nullable<int> rbhCode)
        {
            var bitIsBiddedParameter = bitIsBidded.HasValue ?
                new ObjectParameter("bitIsBidded", bitIsBidded) :
                new ObjectParameter("bitIsBidded", typeof(short));
    
            var bidOrganizationParameter = bidOrganization != null ?
                new ObjectParameter("bidOrganization", bidOrganization) :
                new ObjectParameter("bidOrganization", typeof(string));
    
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcBIDItemGoodandServicesDifference_Result>("prcSpcGetprcBIDItemGoodandServicesDifference", resultCode, resultMessage, bitIsBiddedParameter, bidOrganizationParameter, rbhCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcBIDQuote_Result> prcSpcGetprcBIDQuote(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> bidID)
        {
            var bidIDParameter = bidID.HasValue ?
                new ObjectParameter("bidID", bidID) :
                new ObjectParameter("bidID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcBIDQuote_Result>("prcSpcGetprcBIDQuote", resultCode, resultMessage, bidIDParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcBIDQuoteByRFB_Result> prcSpcGetprcBIDQuoteByRFB(ObjectParameter rESULTCODE, ObjectParameter rESULTMESSAGE, Nullable<int> cONFIGURATIONVALUE, Nullable<int> rBHCODE, string bIDORGANIZATION)
        {
            var cONFIGURATIONVALUEParameter = cONFIGURATIONVALUE.HasValue ?
                new ObjectParameter("CONFIGURATIONVALUE", cONFIGURATIONVALUE) :
                new ObjectParameter("CONFIGURATIONVALUE", typeof(int));
    
            var rBHCODEParameter = rBHCODE.HasValue ?
                new ObjectParameter("RBHCODE", rBHCODE) :
                new ObjectParameter("RBHCODE", typeof(int));
    
            var bIDORGANIZATIONParameter = bIDORGANIZATION != null ?
                new ObjectParameter("BIDORGANIZATION", bIDORGANIZATION) :
                new ObjectParameter("BIDORGANIZATION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcBIDQuoteByRFB_Result>("prcSpcGetprcBIDQuoteByRFB", rESULTCODE, rESULTMESSAGE, cONFIGURATIONVALUEParameter, rBHCODEParameter, bIDORGANIZATIONParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcBIDQuoteByRFBCode_Result> prcSpcGetprcBIDQuoteByRFBCode(ObjectParameter rESULTCODE, ObjectParameter rESULTMESSAGE, Nullable<int> cONFIGURATIONVALUE, Nullable<int> rBHCODE, string bIDORGANIZATION)
        {
            var cONFIGURATIONVALUEParameter = cONFIGURATIONVALUE.HasValue ?
                new ObjectParameter("CONFIGURATIONVALUE", cONFIGURATIONVALUE) :
                new ObjectParameter("CONFIGURATIONVALUE", typeof(int));
    
            var rBHCODEParameter = rBHCODE.HasValue ?
                new ObjectParameter("RBHCODE", rBHCODE) :
                new ObjectParameter("RBHCODE", typeof(int));
    
            var bIDORGANIZATIONParameter = bIDORGANIZATION != null ?
                new ObjectParameter("BIDORGANIZATION", bIDORGANIZATION) :
                new ObjectParameter("BIDORGANIZATION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcBIDQuoteByRFBCode_Result>("prcSpcGetprcBIDQuoteByRFBCode", rESULTCODE, rESULTMESSAGE, cONFIGURATIONVALUEParameter, rBHCODEParameter, bIDORGANIZATIONParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> prcSpcGetprcBIDQuoteByUser(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> bidRFBCode, string bidOrganization, Nullable<int> bidDocumentStatus)
        {
            var bidRFBCodeParameter = bidRFBCode.HasValue ?
                new ObjectParameter("bidRFBCode", bidRFBCode) :
                new ObjectParameter("bidRFBCode", typeof(int));
    
            var bidOrganizationParameter = bidOrganization != null ?
                new ObjectParameter("bidOrganization", bidOrganization) :
                new ObjectParameter("bidOrganization", typeof(string));
    
            var bidDocumentStatusParameter = bidDocumentStatus.HasValue ?
                new ObjectParameter("bidDocumentStatus", bidDocumentStatus) :
                new ObjectParameter("bidDocumentStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("prcSpcGetprcBIDQuoteByUser", resultCode, resultMessage, bidRFBCodeParameter, bidOrganizationParameter, bidDocumentStatusParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcCategory_Result> prcSpcGetprcCategory(ObjectParameter resultCode, ObjectParameter resultMessage, string category)
        {
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcCategory_Result>("prcSpcGetprcCategory", resultCode, resultMessage, categoryParameter);
        }
    
        public virtual int prcSpcGetprcCriteriaClause(Nullable<int> crclID, string crclTitulo, Nullable<int> tpcID, string crclEstadoVigencia, string rubro)
        {
            var crclIDParameter = crclID.HasValue ?
                new ObjectParameter("crclID", crclID) :
                new ObjectParameter("crclID", typeof(int));
    
            var crclTituloParameter = crclTitulo != null ?
                new ObjectParameter("crclTitulo", crclTitulo) :
                new ObjectParameter("crclTitulo", typeof(string));
    
            var tpcIDParameter = tpcID.HasValue ?
                new ObjectParameter("tpcID", tpcID) :
                new ObjectParameter("tpcID", typeof(int));
    
            var crclEstadoVigenciaParameter = crclEstadoVigencia != null ?
                new ObjectParameter("crclEstadoVigencia", crclEstadoVigencia) :
                new ObjectParameter("crclEstadoVigencia", typeof(string));
    
            var rubroParameter = rubro != null ?
                new ObjectParameter("rubro", rubro) :
                new ObjectParameter("rubro", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcGetprcCriteriaClause", crclIDParameter, crclTituloParameter, tpcIDParameter, crclEstadoVigenciaParameter, rubroParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcCriteriaClauseByCategory_Result> prcSpcGetprcCriteriaClauseByCategory(Nullable<int> crclID)
        {
            var crclIDParameter = crclID.HasValue ?
                new ObjectParameter("crclID", crclID) :
                new ObjectParameter("crclID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcCriteriaClauseByCategory_Result>("prcSpcGetprcCriteriaClauseByCategory", crclIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> prcSpcGetprcGetEvaluationCommittee(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbhCode)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("prcSpcGetprcGetEvaluationCommittee", resultCode, resultMessage, rbhCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> prcSpcGetprcGetModeEvaluationCommittee(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbhCode)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("prcSpcGetprcGetModeEvaluationCommittee", resultCode, resultMessage, rbhCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcGoodAndService_Result> prcSpcGetprcGoodAndService(ObjectParameter resultCode, ObjectParameter resultMessage, string goodAndService)
        {
            var goodAndServiceParameter = goodAndService != null ?
                new ObjectParameter("GoodAndService", goodAndService) :
                new ObjectParameter("GoodAndService", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcGoodAndService_Result>("prcSpcGetprcGoodAndService", resultCode, resultMessage, goodAndServiceParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcHeadingTest_Result> prcSpcGetprcHeadingTest(string searchText)
        {
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcHeadingTest_Result>("prcSpcGetprcHeadingTest", searchTextParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcInstitutions_Result> prcSpcGetprcInstitutions(ObjectParameter resultCode, ObjectParameter resultMessage)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcInstitutions_Result>("prcSpcGetprcInstitutions", resultCode, resultMessage);
        }
    
        public virtual ObjectResult<prcSpcGetprcInstitutionsByType_Result> prcSpcGetprcInstitutionsByType(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> insType)
        {
            var insTypeParameter = insType.HasValue ?
                new ObjectParameter("insType", insType) :
                new ObjectParameter("insType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcInstitutionsByType_Result>("prcSpcGetprcInstitutionsByType", resultCode, resultMessage, insTypeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcKindOfCriteria_Result> prcSpcGetprcKindOfCriteria(Nullable<int> tpcID)
        {
            var tpcIDParameter = tpcID.HasValue ?
                new ObjectParameter("tpcID", tpcID) :
                new ObjectParameter("tpcID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcKindOfCriteria_Result>("prcSpcGetprcKindOfCriteria", tpcIDParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcLoadForo_Result> prcSpcGetprcLoadForo(Nullable<int> rbhCode, Nullable<int> bidID, Nullable<int> orgCode, Nullable<int> usrCode)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            var bidIDParameter = bidID.HasValue ?
                new ObjectParameter("bidID", bidID) :
                new ObjectParameter("bidID", typeof(int));
    
            var orgCodeParameter = orgCode.HasValue ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(int));
    
            var usrCodeParameter = usrCode.HasValue ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcLoadForo_Result>("prcSpcGetprcLoadForo", rbhCodeParameter, bidIDParameter, orgCodeParameter, usrCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcLoadForoRespuestas_Result> prcSpcGetprcLoadForoRespuestas(Nullable<int> rbhCode, Nullable<int> bidID, Nullable<int> orgCode, Nullable<int> usrCode, Nullable<int> idPregunt)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            var bidIDParameter = bidID.HasValue ?
                new ObjectParameter("bidID", bidID) :
                new ObjectParameter("bidID", typeof(int));
    
            var orgCodeParameter = orgCode.HasValue ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(int));
    
            var usrCodeParameter = usrCode.HasValue ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(int));
    
            var idPreguntParameter = idPregunt.HasValue ?
                new ObjectParameter("idPregunt", idPregunt) :
                new ObjectParameter("idPregunt", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcLoadForoRespuestas_Result>("prcSpcGetprcLoadForoRespuestas", rbhCodeParameter, bidIDParameter, orgCodeParameter, usrCodeParameter, idPreguntParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcMeterBidsItems_Result> prcSpcGetprcMeterBidsItems(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbiID)
        {
            var rbiIDParameter = rbiID.HasValue ?
                new ObjectParameter("rbiID", rbiID) :
                new ObjectParameter("rbiID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcMeterBidsItems_Result>("prcSpcGetprcMeterBidsItems", resultCode, resultMessage, rbiIDParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcNotAwardedProvidersByRFBCode_Result> prcSpcGetprcNotAwardedProvidersByRFBCode(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rfbCode)
        {
            var rfbCodeParameter = rfbCode.HasValue ?
                new ObjectParameter("rfbCode", rfbCode) :
                new ObjectParameter("rfbCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcNotAwardedProvidersByRFBCode_Result>("prcSpcGetprcNotAwardedProvidersByRFBCode", resultCode, resultMessage, rfbCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcNotAwardedProvidersNotTechnicalByRFBCode_Result> prcSpcGetprcNotAwardedProvidersNotTechnicalByRFBCode(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rfbCode)
        {
            var rfbCodeParameter = rfbCode.HasValue ?
                new ObjectParameter("rfbCode", rfbCode) :
                new ObjectParameter("rfbCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcNotAwardedProvidersNotTechnicalByRFBCode_Result>("prcSpcGetprcNotAwardedProvidersNotTechnicalByRFBCode", resultCode, resultMessage, rfbCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcPOApproval_Result> prcSpcGetprcPOApproval(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> papOrder)
        {
            var papOrderParameter = papOrder.HasValue ?
                new ObjectParameter("papOrder", papOrder) :
                new ObjectParameter("papOrder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcPOApproval_Result>("prcSpcGetprcPOApproval", resultCode, resultMessage, papOrderParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcPOApprovalComplete_Result> prcSpcGetprcPOApprovalComplete(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rapRFBCode)
        {
            var rapRFBCodeParameter = rapRFBCode.HasValue ?
                new ObjectParameter("rapRFBCode", rapRFBCode) :
                new ObjectParameter("rapRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcPOApprovalComplete_Result>("prcSpcGetprcPOApprovalComplete", resultCode, resultMessage, rapRFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcPOBuyerInfoByID_Result> prcSpcGetprcPOBuyerInfoByID(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> porID)
        {
            var porIDParameter = porID.HasValue ?
                new ObjectParameter("porID", porID) :
                new ObjectParameter("porID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcPOBuyerInfoByID_Result>("prcSpcGetprcPOBuyerInfoByID", resultCode, resultMessage, porIDParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcPOChargeByHeader_Result> prcSpcGetprcPOChargeByHeader(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> porCode)
        {
            var porCodeParameter = porCode.HasValue ?
                new ObjectParameter("porCode", porCode) :
                new ObjectParameter("porCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcPOChargeByHeader_Result>("prcSpcGetprcPOChargeByHeader", resultCode, resultMessage, porCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcPODiscount_Result> prcSpcGetprcPODiscount(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> pdcID)
        {
            var pdcIDParameter = pdcID.HasValue ?
                new ObjectParameter("pdcID", pdcID) :
                new ObjectParameter("pdcID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcPODiscount_Result>("prcSpcGetprcPODiscount", resultCode, resultMessage, pdcIDParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcPODiscountByHeader_Result> prcSpcGetprcPODiscountByHeader(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> porCode)
        {
            var porCodeParameter = porCode.HasValue ?
                new ObjectParameter("porCode", porCode) :
                new ObjectParameter("porCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcPODiscountByHeader_Result>("prcSpcGetprcPODiscountByHeader", resultCode, resultMessage, porCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcPOHeaderByCode_Result> prcSpcGetprcPOHeaderByCode(ObjectParameter rESULTCODE, ObjectParameter rESULTMESSAGE, Nullable<int> pORCODE)
        {
            var pORCODEParameter = pORCODE.HasValue ?
                new ObjectParameter("PORCODE", pORCODE) :
                new ObjectParameter("PORCODE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcPOHeaderByCode_Result>("prcSpcGetprcPOHeaderByCode", rESULTCODE, rESULTMESSAGE, pORCODEParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcPOHeaderByID_Result> prcSpcGetprcPOHeaderByID(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> porID)
        {
            var porIDParameter = porID.HasValue ?
                new ObjectParameter("porID", porID) :
                new ObjectParameter("porID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcPOHeaderByID_Result>("prcSpcGetprcPOHeaderByID", resultCode, resultMessage, porIDParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcPOHeaderByIDWithAttachmentsCount_Result> prcSpcGetprcPOHeaderByIDWithAttachmentsCount(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> porID, Nullable<int> actDocumentType, Nullable<int> atcDocumentSubType)
        {
            var porIDParameter = porID.HasValue ?
                new ObjectParameter("porID", porID) :
                new ObjectParameter("porID", typeof(int));
    
            var actDocumentTypeParameter = actDocumentType.HasValue ?
                new ObjectParameter("actDocumentType", actDocumentType) :
                new ObjectParameter("actDocumentType", typeof(int));
    
            var atcDocumentSubTypeParameter = atcDocumentSubType.HasValue ?
                new ObjectParameter("atcDocumentSubType", atcDocumentSubType) :
                new ObjectParameter("atcDocumentSubType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcPOHeaderByIDWithAttachmentsCount_Result>("prcSpcGetprcPOHeaderByIDWithAttachmentsCount", resultCode, resultMessage, porIDParameter, actDocumentTypeParameter, atcDocumentSubTypeParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> prcSpcGetprcPOHeaderCancelDate(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> porID)
        {
            var porIDParameter = porID.HasValue ?
                new ObjectParameter("porID", porID) :
                new ObjectParameter("porID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("prcSpcGetprcPOHeaderCancelDate", resultCode, resultMessage, porIDParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcPOHeaderSummary_Result> prcSpcGetprcPOHeaderSummary(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> porID)
        {
            var porIDParameter = porID.HasValue ?
                new ObjectParameter("porID", porID) :
                new ObjectParameter("porID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcPOHeaderSummary_Result>("prcSpcGetprcPOHeaderSummary", resultCode, resultMessage, porIDParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcPOHeaderToVerify_Result> prcSpcGetprcPOHeaderToVerify(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> porID)
        {
            var porIDParameter = porID.HasValue ?
                new ObjectParameter("porID", porID) :
                new ObjectParameter("porID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcPOHeaderToVerify_Result>("prcSpcGetprcPOHeaderToVerify", resultCode, resultMessage, porIDParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcPOItem_Result> prcSpcGetprcPOItem(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> poiID)
        {
            var poiIDParameter = poiID.HasValue ?
                new ObjectParameter("poiID", poiID) :
                new ObjectParameter("poiID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcPOItem_Result>("prcSpcGetprcPOItem", resultCode, resultMessage, poiIDParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcPOItemByHeader_Result> prcSpcGetprcPOItemByHeader(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> porCode)
        {
            var porCodeParameter = porCode.HasValue ?
                new ObjectParameter("porCode", porCode) :
                new ObjectParameter("porCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcPOItemByHeader_Result>("prcSpcGetprcPOItemByHeader", resultCode, resultMessage, porCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcPOItemByHeaderProvider_Result> prcSpcGetprcPOItemByHeaderProvider(Nullable<int> rbhCode, Nullable<int> bidID, Nullable<int> orgCode)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            var bidIDParameter = bidID.HasValue ?
                new ObjectParameter("bidID", bidID) :
                new ObjectParameter("bidID", typeof(int));
    
            var orgCodeParameter = orgCode.HasValue ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcPOItemByHeaderProvider_Result>("prcSpcGetprcPOItemByHeaderProvider", rbhCodeParameter, bidIDParameter, orgCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcPOPayBillingInformation_Result> prcSpcGetprcPOPayBillingInformation(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> porID)
        {
            var porIDParameter = porID.HasValue ?
                new ObjectParameter("porID", porID) :
                new ObjectParameter("porID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcPOPayBillingInformation_Result>("prcSpcGetprcPOPayBillingInformation", resultCode, resultMessage, porIDParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcPorCodeByPOHeader_Result> prcSpcGetprcPorCodeByPOHeader(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> porSourceDocumentNumber)
        {
            var porSourceDocumentNumberParameter = porSourceDocumentNumber.HasValue ?
                new ObjectParameter("porSourceDocumentNumber", porSourceDocumentNumber) :
                new ObjectParameter("porSourceDocumentNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcPorCodeByPOHeader_Result>("prcSpcGetprcPorCodeByPOHeader", resultCode, resultMessage, porSourceDocumentNumberParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcPOStaticRecipient_Result> prcSpcGetprcPOStaticRecipient(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> porID)
        {
            var porIDParameter = porID.HasValue ?
                new ObjectParameter("porID", porID) :
                new ObjectParameter("porID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcPOStaticRecipient_Result>("prcSpcGetprcPOStaticRecipient", resultCode, resultMessage, porIDParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcPOStaticRecipientBuyerContact_Result> prcSpcGetprcPOStaticRecipientBuyerContact(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> porID)
        {
            var porIDParameter = porID.HasValue ?
                new ObjectParameter("porID", porID) :
                new ObjectParameter("porID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcPOStaticRecipientBuyerContact_Result>("prcSpcGetprcPOStaticRecipientBuyerContact", resultCode, resultMessage, porIDParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcPOTaxByHeader_Result> prcSpcGetprcPOTaxByHeader(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> porCode)
        {
            var porCodeParameter = porCode.HasValue ?
                new ObjectParameter("porCode", porCode) :
                new ObjectParameter("porCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcPOTaxByHeader_Result>("prcSpcGetprcPOTaxByHeader", resultCode, resultMessage, porCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcPOVersion_Result> prcSpcGetprcPOVersion(ObjectParameter resultCode, ObjectParameter resultMessage)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcPOVersion_Result>("prcSpcGetprcPOVersion", resultCode, resultMessage);
        }
    
        public virtual ObjectResult<prcSpcGetprcPOVersionByCode_Result> prcSpcGetprcPOVersionByCode(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> povOrder, Nullable<int> povClass)
        {
            var povOrderParameter = povOrder.HasValue ?
                new ObjectParameter("povOrder", povOrder) :
                new ObjectParameter("povOrder", typeof(int));
    
            var povClassParameter = povClass.HasValue ?
                new ObjectParameter("povClass", povClass) :
                new ObjectParameter("povClass", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcPOVersionByCode_Result>("prcSpcGetprcPOVersionByCode", resultCode, resultMessage, povOrderParameter, povClassParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcPreviewMakeRazon_Result> prcSpcGetprcPreviewMakeRazon(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rfbCode)
        {
            var rfbCodeParameter = rfbCode.HasValue ?
                new ObjectParameter("rfbCode", rfbCode) :
                new ObjectParameter("rfbCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcPreviewMakeRazon_Result>("prcSpcGetprcPreviewMakeRazon", resultCode, resultMessage, rfbCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcPreviewMakeRazonByUser_Result> prcSpcGetprcPreviewMakeRazonByUser(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rfbCode)
        {
            var rfbCodeParameter = rfbCode.HasValue ?
                new ObjectParameter("rfbCode", rfbCode) :
                new ObjectParameter("rfbCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcPreviewMakeRazonByUser_Result>("prcSpcGetprcPreviewMakeRazonByUser", resultCode, resultMessage, rfbCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcProviders_Result> prcSpcGetprcProviders(ObjectParameter resultCode, ObjectParameter resultMessage)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcProviders_Result>("prcSpcGetprcProviders", resultCode, resultMessage);
        }
    
        public virtual ObjectResult<prcSpcGetprcProvidersByCategory_Result> prcSpcGetprcProvidersByCategory(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> orgClass, string ctgCode, Nullable<int> ctgIsActive, Nullable<int> ocaSchema)
        {
            var orgClassParameter = orgClass.HasValue ?
                new ObjectParameter("orgClass", orgClass) :
                new ObjectParameter("orgClass", typeof(int));
    
            var ctgCodeParameter = ctgCode != null ?
                new ObjectParameter("ctgCode", ctgCode) :
                new ObjectParameter("ctgCode", typeof(string));
    
            var ctgIsActiveParameter = ctgIsActive.HasValue ?
                new ObjectParameter("ctgIsActive", ctgIsActive) :
                new ObjectParameter("ctgIsActive", typeof(int));
    
            var ocaSchemaParameter = ocaSchema.HasValue ?
                new ObjectParameter("ocaSchema", ocaSchema) :
                new ObjectParameter("ocaSchema", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcProvidersByCategory_Result>("prcSpcGetprcProvidersByCategory", resultCode, resultMessage, orgClassParameter, ctgCodeParameter, ctgIsActiveParameter, ocaSchemaParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcProvSelected_Result> prcSpcGetprcProvSelected(ObjectParameter resultCode, ObjectParameter resultMessage, string rbhCode, string orgCode, string usrCode)
        {
            var rbhCodeParameter = rbhCode != null ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(string));
    
            var orgCodeParameter = orgCode != null ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(string));
    
            var usrCodeParameter = usrCode != null ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcProvSelected_Result>("prcSpcGetprcProvSelected", resultCode, resultMessage, rbhCodeParameter, orgCodeParameter, usrCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcREQItemsByCode_Result> prcSpcGetprcREQItemsByCode(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> reqCode)
        {
            var reqCodeParameter = reqCode.HasValue ?
                new ObjectParameter("reqCode", reqCode) :
                new ObjectParameter("reqCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcREQItemsByCode_Result>("prcSpcGetprcREQItemsByCode", resultCode, resultMessage, reqCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcREQRequisition_Result> prcSpcGetprcREQRequisition(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> reqCode)
        {
            var reqCodeParameter = reqCode.HasValue ?
                new ObjectParameter("reqCode", reqCode) :
                new ObjectParameter("reqCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcREQRequisition_Result>("prcSpcGetprcREQRequisition", resultCode, resultMessage, reqCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBApproval_Result> prcSpcGetprcRFBApproval(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rapRFBCode)
        {
            var rapRFBCodeParameter = rapRFBCode.HasValue ?
                new ObjectParameter("rapRFBCode", rapRFBCode) :
                new ObjectParameter("rapRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBApproval_Result>("prcSpcGetprcRFBApproval", resultCode, resultMessage, rapRFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBApprovalComplete_Result> prcSpcGetprcRFBApprovalComplete(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rapRFBCode)
        {
            var rapRFBCodeParameter = rapRFBCode.HasValue ?
                new ObjectParameter("rapRFBCode", rapRFBCode) :
                new ObjectParameter("rapRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBApprovalComplete_Result>("prcSpcGetprcRFBApprovalComplete", resultCode, resultMessage, rapRFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBAprovTRStatus_Result> prcSpcGetprcRFBAprovTRStatus(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbhCode)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBAprovTRStatus_Result>("prcSpcGetprcRFBAprovTRStatus", resultCode, resultMessage, rbhCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBAwardCriteria_Result> prcSpcGetprcRFBAwardCriteria(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbaID)
        {
            var rbaIDParameter = rbaID.HasValue ?
                new ObjectParameter("rbaID", rbaID) :
                new ObjectParameter("rbaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBAwardCriteria_Result>("prcSpcGetprcRFBAwardCriteria", resultCode, resultMessage, rbaIDParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBAwardCriteriaByRFB_Result> prcSpcGetprcRFBAwardCriteriaByRFB(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rfbCode)
        {
            var rfbCodeParameter = rfbCode.HasValue ?
                new ObjectParameter("rfbCode", rfbCode) :
                new ObjectParameter("rfbCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBAwardCriteriaByRFB_Result>("prcSpcGetprcRFBAwardCriteriaByRFB", resultCode, resultMessage, rfbCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBAwardPRECriteriaByRFB_Result> prcSpcGetprcRFBAwardPRECriteriaByRFB(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rfbCode)
        {
            var rfbCodeParameter = rfbCode.HasValue ?
                new ObjectParameter("rfbCode", rfbCode) :
                new ObjectParameter("rfbCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBAwardPRECriteriaByRFB_Result>("prcSpcGetprcRFBAwardPRECriteriaByRFB", resultCode, resultMessage, rfbCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBByExternalCode_Result> prcSpcGetprcRFBByExternalCode(ObjectParameter resultCode, ObjectParameter resultMessage, string rbhExternalCode)
        {
            var rbhExternalCodeParameter = rbhExternalCode != null ?
                new ObjectParameter("rbhExternalCode", rbhExternalCode) :
                new ObjectParameter("rbhExternalCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBByExternalCode_Result>("prcSpcGetprcRFBByExternalCode", resultCode, resultMessage, rbhExternalCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBByExternalCodeAndOrganization_Result> prcSpcGetprcRFBByExternalCodeAndOrganization(string rbhExternalCode, string usrOrg)
        {
            var rbhExternalCodeParameter = rbhExternalCode != null ?
                new ObjectParameter("rbhExternalCode", rbhExternalCode) :
                new ObjectParameter("rbhExternalCode", typeof(string));
    
            var usrOrgParameter = usrOrg != null ?
                new ObjectParameter("UsrOrg", usrOrg) :
                new ObjectParameter("UsrOrg", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBByExternalCodeAndOrganization_Result>("prcSpcGetprcRFBByExternalCodeAndOrganization", rbhExternalCodeParameter, usrOrgParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBClause_Result> prcSpcGetprcRFBClause(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<short> rbcSequence, Nullable<int> rbcRFBCode)
        {
            var rbcSequenceParameter = rbcSequence.HasValue ?
                new ObjectParameter("rbcSequence", rbcSequence) :
                new ObjectParameter("rbcSequence", typeof(short));
    
            var rbcRFBCodeParameter = rbcRFBCode.HasValue ?
                new ObjectParameter("rbcRFBCode", rbcRFBCode) :
                new ObjectParameter("rbcRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBClause_Result>("prcSpcGetprcRFBClause", resultCode, resultMessage, rbcSequenceParameter, rbcRFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBComplete_Result> prcSpcGetprcRFBComplete(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbhCode)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBComplete_Result>("prcSpcGetprcRFBComplete", resultCode, resultMessage, rbhCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBContractType_Result> prcSpcGetprcRFBContractType(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rtcPadre)
        {
            var rtcPadreParameter = rtcPadre.HasValue ?
                new ObjectParameter("rtcPadre", rtcPadre) :
                new ObjectParameter("rtcPadre", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBContractType_Result>("prcSpcGetprcRFBContractType", resultCode, resultMessage, rtcPadreParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBContractTypeCategory_Result> prcSpcGetprcRFBContractTypeCategory(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rtcID)
        {
            var rtcIDParameter = rtcID.HasValue ?
                new ObjectParameter("rtcID", rtcID) :
                new ObjectParameter("rtcID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBContractTypeCategory_Result>("prcSpcGetprcRFBContractTypeCategory", resultCode, resultMessage, rtcIDParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBDate_Result> prcSpcGetprcRFBDate(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbdRFBCode)
        {
            var rbdRFBCodeParameter = rbdRFBCode.HasValue ?
                new ObjectParameter("rbdRFBCode", rbdRFBCode) :
                new ObjectParameter("rbdRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBDate_Result>("prcSpcGetprcRFBDate", resultCode, resultMessage, rbdRFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBDateMakeRazonPublish_Result> prcSpcGetprcRFBDateMakeRazonPublish(Nullable<int> rbdRFBCode)
        {
            var rbdRFBCodeParameter = rbdRFBCode.HasValue ?
                new ObjectParameter("rbdRFBCode", rbdRFBCode) :
                new ObjectParameter("rbdRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBDateMakeRazonPublish_Result>("prcSpcGetprcRFBDateMakeRazonPublish", rbdRFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBDateMakeRazonPublishLS_Result> prcSpcGetprcRFBDateMakeRazonPublishLS(Nullable<int> rcsRFBCode)
        {
            var rcsRFBCodeParameter = rcsRFBCode.HasValue ?
                new ObjectParameter("rcsRFBCode", rcsRFBCode) :
                new ObjectParameter("rcsRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBDateMakeRazonPublishLS_Result>("prcSpcGetprcRFBDateMakeRazonPublishLS", rcsRFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBEncuesta_Result> prcSpcGetprcRFBEncuesta(ObjectParameter resultCode, ObjectParameter resultMessage)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBEncuesta_Result>("prcSpcGetprcRFBEncuesta", resultCode, resultMessage);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBEncuestaOpciones_Result> prcSpcGetprcRFBEncuestaOpciones(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> repID)
        {
            var repIDParameter = repID.HasValue ?
                new ObjectParameter("repID", repID) :
                new ObjectParameter("repID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBEncuestaOpciones_Result>("prcSpcGetprcRFBEncuestaOpciones", resultCode, resultMessage, repIDParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBEncuestaPregunta_Result> prcSpcGetprcRFBEncuestaPregunta(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> renID)
        {
            var renIDParameter = renID.HasValue ?
                new ObjectParameter("renID", renID) :
                new ObjectParameter("renID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBEncuestaPregunta_Result>("prcSpcGetprcRFBEncuestaPregunta", resultCode, resultMessage, renIDParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBGuarantee_Result> prcSpcGetprcRFBGuarantee(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<short> rgaSequence, Nullable<int> rgaRFBCode)
        {
            var rgaSequenceParameter = rgaSequence.HasValue ?
                new ObjectParameter("rgaSequence", rgaSequence) :
                new ObjectParameter("rgaSequence", typeof(short));
    
            var rgaRFBCodeParameter = rgaRFBCode.HasValue ?
                new ObjectParameter("rgaRFBCode", rgaRFBCode) :
                new ObjectParameter("rgaRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBGuarantee_Result>("prcSpcGetprcRFBGuarantee", resultCode, resultMessage, rgaSequenceParameter, rgaRFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBGuaranteeBase_Result> prcSpcGetprcRFBGuaranteeBase(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rfbCode)
        {
            var rfbCodeParameter = rfbCode.HasValue ?
                new ObjectParameter("rfbCode", rfbCode) :
                new ObjectParameter("rfbCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBGuaranteeBase_Result>("prcSpcGetprcRFBGuaranteeBase", resultCode, resultMessage, rfbCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBGuaranteeByRFB_Result> prcSpcGetprcRFBGuaranteeByRFB(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rfbCode, Nullable<short> rgaIsBasis)
        {
            var rfbCodeParameter = rfbCode.HasValue ?
                new ObjectParameter("rfbCode", rfbCode) :
                new ObjectParameter("rfbCode", typeof(int));
    
            var rgaIsBasisParameter = rgaIsBasis.HasValue ?
                new ObjectParameter("rgaIsBasis", rgaIsBasis) :
                new ObjectParameter("rgaIsBasis", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBGuaranteeByRFB_Result>("prcSpcGetprcRFBGuaranteeByRFB", resultCode, resultMessage, rfbCodeParameter, rgaIsBasisParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBGuaranteeByRFBBID_Result> prcSpcGetprcRFBGuaranteeByRFBBID(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rfbCode, Nullable<int> rgaBidID, Nullable<short> rgaIsBasis)
        {
            var rfbCodeParameter = rfbCode.HasValue ?
                new ObjectParameter("rfbCode", rfbCode) :
                new ObjectParameter("rfbCode", typeof(int));
    
            var rgaBidIDParameter = rgaBidID.HasValue ?
                new ObjectParameter("rgaBidID", rgaBidID) :
                new ObjectParameter("rgaBidID", typeof(int));
    
            var rgaIsBasisParameter = rgaIsBasis.HasValue ?
                new ObjectParameter("rgaIsBasis", rgaIsBasis) :
                new ObjectParameter("rgaIsBasis", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBGuaranteeByRFBBID_Result>("prcSpcGetprcRFBGuaranteeByRFBBID", resultCode, resultMessage, rfbCodeParameter, rgaBidIDParameter, rgaIsBasisParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBHeader_Result> prcSpcGetprcRFBHeader(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbhCode)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBHeader_Result>("prcSpcGetprcRFBHeader", resultCode, resultMessage, rbhCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBHeaderAndCS_Result> prcSpcGetprcRFBHeaderAndCS(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbhCode)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBHeaderAndCS_Result>("prcSpcGetprcRFBHeaderAndCS", resultCode, resultMessage, rbhCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBHeaderByExternalCode_Result> prcSpcGetprcRFBHeaderByExternalCode(ObjectParameter resultCode, ObjectParameter resultMessage, string rbhExternalCode, string rbhOrganization, Nullable<short> rstType, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var rbhExternalCodeParameter = rbhExternalCode != null ?
                new ObjectParameter("rbhExternalCode", rbhExternalCode) :
                new ObjectParameter("rbhExternalCode", typeof(string));
    
            var rbhOrganizationParameter = rbhOrganization != null ?
                new ObjectParameter("rbhOrganization", rbhOrganization) :
                new ObjectParameter("rbhOrganization", typeof(string));
    
            var rstTypeParameter = rstType.HasValue ?
                new ObjectParameter("rstType", rstType) :
                new ObjectParameter("rstType", typeof(short));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBHeaderByExternalCode_Result>("prcSpcGetprcRFBHeaderByExternalCode", resultCode, resultMessage, rbhExternalCodeParameter, rbhOrganizationParameter, rstTypeParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> prcSpcGetprcRFBHeaderbyItemCheckFromInformation(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbhCode)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("prcSpcGetprcRFBHeaderbyItemCheckFromInformation", resultCode, resultMessage, rbhCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> prcSpcGetprcRFBHeaderbyItemFromInformation(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbhCode)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("prcSpcGetprcRFBHeaderbyItemFromInformation", resultCode, resultMessage, rbhCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBHeaderComplete_Result> prcSpcGetprcRFBHeaderComplete(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbhCode)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBHeaderComplete_Result>("prcSpcGetprcRFBHeaderComplete", resultCode, resultMessage, rbhCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> prcSpcGetprcRFBHeaderTipo(Nullable<int> rbhCode)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("prcSpcGetprcRFBHeaderTipo", rbhCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBItem_Result> prcSpcGetprcRFBItem(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbiID)
        {
            var rbiIDParameter = rbiID.HasValue ?
                new ObjectParameter("rbiID", rbiID) :
                new ObjectParameter("rbiID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBItem_Result>("prcSpcGetprcRFBItem", resultCode, resultMessage, rbiIDParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBItemAdjud_Result> prcSpcGetprcRFBItemAdjud(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbiID)
        {
            var rbiIDParameter = rbiID.HasValue ?
                new ObjectParameter("rbiID", rbiID) :
                new ObjectParameter("rbiID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBItemAdjud_Result>("prcSpcGetprcRFBItemAdjud", resultCode, resultMessage, rbiIDParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBItemAward_Result> prcSpcGetprcRFBItemAward(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbiID)
        {
            var rbiIDParameter = rbiID.HasValue ?
                new ObjectParameter("rbiID", rbiID) :
                new ObjectParameter("rbiID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBItemAward_Result>("prcSpcGetprcRFBItemAward", resultCode, resultMessage, rbiIDParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBItemAwardbyBidItem_Result> prcSpcGetprcRFBItemAwardbyBidItem(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbiID, Nullable<int> rbiRFBCode)
        {
            var rbiIDParameter = rbiID.HasValue ?
                new ObjectParameter("rbiID", rbiID) :
                new ObjectParameter("rbiID", typeof(int));
    
            var rbiRFBCodeParameter = rbiRFBCode.HasValue ?
                new ObjectParameter("rbiRFBCode", rbiRFBCode) :
                new ObjectParameter("rbiRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBItemAwardbyBidItem_Result>("prcSpcGetprcRFBItemAwardbyBidItem", resultCode, resultMessage, rbiIDParameter, rbiRFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBItemAwardedByRFBCode_Result> prcSpcGetprcRFBItemAwardedByRFBCode(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rfbCode)
        {
            var rfbCodeParameter = rfbCode.HasValue ?
                new ObjectParameter("rfbCode", rfbCode) :
                new ObjectParameter("rfbCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBItemAwardedByRFBCode_Result>("prcSpcGetprcRFBItemAwardedByRFBCode", resultCode, resultMessage, rfbCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBItemAwardSelected_Result> prcSpcGetprcRFBItemAwardSelected(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbiID)
        {
            var rbiIDParameter = rbiID.HasValue ?
                new ObjectParameter("rbiID", rbiID) :
                new ObjectParameter("rbiID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBItemAwardSelected_Result>("prcSpcGetprcRFBItemAwardSelected", resultCode, resultMessage, rbiIDParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBItemAwardSelected2_Result> prcSpcGetprcRFBItemAwardSelected2(Nullable<int> rfbCode, string listLineSelected)
        {
            var rfbCodeParameter = rfbCode.HasValue ?
                new ObjectParameter("RfbCode", rfbCode) :
                new ObjectParameter("RfbCode", typeof(int));
    
            var listLineSelectedParameter = listLineSelected != null ?
                new ObjectParameter("ListLineSelected", listLineSelected) :
                new ObjectParameter("ListLineSelected", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBItemAwardSelected2_Result>("prcSpcGetprcRFBItemAwardSelected2", rfbCodeParameter, listLineSelectedParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBItemByRFBCode_Result> prcSpcGetprcRFBItemByRFBCode(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rfbCode)
        {
            var rfbCodeParameter = rfbCode.HasValue ?
                new ObjectParameter("rfbCode", rfbCode) :
                new ObjectParameter("rfbCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBItemByRFBCode_Result>("prcSpcGetprcRFBItemByRFBCode", resultCode, resultMessage, rfbCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBLegalRecord_Result> prcSpcGetprcRFBLegalRecord(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<short> rlrSequence, Nullable<int> rlrRFBCode)
        {
            var rlrSequenceParameter = rlrSequence.HasValue ?
                new ObjectParameter("rlrSequence", rlrSequence) :
                new ObjectParameter("rlrSequence", typeof(short));
    
            var rlrRFBCodeParameter = rlrRFBCode.HasValue ?
                new ObjectParameter("rlrRFBCode", rlrRFBCode) :
                new ObjectParameter("rlrRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBLegalRecord_Result>("prcSpcGetprcRFBLegalRecord", resultCode, resultMessage, rlrSequenceParameter, rlrRFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBLegalRecordByRFB_Result> prcSpcGetprcRFBLegalRecordByRFB(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rlrRFBCode)
        {
            var rlrRFBCodeParameter = rlrRFBCode.HasValue ?
                new ObjectParameter("rlrRFBCode", rlrRFBCode) :
                new ObjectParameter("rlrRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBLegalRecordByRFB_Result>("prcSpcGetprcRFBLegalRecordByRFB", resultCode, resultMessage, rlrRFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBOrganization_Result> prcSpcGetprcRFBOrganization(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbvRFBCode)
        {
            var rbvRFBCodeParameter = rbvRFBCode.HasValue ?
                new ObjectParameter("rbvRFBCode", rbvRFBCode) :
                new ObjectParameter("rbvRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBOrganization_Result>("prcSpcGetprcRFBOrganization", resultCode, resultMessage, rbvRFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBProcessSubType_Result> prcSpcGetprcRFBProcessSubType(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rpsCode)
        {
            var rpsCodeParameter = rpsCode.HasValue ?
                new ObjectParameter("rpsCode", rpsCode) :
                new ObjectParameter("rpsCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBProcessSubType_Result>("prcSpcGetprcRFBProcessSubType", resultCode, resultMessage, rpsCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBProcessType_Result> prcSpcGetprcRFBProcessType(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rptCode)
        {
            var rptCodeParameter = rptCode.HasValue ?
                new ObjectParameter("rptCode", rptCode) :
                new ObjectParameter("rptCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBProcessType_Result>("prcSpcGetprcRFBProcessType", resultCode, resultMessage, rptCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBRequisite_Result> prcSpcGetprcRFBRequisite(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbrID)
        {
            var rbrIDParameter = rbrID.HasValue ?
                new ObjectParameter("rbrID", rbrID) :
                new ObjectParameter("rbrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBRequisite_Result>("prcSpcGetprcRFBRequisite", resultCode, resultMessage, rbrIDParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBRequisiteByRFB_Result> prcSpcGetprcRFBRequisiteByRFB(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rfbCode)
        {
            var rfbCodeParameter = rfbCode.HasValue ?
                new ObjectParameter("rfbCode", rfbCode) :
                new ObjectParameter("rfbCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBRequisiteByRFB_Result>("prcSpcGetprcRFBRequisiteByRFB", resultCode, resultMessage, rfbCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBSummary_Result> prcSpcGetprcRFBSummary(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbhCode)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBSummary_Result>("prcSpcGetprcRFBSummary", resultCode, resultMessage, rbhCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBVersion_Result> prcSpcGetprcRFBVersion(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<short> rbvVersion, Nullable<int> rbvRFBCode)
        {
            var rbvVersionParameter = rbvVersion.HasValue ?
                new ObjectParameter("rbvVersion", rbvVersion) :
                new ObjectParameter("rbvVersion", typeof(short));
    
            var rbvRFBCodeParameter = rbvRFBCode.HasValue ?
                new ObjectParameter("rbvRFBCode", rbvRFBCode) :
                new ObjectParameter("rbvRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBVersion_Result>("prcSpcGetprcRFBVersion", resultCode, resultMessage, rbvVersionParameter, rbvRFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBVersionByRFBCode_Result> prcSpcGetprcRFBVersionByRFBCode(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbvRFBCode, Nullable<short> rstType)
        {
            var rbvRFBCodeParameter = rbvRFBCode.HasValue ?
                new ObjectParameter("rbvRFBCode", rbvRFBCode) :
                new ObjectParameter("rbvRFBCode", typeof(int));
    
            var rstTypeParameter = rstType.HasValue ?
                new ObjectParameter("rstType", rstType) :
                new ObjectParameter("rstType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBVersionByRFBCode_Result>("prcSpcGetprcRFBVersionByRFBCode", resultCode, resultMessage, rbvRFBCodeParameter, rstTypeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcRFBVersionByRFBCodeDetail_Result> prcSpcGetprcRFBVersionByRFBCodeDetail(Nullable<int> rbvRFBCode, Nullable<short> rstType)
        {
            var rbvRFBCodeParameter = rbvRFBCode.HasValue ?
                new ObjectParameter("rbvRFBCode", rbvRFBCode) :
                new ObjectParameter("rbvRFBCode", typeof(int));
    
            var rstTypeParameter = rstType.HasValue ?
                new ObjectParameter("rstType", rstType) :
                new ObjectParameter("rstType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcRFBVersionByRFBCodeDetail_Result>("prcSpcGetprcRFBVersionByRFBCodeDetail", rbvRFBCodeParameter, rstTypeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcSections_Result> prcSpcGetprcSections(ObjectParameter resultCode, ObjectParameter resultMessage, string strCode)
        {
            var strCodeParameter = strCode != null ?
                new ObjectParameter("strCode", strCode) :
                new ObjectParameter("strCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcSections_Result>("prcSpcGetprcSections", resultCode, resultMessage, strCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcSectionsGoodAndService_Result> prcSpcGetprcSectionsGoodAndService(ObjectParameter resultCode, ObjectParameter resultMessage, string strSectionID)
        {
            var strSectionIDParameter = strSectionID != null ?
                new ObjectParameter("strSectionID", strSectionID) :
                new ObjectParameter("strSectionID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcSectionsGoodAndService_Result>("prcSpcGetprcSectionsGoodAndService", resultCode, resultMessage, strSectionIDParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcSectionsGoodAndServicebyIdCategory_Result> prcSpcGetprcSectionsGoodAndServicebyIdCategory(ObjectParameter resultCode, ObjectParameter resultMessage, string strSectionID)
        {
            var strSectionIDParameter = strSectionID != null ?
                new ObjectParameter("strSectionID", strSectionID) :
                new ObjectParameter("strSectionID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcSectionsGoodAndServicebyIdCategory_Result>("prcSpcGetprcSectionsGoodAndServicebyIdCategory", resultCode, resultMessage, strSectionIDParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcSectionsGoodAndServicebySectionID_Result> prcSpcGetprcSectionsGoodAndServicebySectionID(ObjectParameter resultCode, ObjectParameter resultMessage, string strSectionID)
        {
            var strSectionIDParameter = strSectionID != null ?
                new ObjectParameter("strSectionID", strSectionID) :
                new ObjectParameter("strSectionID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcSectionsGoodAndServicebySectionID_Result>("prcSpcGetprcSectionsGoodAndServicebySectionID", resultCode, resultMessage, strSectionIDParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcSectionsGoodAndServiceRNP_Result> prcSpcGetprcSectionsGoodAndServiceRNP(ObjectParameter resultCode, ObjectParameter resultMessage, string strSectionID)
        {
            var strSectionIDParameter = strSectionID != null ?
                new ObjectParameter("strSectionID", strSectionID) :
                new ObjectParameter("strSectionID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcSectionsGoodAndServiceRNP_Result>("prcSpcGetprcSectionsGoodAndServiceRNP", resultCode, resultMessage, strSectionIDParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcSectionsMiniAdmin_Result> prcSpcGetprcSectionsMiniAdmin(ObjectParameter resultCode, ObjectParameter resultMessage, string strGoodandService, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var strGoodandServiceParameter = strGoodandService != null ?
                new ObjectParameter("strGoodandService", strGoodandService) :
                new ObjectParameter("strGoodandService", typeof(string));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcSectionsMiniAdmin_Result>("prcSpcGetprcSectionsMiniAdmin", resultCode, resultMessage, strGoodandServiceParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcVerificatipoAutorizacion_Result> prcSpcGetprcVerificatipoAutorizacion(Nullable<int> rbhCode, Nullable<int> orgCode, Nullable<int> usrCode)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            var orgCodeParameter = orgCode.HasValue ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(int));
    
            var usrCodeParameter = usrCode.HasValue ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcVerificatipoAutorizacion_Result>("prcSpcGetprcVerificatipoAutorizacion", rbhCodeParameter, orgCodeParameter, usrCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcVerificatipoAutorizacionII_Result> prcSpcGetprcVerificatipoAutorizacionII(Nullable<int> rbhCode, Nullable<int> orgCode, Nullable<int> usrCode, Nullable<int> bidID)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            var orgCodeParameter = orgCode.HasValue ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(int));
    
            var usrCodeParameter = usrCode.HasValue ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(int));
    
            var bidIDParameter = bidID.HasValue ?
                new ObjectParameter("bidID", bidID) :
                new ObjectParameter("bidID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcVerificatipoAutorizacionII_Result>("prcSpcGetprcVerificatipoAutorizacionII", rbhCodeParameter, orgCodeParameter, usrCodeParameter, bidIDParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcVerificatipoAutorizacionIII_Result> prcSpcGetprcVerificatipoAutorizacionIII(Nullable<int> rbhCode, Nullable<int> bidID)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            var bidIDParameter = bidID.HasValue ?
                new ObjectParameter("bidID", bidID) :
                new ObjectParameter("bidID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcVerificatipoAutorizacionIII_Result>("prcSpcGetprcVerificatipoAutorizacionIII", rbhCodeParameter, bidIDParameter);
        }
    
        public virtual ObjectResult<prcSpcGetprcXMLDataBD_Result> prcSpcGetprcXMLDataBD(ObjectParameter resultCode, ObjectParameter resultMessage, string orgCode, string ectName)
        {
            var orgCodeParameter = orgCode != null ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(string));
    
            var ectNameParameter = ectName != null ?
                new ObjectParameter("ectName", ectName) :
                new ObjectParameter("ectName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetprcXMLDataBD_Result>("prcSpcGetprcXMLDataBD", resultCode, resultMessage, orgCodeParameter, ectNameParameter);
        }
    
        public virtual ObjectResult<prcSpcGetProviderInfo_Result> prcSpcGetProviderInfo(ObjectParameter resultCode, ObjectParameter resultMessage, string orgCode)
        {
            var orgCodeParameter = orgCode != null ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetProviderInfo_Result>("prcSpcGetProviderInfo", resultCode, resultMessage, orgCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetProviderInfoByTaxID_Result> prcSpcGetProviderInfoByTaxID(ObjectParameter resultCode, ObjectParameter resultMessage, string orgTaxID)
        {
            var orgTaxIDParameter = orgTaxID != null ?
                new ObjectParameter("orgTaxID", orgTaxID) :
                new ObjectParameter("orgTaxID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetProviderInfoByTaxID_Result>("prcSpcGetProviderInfoByTaxID", resultCode, resultMessage, orgTaxIDParameter);
        }
    
        public virtual ObjectResult<prcSpcGetProvidersLicity_Result> prcSpcGetProvidersLicity(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rFBCode)
        {
            var rFBCodeParameter = rFBCode.HasValue ?
                new ObjectParameter("RFBCode", rFBCode) :
                new ObjectParameter("RFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetProvidersLicity_Result>("prcSpcGetProvidersLicity", resultCode, resultMessage, rFBCodeParameter);
        }
    
        public virtual int prcSpcGetPurchaseBook(string bilId, ObjectParameter resultMessage)
        {
            var bilIdParameter = bilId != null ?
                new ObjectParameter("bilId", bilId) :
                new ObjectParameter("bilId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcGetPurchaseBook", bilIdParameter, resultMessage);
        }
    
        public virtual ObjectResult<Nullable<int>> prcSpcGetRbhSteps(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbhCode)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("prcSpcGetRbhSteps", resultCode, resultMessage, rbhCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetRecipientInvoice_Result> prcSpcGetRecipientInvoice(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> porCode)
        {
            var porCodeParameter = porCode.HasValue ?
                new ObjectParameter("porCode", porCode) :
                new ObjectParameter("porCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetRecipientInvoice_Result>("prcSpcGetRecipientInvoice", resultCode, resultMessage, porCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetRFBHeaderDataByExternalCode_Result> prcSpcGetRFBHeaderDataByExternalCode(ObjectParameter resultCode, ObjectParameter resultMessage, string rbhExternalCode)
        {
            var rbhExternalCodeParameter = rbhExternalCode != null ?
                new ObjectParameter("rbhExternalCode", rbhExternalCode) :
                new ObjectParameter("rbhExternalCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetRFBHeaderDataByExternalCode_Result>("prcSpcGetRFBHeaderDataByExternalCode", resultCode, resultMessage, rbhExternalCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetRFBItemAward_Result> prcSpcGetRFBItemAward(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbiID, Nullable<int> rbiRFBCode)
        {
            var rbiIDParameter = rbiID.HasValue ?
                new ObjectParameter("rbiID", rbiID) :
                new ObjectParameter("rbiID", typeof(int));
    
            var rbiRFBCodeParameter = rbiRFBCode.HasValue ?
                new ObjectParameter("rbiRFBCode", rbiRFBCode) :
                new ObjectParameter("rbiRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetRFBItemAward_Result>("prcSpcGetRFBItemAward", resultCode, resultMessage, rbiIDParameter, rbiRFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetSesionDataWSIntegracion_Result> prcSpcGetSesionDataWSIntegracion(ObjectParameter resultCode, ObjectParameter resultMessage, string ticketID)
        {
            var ticketIDParameter = ticketID != null ?
                new ObjectParameter("TicketID", ticketID) :
                new ObjectParameter("TicketID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetSesionDataWSIntegracion_Result>("prcSpcGetSesionDataWSIntegracion", resultCode, resultMessage, ticketIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> prcSpcGetStatusOC(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> porCode)
        {
            var porCodeParameter = porCode.HasValue ?
                new ObjectParameter("porCode", porCode) :
                new ObjectParameter("porCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("prcSpcGetStatusOC", resultCode, resultMessage, porCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcGetUserUnitInfo_Result> prcSpcGetUserUnitInfo(ObjectParameter resultCode, ObjectParameter resultMessage, string porCode)
        {
            var porCodeParameter = porCode != null ?
                new ObjectParameter("porCode", porCode) :
                new ObjectParameter("porCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcGetUserUnitInfo_Result>("prcSpcGetUserUnitInfo", resultCode, resultMessage, porCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> prcSpcGuardarAntecedente(ObjectParameter resultCode, Nullable<int> rbrID, string rbrTitle, Nullable<int> rbrRequisiteType, Nullable<int> rbrRFBCode, string rbrComment, Nullable<int> rbrSequence, Nullable<int> rbrSourceID)
        {
            var rbrIDParameter = rbrID.HasValue ?
                new ObjectParameter("rbrID", rbrID) :
                new ObjectParameter("rbrID", typeof(int));
    
            var rbrTitleParameter = rbrTitle != null ?
                new ObjectParameter("rbrTitle", rbrTitle) :
                new ObjectParameter("rbrTitle", typeof(string));
    
            var rbrRequisiteTypeParameter = rbrRequisiteType.HasValue ?
                new ObjectParameter("rbrRequisiteType", rbrRequisiteType) :
                new ObjectParameter("rbrRequisiteType", typeof(int));
    
            var rbrRFBCodeParameter = rbrRFBCode.HasValue ?
                new ObjectParameter("rbrRFBCode", rbrRFBCode) :
                new ObjectParameter("rbrRFBCode", typeof(int));
    
            var rbrCommentParameter = rbrComment != null ?
                new ObjectParameter("rbrComment", rbrComment) :
                new ObjectParameter("rbrComment", typeof(string));
    
            var rbrSequenceParameter = rbrSequence.HasValue ?
                new ObjectParameter("rbrSequence", rbrSequence) :
                new ObjectParameter("rbrSequence", typeof(int));
    
            var rbrSourceIDParameter = rbrSourceID.HasValue ?
                new ObjectParameter("rbrSourceID", rbrSourceID) :
                new ObjectParameter("rbrSourceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("prcSpcGuardarAntecedente", resultCode, rbrIDParameter, rbrTitleParameter, rbrRequisiteTypeParameter, rbrRFBCodeParameter, rbrCommentParameter, rbrSequenceParameter, rbrSourceIDParameter);
        }
    
        public virtual int prcSpcGuardarAntecedenteAdjunto(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbrID, Nullable<int> rbrRFBCode, string rbrAttachCode, Nullable<int> rbrRequisiteType)
        {
            var rbrIDParameter = rbrID.HasValue ?
                new ObjectParameter("rbrID", rbrID) :
                new ObjectParameter("rbrID", typeof(int));
    
            var rbrRFBCodeParameter = rbrRFBCode.HasValue ?
                new ObjectParameter("rbrRFBCode", rbrRFBCode) :
                new ObjectParameter("rbrRFBCode", typeof(int));
    
            var rbrAttachCodeParameter = rbrAttachCode != null ?
                new ObjectParameter("rbrAttachCode", rbrAttachCode) :
                new ObjectParameter("rbrAttachCode", typeof(string));
    
            var rbrRequisiteTypeParameter = rbrRequisiteType.HasValue ?
                new ObjectParameter("rbrRequisiteType", rbrRequisiteType) :
                new ObjectParameter("rbrRequisiteType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcGuardarAntecedenteAdjunto", resultCode, resultMessage, rbrIDParameter, rbrRFBCodeParameter, rbrAttachCodeParameter, rbrRequisiteTypeParameter);
        }
    
        public virtual int prcSpcGuardarRequisitoLegal(Nullable<int> rlrSourceID, Nullable<int> rlrRFBCode, Nullable<int> rlrLegalRecordType, Nullable<short> rlrSequence, Nullable<int> rlrLegalRecordValue, string rlrLegalRecordName, string rlrLegalRecordMotivo, Nullable<bool> rlrLegalRecordDefault)
        {
            var rlrSourceIDParameter = rlrSourceID.HasValue ?
                new ObjectParameter("rlrSourceID", rlrSourceID) :
                new ObjectParameter("rlrSourceID", typeof(int));
    
            var rlrRFBCodeParameter = rlrRFBCode.HasValue ?
                new ObjectParameter("rlrRFBCode", rlrRFBCode) :
                new ObjectParameter("rlrRFBCode", typeof(int));
    
            var rlrLegalRecordTypeParameter = rlrLegalRecordType.HasValue ?
                new ObjectParameter("rlrLegalRecordType", rlrLegalRecordType) :
                new ObjectParameter("rlrLegalRecordType", typeof(int));
    
            var rlrSequenceParameter = rlrSequence.HasValue ?
                new ObjectParameter("rlrSequence", rlrSequence) :
                new ObjectParameter("rlrSequence", typeof(short));
    
            var rlrLegalRecordValueParameter = rlrLegalRecordValue.HasValue ?
                new ObjectParameter("rlrLegalRecordValue", rlrLegalRecordValue) :
                new ObjectParameter("rlrLegalRecordValue", typeof(int));
    
            var rlrLegalRecordNameParameter = rlrLegalRecordName != null ?
                new ObjectParameter("rlrLegalRecordName", rlrLegalRecordName) :
                new ObjectParameter("rlrLegalRecordName", typeof(string));
    
            var rlrLegalRecordMotivoParameter = rlrLegalRecordMotivo != null ?
                new ObjectParameter("rlrLegalRecordMotivo", rlrLegalRecordMotivo) :
                new ObjectParameter("rlrLegalRecordMotivo", typeof(string));
    
            var rlrLegalRecordDefaultParameter = rlrLegalRecordDefault.HasValue ?
                new ObjectParameter("rlrLegalRecordDefault", rlrLegalRecordDefault) :
                new ObjectParameter("rlrLegalRecordDefault", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcGuardarRequisitoLegal", rlrSourceIDParameter, rlrRFBCodeParameter, rlrLegalRecordTypeParameter, rlrSequenceParameter, rlrLegalRecordValueParameter, rlrLegalRecordNameParameter, rlrLegalRecordMotivoParameter, rlrLegalRecordDefaultParameter);
        }
    
        public virtual int prcSpcInsertCerrarNegociar(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, Nullable<int> rbhCode, Nullable<int> bidID, Nullable<int> orgCode, Nullable<int> usrCode, Nullable<int> intRanking)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            var bidIDParameter = bidID.HasValue ?
                new ObjectParameter("bidID", bidID) :
                new ObjectParameter("bidID", typeof(int));
    
            var orgCodeParameter = orgCode.HasValue ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(int));
    
            var usrCodeParameter = usrCode.HasValue ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(int));
    
            var intRankingParameter = intRanking.HasValue ?
                new ObjectParameter("intRanking", intRanking) :
                new ObjectParameter("intRanking", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcInsertCerrarNegociar", resultCode, resultMessage, resultID, rbhCodeParameter, bidIDParameter, orgCodeParameter, usrCodeParameter, intRankingParameter);
        }
    
        public virtual int prcSpcInsertprcRFBAprovTRtoHeader(ObjectParameter resultCode, ObjectParameter resultMessage, string userCode, Nullable<int> rbhCode, string observTR)
        {
            var userCodeParameter = userCode != null ?
                new ObjectParameter("userCode", userCode) :
                new ObjectParameter("userCode", typeof(string));
    
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            var observTRParameter = observTR != null ?
                new ObjectParameter("ObservTR", observTR) :
                new ObjectParameter("ObservTR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcInsertprcRFBAprovTRtoHeader", resultCode, resultMessage, userCodeParameter, rbhCodeParameter, observTRParameter);
        }
    
        public virtual int prcSpcInsertPreguntaForoCS(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, Nullable<int> rbhCode, Nullable<int> bidID, Nullable<int> orgCode, Nullable<int> usrCode, string descripcion)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            var bidIDParameter = bidID.HasValue ?
                new ObjectParameter("bidID", bidID) :
                new ObjectParameter("bidID", typeof(int));
    
            var orgCodeParameter = orgCode.HasValue ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(int));
    
            var usrCodeParameter = usrCode.HasValue ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcInsertPreguntaForoCS", resultCode, resultMessage, resultID, rbhCodeParameter, bidIDParameter, orgCodeParameter, usrCodeParameter, descripcionParameter);
        }
    
        public virtual int prcSpcInsertRankingCS(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, Nullable<int> bidID, Nullable<int> rFBCode, Nullable<int> orgCode, Nullable<int> usrCode, Nullable<int> idCriterio, string criterioName, Nullable<int> porcentaje, Nullable<double> valorNota)
        {
            var bidIDParameter = bidID.HasValue ?
                new ObjectParameter("bidID", bidID) :
                new ObjectParameter("bidID", typeof(int));
    
            var rFBCodeParameter = rFBCode.HasValue ?
                new ObjectParameter("RFBCode", rFBCode) :
                new ObjectParameter("RFBCode", typeof(int));
    
            var orgCodeParameter = orgCode.HasValue ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(int));
    
            var usrCodeParameter = usrCode.HasValue ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(int));
    
            var idCriterioParameter = idCriterio.HasValue ?
                new ObjectParameter("IdCriterio", idCriterio) :
                new ObjectParameter("IdCriterio", typeof(int));
    
            var criterioNameParameter = criterioName != null ?
                new ObjectParameter("criterioName", criterioName) :
                new ObjectParameter("criterioName", typeof(string));
    
            var porcentajeParameter = porcentaje.HasValue ?
                new ObjectParameter("Porcentaje", porcentaje) :
                new ObjectParameter("Porcentaje", typeof(int));
    
            var valorNotaParameter = valorNota.HasValue ?
                new ObjectParameter("ValorNota", valorNota) :
                new ObjectParameter("ValorNota", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcInsertRankingCS", resultCode, resultMessage, resultID, bidIDParameter, rFBCodeParameter, orgCodeParameter, usrCodeParameter, idCriterioParameter, criterioNameParameter, porcentajeParameter, valorNotaParameter);
        }
    
        public virtual int prcSpcInsertRankingCSII(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, Nullable<int> rbhCode, Nullable<int> bidID, Nullable<int> orgCode, Nullable<int> usrCode, Nullable<int> intRanking)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            var bidIDParameter = bidID.HasValue ?
                new ObjectParameter("bidID", bidID) :
                new ObjectParameter("bidID", typeof(int));
    
            var orgCodeParameter = orgCode.HasValue ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(int));
    
            var usrCodeParameter = usrCode.HasValue ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(int));
    
            var intRankingParameter = intRanking.HasValue ?
                new ObjectParameter("intRanking", intRanking) :
                new ObjectParameter("intRanking", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcInsertRankingCSII", resultCode, resultMessage, resultID, rbhCodeParameter, bidIDParameter, orgCodeParameter, usrCodeParameter, intRankingParameter);
        }
    
        public virtual int prcSpcInsertRegistroForoCS(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, Nullable<int> rbhCode, Nullable<int> bidID, Nullable<int> orgCode, Nullable<int> usrCode)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            var bidIDParameter = bidID.HasValue ?
                new ObjectParameter("bidID", bidID) :
                new ObjectParameter("bidID", typeof(int));
    
            var orgCodeParameter = orgCode.HasValue ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(int));
    
            var usrCodeParameter = usrCode.HasValue ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcInsertRegistroForoCS", resultCode, resultMessage, resultID, rbhCodeParameter, bidIDParameter, orgCodeParameter, usrCodeParameter);
        }
    
        public virtual int prcSpcInsertRespuestaForoCS(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultID, Nullable<int> rbhCode, Nullable<int> bidID, Nullable<int> orgCode, Nullable<int> usrCode, string descripcion, Nullable<int> rspID)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            var bidIDParameter = bidID.HasValue ?
                new ObjectParameter("bidID", bidID) :
                new ObjectParameter("bidID", typeof(int));
    
            var orgCodeParameter = orgCode.HasValue ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(int));
    
            var usrCodeParameter = usrCode.HasValue ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var rspIDParameter = rspID.HasValue ?
                new ObjectParameter("rspID", rspID) :
                new ObjectParameter("rspID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcInsertRespuestaForoCS", resultCode, resultMessage, resultID, rbhCodeParameter, bidIDParameter, orgCodeParameter, usrCodeParameter, descripcionParameter, rspIDParameter);
        }
    
        public virtual ObjectResult<prcSpcLoadDTEProviderToExcel_Result> prcSpcLoadDTEProviderToExcel(string bilId)
        {
            var bilIdParameter = bilId != null ?
                new ObjectParameter("bilId", bilId) :
                new ObjectParameter("bilId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcLoadDTEProviderToExcel_Result>("prcSpcLoadDTEProviderToExcel", bilIdParameter);
        }
    
        public virtual ObjectResult<prcSpcLoadDTEToExcel_Result> prcSpcLoadDTEToExcel(string bilId)
        {
            var bilIdParameter = bilId != null ?
                new ObjectParameter("bilId", bilId) :
                new ObjectParameter("bilId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcLoadDTEToExcel_Result>("prcSpcLoadDTEToExcel", bilIdParameter);
        }
    
        public virtual ObjectResult<string> prcSpcLoadMasiveDTE(string bilNumber, string bilId, ObjectParameter resultMessage)
        {
            var bilNumberParameter = bilNumber != null ?
                new ObjectParameter("bilNumber", bilNumber) :
                new ObjectParameter("bilNumber", typeof(string));
    
            var bilIdParameter = bilId != null ?
                new ObjectParameter("bilId", bilId) :
                new ObjectParameter("bilId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("prcSpcLoadMasiveDTE", bilNumberParameter, bilIdParameter, resultMessage);
        }
    
        public virtual ObjectResult<prcSpcMostrarAntecedente_Result> prcSpcMostrarAntecedente(Nullable<int> rbrRFBCode)
        {
            var rbrRFBCodeParameter = rbrRFBCode.HasValue ?
                new ObjectParameter("rbrRFBCode", rbrRFBCode) :
                new ObjectParameter("rbrRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcMostrarAntecedente_Result>("prcSpcMostrarAntecedente", rbrRFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcMostrarCriteriosEvaluacion_Result> prcSpcMostrarCriteriosEvaluacion(Nullable<int> rbaRFBCode)
        {
            var rbaRFBCodeParameter = rbaRFBCode.HasValue ?
                new ObjectParameter("rbaRFBCode", rbaRFBCode) :
                new ObjectParameter("rbaRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcMostrarCriteriosEvaluacion_Result>("prcSpcMostrarCriteriosEvaluacion", rbaRFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcMostrarDocumentoLegal_Result> prcSpcMostrarDocumentoLegal(Nullable<int> rlrRFBCode)
        {
            var rlrRFBCodeParameter = rlrRFBCode.HasValue ?
                new ObjectParameter("rlrRFBCode", rlrRFBCode) :
                new ObjectParameter("rlrRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcMostrarDocumentoLegal_Result>("prcSpcMostrarDocumentoLegal", rlrRFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcMostrarFechasUsuario_Result> prcSpcMostrarFechasUsuario(Nullable<int> rudRFBCode)
        {
            var rudRFBCodeParameter = rudRFBCode.HasValue ?
                new ObjectParameter("rudRFBCode", rudRFBCode) :
                new ObjectParameter("rudRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcMostrarFechasUsuario_Result>("prcSpcMostrarFechasUsuario", rudRFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcMostrarGarantias_Result> prcSpcMostrarGarantias(Nullable<int> rgaRFBCode)
        {
            var rgaRFBCodeParameter = rgaRFBCode.HasValue ?
                new ObjectParameter("rgaRFBCode", rgaRFBCode) :
                new ObjectParameter("rgaRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcMostrarGarantias_Result>("prcSpcMostrarGarantias", rgaRFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcMostrarLicitacionOrganismo_Result> prcSpcMostrarLicitacionOrganismo(Nullable<int> entCode)
        {
            var entCodeParameter = entCode.HasValue ?
                new ObjectParameter("entCode", entCode) :
                new ObjectParameter("entCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcMostrarLicitacionOrganismo_Result>("prcSpcMostrarLicitacionOrganismo", entCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcMostrarProductos_Result> prcSpcMostrarProductos(Nullable<int> rbhCode)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcMostrarProductos_Result>("prcSpcMostrarProductos", rbhCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcMostrarRegistradoCHP_Result> prcSpcMostrarRegistradoCHP(Nullable<int> rlrRFBCode)
        {
            var rlrRFBCodeParameter = rlrRFBCode.HasValue ?
                new ObjectParameter("rlrRFBCode", rlrRFBCode) :
                new ObjectParameter("rlrRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcMostrarRegistradoCHP_Result>("prcSpcMostrarRegistradoCHP", rlrRFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcMostrarRequerimientosTecnicos_Result> prcSpcMostrarRequerimientosTecnicos(Nullable<int> rbcRFBCode)
        {
            var rbcRFBCodeParameter = rbcRFBCode.HasValue ?
                new ObjectParameter("rbcRFBCode", rbcRFBCode) :
                new ObjectParameter("rbcRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcMostrarRequerimientosTecnicos_Result>("prcSpcMostrarRequerimientosTecnicos", rbcRFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcMostrarRequisitoContratar_Result> prcSpcMostrarRequisitoContratar(Nullable<int> rlrRFBCode)
        {
            var rlrRFBCodeParameter = rlrRFBCode.HasValue ?
                new ObjectParameter("rlrRFBCode", rlrRFBCode) :
                new ObjectParameter("rlrRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcMostrarRequisitoContratar_Result>("prcSpcMostrarRequisitoContratar", rlrRFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcObtenerAdjunto_Result> prcSpcObtenerAdjunto(ObjectParameter resultCode, ObjectParameter resultMessage, string rbrAttachCode)
        {
            var rbrAttachCodeParameter = rbrAttachCode != null ?
                new ObjectParameter("rbrAttachCode", rbrAttachCode) :
                new ObjectParameter("rbrAttachCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcObtenerAdjunto_Result>("prcSpcObtenerAdjunto", resultCode, resultMessage, rbrAttachCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcObtenerAntecedente_Result> prcSpcObtenerAntecedente(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbrID, Nullable<int> rbrRequisiteType, Nullable<int> rbrRFBCode)
        {
            var rbrIDParameter = rbrID.HasValue ?
                new ObjectParameter("rbrID", rbrID) :
                new ObjectParameter("rbrID", typeof(int));
    
            var rbrRequisiteTypeParameter = rbrRequisiteType.HasValue ?
                new ObjectParameter("rbrRequisiteType", rbrRequisiteType) :
                new ObjectParameter("rbrRequisiteType", typeof(int));
    
            var rbrRFBCodeParameter = rbrRFBCode.HasValue ?
                new ObjectParameter("rbrRFBCode", rbrRFBCode) :
                new ObjectParameter("rbrRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcObtenerAntecedente_Result>("prcSpcObtenerAntecedente", resultCode, resultMessage, rbrIDParameter, rbrRequisiteTypeParameter, rbrRFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcObtenerAntecedenteAdjunto_Result> prcSpcObtenerAntecedenteAdjunto(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbrID, Nullable<int> rbrRFBCode, Nullable<int> rbrRequisiteType, Nullable<int> documentType, Nullable<int> documentSubType)
        {
            var rbrIDParameter = rbrID.HasValue ?
                new ObjectParameter("rbrID", rbrID) :
                new ObjectParameter("rbrID", typeof(int));
    
            var rbrRFBCodeParameter = rbrRFBCode.HasValue ?
                new ObjectParameter("rbrRFBCode", rbrRFBCode) :
                new ObjectParameter("rbrRFBCode", typeof(int));
    
            var rbrRequisiteTypeParameter = rbrRequisiteType.HasValue ?
                new ObjectParameter("rbrRequisiteType", rbrRequisiteType) :
                new ObjectParameter("rbrRequisiteType", typeof(int));
    
            var documentTypeParameter = documentType.HasValue ?
                new ObjectParameter("DocumentType", documentType) :
                new ObjectParameter("DocumentType", typeof(int));
    
            var documentSubTypeParameter = documentSubType.HasValue ?
                new ObjectParameter("DocumentSubType", documentSubType) :
                new ObjectParameter("DocumentSubType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcObtenerAntecedenteAdjunto_Result>("prcSpcObtenerAntecedenteAdjunto", resultCode, resultMessage, rbrIDParameter, rbrRFBCodeParameter, rbrRequisiteTypeParameter, documentTypeParameter, documentSubTypeParameter);
        }
    
        public virtual ObjectResult<prcSpcObtenerAntecedenteJuridica_Result> prcSpcObtenerAntecedenteJuridica(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbrRequisiteType)
        {
            var rbrRequisiteTypeParameter = rbrRequisiteType.HasValue ?
                new ObjectParameter("rbrRequisiteType", rbrRequisiteType) :
                new ObjectParameter("rbrRequisiteType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcObtenerAntecedenteJuridica_Result>("prcSpcObtenerAntecedenteJuridica", resultCode, resultMessage, rbrRequisiteTypeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> prcSpcObtenerCantidadOfertas(Nullable<int> codigoLicitacion)
        {
            var codigoLicitacionParameter = codigoLicitacion.HasValue ?
                new ObjectParameter("CodigoLicitacion", codigoLicitacion) :
                new ObjectParameter("CodigoLicitacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("prcSpcObtenerCantidadOfertas", codigoLicitacionParameter);
        }
    
        public virtual ObjectResult<prcSpcObtenerDocumentoLegal_Result> prcSpcObtenerDocumentoLegal(Nullable<int> rlrRFBCode, Nullable<int> rlrLegalRecordType, Nullable<bool> rlrLegalRecordAdded)
        {
            var rlrRFBCodeParameter = rlrRFBCode.HasValue ?
                new ObjectParameter("rlrRFBCode", rlrRFBCode) :
                new ObjectParameter("rlrRFBCode", typeof(int));
    
            var rlrLegalRecordTypeParameter = rlrLegalRecordType.HasValue ?
                new ObjectParameter("rlrLegalRecordType", rlrLegalRecordType) :
                new ObjectParameter("rlrLegalRecordType", typeof(int));
    
            var rlrLegalRecordAddedParameter = rlrLegalRecordAdded.HasValue ?
                new ObjectParameter("rlrLegalRecordAdded", rlrLegalRecordAdded) :
                new ObjectParameter("rlrLegalRecordAdded", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcObtenerDocumentoLegal_Result>("prcSpcObtenerDocumentoLegal", rlrRFBCodeParameter, rlrLegalRecordTypeParameter, rlrLegalRecordAddedParameter);
        }
    
        public virtual ObjectResult<prcSpcObtenerFechasLS_Result> prcSpcObtenerFechasLS(Nullable<int> codigoLicitacion)
        {
            var codigoLicitacionParameter = codigoLicitacion.HasValue ?
                new ObjectParameter("codigoLicitacion", codigoLicitacion) :
                new ObjectParameter("codigoLicitacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcObtenerFechasLS_Result>("prcSpcObtenerFechasLS", codigoLicitacionParameter);
        }
    
        public virtual ObjectResult<prcSpcObtenerInformacionLicitacion_Result> prcSpcObtenerInformacionLicitacion(Nullable<int> codigoLicitacion)
        {
            var codigoLicitacionParameter = codigoLicitacion.HasValue ?
                new ObjectParameter("codigoLicitacion", codigoLicitacion) :
                new ObjectParameter("codigoLicitacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcObtenerInformacionLicitacion_Result>("prcSpcObtenerInformacionLicitacion", codigoLicitacionParameter);
        }
    
        public virtual ObjectResult<prcSpcObtenerObservacion_Result> prcSpcObtenerObservacion(Nullable<int> rlrRFBCode)
        {
            var rlrRFBCodeParameter = rlrRFBCode.HasValue ?
                new ObjectParameter("rlrRFBCode", rlrRFBCode) :
                new ObjectParameter("rlrRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcObtenerObservacion_Result>("prcSpcObtenerObservacion", rlrRFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcObtenerRequisito_Result> prcSpcObtenerRequisito(Nullable<int> rlrRFBCode)
        {
            var rlrRFBCodeParameter = rlrRFBCode.HasValue ?
                new ObjectParameter("rlrRFBCode", rlrRFBCode) :
                new ObjectParameter("rlrRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcObtenerRequisito_Result>("prcSpcObtenerRequisito", rlrRFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcObtenerRequisitoContratar_Result> prcSpcObtenerRequisitoContratar(Nullable<int> rlrRFBCode, Nullable<int> rlrLegalRecordType, Nullable<int> rlrSourceID)
        {
            var rlrRFBCodeParameter = rlrRFBCode.HasValue ?
                new ObjectParameter("rlrRFBCode", rlrRFBCode) :
                new ObjectParameter("rlrRFBCode", typeof(int));
    
            var rlrLegalRecordTypeParameter = rlrLegalRecordType.HasValue ?
                new ObjectParameter("rlrLegalRecordType", rlrLegalRecordType) :
                new ObjectParameter("rlrLegalRecordType", typeof(int));
    
            var rlrSourceIDParameter = rlrSourceID.HasValue ?
                new ObjectParameter("rlrSourceID", rlrSourceID) :
                new ObjectParameter("rlrSourceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcObtenerRequisitoContratar_Result>("prcSpcObtenerRequisitoContratar", rlrRFBCodeParameter, rlrLegalRecordTypeParameter, rlrSourceIDParameter);
        }
    
        public virtual ObjectResult<string> prcSpcProveedorSiParticipo(ObjectParameter resultCode, ObjectParameter resultMessage, string rbhCode, string orgCode, string usrCode)
        {
            var rbhCodeParameter = rbhCode != null ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(string));
    
            var orgCodeParameter = orgCode != null ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(string));
    
            var usrCodeParameter = usrCode != null ?
                new ObjectParameter("usrCode", usrCode) :
                new ObjectParameter("usrCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("prcSpcProveedorSiParticipo", resultCode, resultMessage, rbhCodeParameter, orgCodeParameter, usrCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcPublicSearchprcPOHeaderByCode_Result> prcSpcPublicSearchprcPOHeaderByCode(ObjectParameter resultCode, ObjectParameter resultMessage, string porCode, Nullable<int> porOrgClassLog, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var porCodeParameter = porCode != null ?
                new ObjectParameter("porCode", porCode) :
                new ObjectParameter("porCode", typeof(string));
    
            var porOrgClassLogParameter = porOrgClassLog.HasValue ?
                new ObjectParameter("porOrgClassLog", porOrgClassLog) :
                new ObjectParameter("porOrgClassLog", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcPublicSearchprcPOHeaderByCode_Result>("prcSpcPublicSearchprcPOHeaderByCode", resultCode, resultMessage, porCodeParameter, porOrgClassLogParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcPublishAdministrativePrecedend_Result> prcSpcPublishAdministrativePrecedend(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbhCode)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcPublishAdministrativePrecedend_Result>("prcSpcPublishAdministrativePrecedend", resultCode, resultMessage, rbhCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcPublishApproval_Result> prcSpcPublishApproval(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rapRFBCode)
        {
            var rapRFBCodeParameter = rapRFBCode.HasValue ?
                new ObjectParameter("rapRFBCode", rapRFBCode) :
                new ObjectParameter("rapRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcPublishApproval_Result>("prcSpcPublishApproval", resultCode, resultMessage, rapRFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcPublishAwardApproval_Result> prcSpcPublishAwardApproval(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rapRFBCode, Nullable<int> rapApprovalStep)
        {
            var rapRFBCodeParameter = rapRFBCode.HasValue ?
                new ObjectParameter("rapRFBCode", rapRFBCode) :
                new ObjectParameter("rapRFBCode", typeof(int));
    
            var rapApprovalStepParameter = rapApprovalStep.HasValue ?
                new ObjectParameter("rapApprovalStep", rapApprovalStep) :
                new ObjectParameter("rapApprovalStep", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcPublishAwardApproval_Result>("prcSpcPublishAwardApproval", resultCode, resultMessage, rapRFBCodeParameter, rapApprovalStepParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> prcSpcPublishAwardCriteria(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbaRFBCode)
        {
            var rbaRFBCodeParameter = rbaRFBCode.HasValue ?
                new ObjectParameter("rbaRFBCode", rbaRFBCode) :
                new ObjectParameter("rbaRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("prcSpcPublishAwardCriteria", resultCode, resultMessage, rbaRFBCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> prcSpcPublishAwardCriteriaCS(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbaRFBCode)
        {
            var rbaRFBCodeParameter = rbaRFBCode.HasValue ?
                new ObjectParameter("rbaRFBCode", rbaRFBCode) :
                new ObjectParameter("rbaRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("prcSpcPublishAwardCriteriaCS", resultCode, resultMessage, rbaRFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcPublishDate_Result> prcSpcPublishDate(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbdRFBCode)
        {
            var rbdRFBCodeParameter = rbdRFBCode.HasValue ?
                new ObjectParameter("rbdRFBCode", rbdRFBCode) :
                new ObjectParameter("rbdRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcPublishDate_Result>("prcSpcPublishDate", resultCode, resultMessage, rbdRFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcPublishDefineContract_Result> prcSpcPublishDefineContract(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbhCode)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcPublishDefineContract_Result>("prcSpcPublishDefineContract", resultCode, resultMessage, rbhCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcPublishDemandingOrganization_Result> prcSpcPublishDemandingOrganization(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbhCode)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcPublishDemandingOrganization_Result>("prcSpcPublishDemandingOrganization", resultCode, resultMessage, rbhCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcPublishGuarantee_Result> prcSpcPublishGuarantee(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rgaRFBCode)
        {
            var rgaRFBCodeParameter = rgaRFBCode.HasValue ?
                new ObjectParameter("rgaRFBCode", rgaRFBCode) :
                new ObjectParameter("rgaRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcPublishGuarantee_Result>("prcSpcPublishGuarantee", resultCode, resultMessage, rgaRFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcPublishInvitation_Result> prcSpcPublishInvitation(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbhCode)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcPublishInvitation_Result>("prcSpcPublishInvitation", resultCode, resultMessage, rbhCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcPublishLegalRecords_Result> prcSpcPublishLegalRecords(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rlrRFBCode)
        {
            var rlrRFBCodeParameter = rlrRFBCode.HasValue ?
                new ObjectParameter("rlrRFBCode", rlrRFBCode) :
                new ObjectParameter("rlrRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcPublishLegalRecords_Result>("prcSpcPublishLegalRecords", resultCode, resultMessage, rlrRFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcPublishRequirement_Result> prcSpcPublishRequirement(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbrCode)
        {
            var rbrCodeParameter = rbrCode.HasValue ?
                new ObjectParameter("rbrCode", rbrCode) :
                new ObjectParameter("rbrCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcPublishRequirement_Result>("prcSpcPublishRequirement", resultCode, resultMessage, rbrCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadAllprcRFBStatus_Result> prcSpcReadAllprcRFBStatus(Nullable<short> rstType)
        {
            var rstTypeParameter = rstType.HasValue ?
                new ObjectParameter("rstType", rstType) :
                new ObjectParameter("rstType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadAllprcRFBStatus_Result>("prcSpcReadAllprcRFBStatus", rstTypeParameter);
        }
    
        public virtual int prcSpcReadAnswer(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rFBCode)
        {
            var rFBCodeParameter = rFBCode.HasValue ?
                new ObjectParameter("RFBCode", rFBCode) :
                new ObjectParameter("RFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcReadAnswer", resultCode, resultMessage, rFBCodeParameter);
        }
    
        public virtual int prcSpcReadAnswerByRswID(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rswID)
        {
            var rswIDParameter = rswID.HasValue ?
                new ObjectParameter("rswID", rswID) :
                new ObjectParameter("rswID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcReadAnswerByRswID", resultCode, resultMessage, rswIDParameter);
        }
    
        public virtual ObjectResult<prcSpcReadAttachment_Result> prcSpcReadAttachment(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbhCode, Nullable<int> actDocumentType)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            var actDocumentTypeParameter = actDocumentType.HasValue ?
                new ObjectParameter("actDocumentType", actDocumentType) :
                new ObjectParameter("actDocumentType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadAttachment_Result>("prcSpcReadAttachment", resultCode, resultMessage, rbhCodeParameter, actDocumentTypeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadAwardedBids_Result> prcSpcReadAwardedBids(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rFBCode, Nullable<int> documentStatus, Nullable<int> technicalStatus, Nullable<int> economicStatus, Nullable<int> administrativeAttachmentTypeCode, Nullable<int> economicAttachmentTypeCode, Nullable<int> technicalAttachmentTypeCode, Nullable<int> administrativeAttachmentSubTypeCode, Nullable<int> economicAttachmentSubTypeCode, Nullable<int> technicalAttachmentSubTypeCode)
        {
            var rFBCodeParameter = rFBCode.HasValue ?
                new ObjectParameter("RFBCode", rFBCode) :
                new ObjectParameter("RFBCode", typeof(int));
    
            var documentStatusParameter = documentStatus.HasValue ?
                new ObjectParameter("DocumentStatus", documentStatus) :
                new ObjectParameter("DocumentStatus", typeof(int));
    
            var technicalStatusParameter = technicalStatus.HasValue ?
                new ObjectParameter("TechnicalStatus", technicalStatus) :
                new ObjectParameter("TechnicalStatus", typeof(int));
    
            var economicStatusParameter = economicStatus.HasValue ?
                new ObjectParameter("EconomicStatus", economicStatus) :
                new ObjectParameter("EconomicStatus", typeof(int));
    
            var administrativeAttachmentTypeCodeParameter = administrativeAttachmentTypeCode.HasValue ?
                new ObjectParameter("AdministrativeAttachmentTypeCode", administrativeAttachmentTypeCode) :
                new ObjectParameter("AdministrativeAttachmentTypeCode", typeof(int));
    
            var economicAttachmentTypeCodeParameter = economicAttachmentTypeCode.HasValue ?
                new ObjectParameter("EconomicAttachmentTypeCode", economicAttachmentTypeCode) :
                new ObjectParameter("EconomicAttachmentTypeCode", typeof(int));
    
            var technicalAttachmentTypeCodeParameter = technicalAttachmentTypeCode.HasValue ?
                new ObjectParameter("TechnicalAttachmentTypeCode", technicalAttachmentTypeCode) :
                new ObjectParameter("TechnicalAttachmentTypeCode", typeof(int));
    
            var administrativeAttachmentSubTypeCodeParameter = administrativeAttachmentSubTypeCode.HasValue ?
                new ObjectParameter("AdministrativeAttachmentSubTypeCode", administrativeAttachmentSubTypeCode) :
                new ObjectParameter("AdministrativeAttachmentSubTypeCode", typeof(int));
    
            var economicAttachmentSubTypeCodeParameter = economicAttachmentSubTypeCode.HasValue ?
                new ObjectParameter("EconomicAttachmentSubTypeCode", economicAttachmentSubTypeCode) :
                new ObjectParameter("EconomicAttachmentSubTypeCode", typeof(int));
    
            var technicalAttachmentSubTypeCodeParameter = technicalAttachmentSubTypeCode.HasValue ?
                new ObjectParameter("TechnicalAttachmentSubTypeCode", technicalAttachmentSubTypeCode) :
                new ObjectParameter("TechnicalAttachmentSubTypeCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadAwardedBids_Result>("prcSpcReadAwardedBids", resultCode, resultMessage, rFBCodeParameter, documentStatusParameter, technicalStatusParameter, economicStatusParameter, administrativeAttachmentTypeCodeParameter, economicAttachmentTypeCodeParameter, technicalAttachmentTypeCodeParameter, administrativeAttachmentSubTypeCodeParameter, economicAttachmentSubTypeCodeParameter, technicalAttachmentSubTypeCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadAwardedBidsEconomic_Result> prcSpcReadAwardedBidsEconomic(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rFBCode, Nullable<int> documentStatus, Nullable<int> technicalStatus, Nullable<int> economicStatus, Nullable<int> administrativeAttachmentTypeCode, Nullable<int> economicAttachmentTypeCode, Nullable<int> technicalAttachmentTypeCode, Nullable<int> administrativeAttachmentSubTypeCode, Nullable<int> economicAttachmentSubTypeCode, Nullable<int> technicalAttachmentSubTypeCode)
        {
            var rFBCodeParameter = rFBCode.HasValue ?
                new ObjectParameter("RFBCode", rFBCode) :
                new ObjectParameter("RFBCode", typeof(int));
    
            var documentStatusParameter = documentStatus.HasValue ?
                new ObjectParameter("DocumentStatus", documentStatus) :
                new ObjectParameter("DocumentStatus", typeof(int));
    
            var technicalStatusParameter = technicalStatus.HasValue ?
                new ObjectParameter("TechnicalStatus", technicalStatus) :
                new ObjectParameter("TechnicalStatus", typeof(int));
    
            var economicStatusParameter = economicStatus.HasValue ?
                new ObjectParameter("EconomicStatus", economicStatus) :
                new ObjectParameter("EconomicStatus", typeof(int));
    
            var administrativeAttachmentTypeCodeParameter = administrativeAttachmentTypeCode.HasValue ?
                new ObjectParameter("AdministrativeAttachmentTypeCode", administrativeAttachmentTypeCode) :
                new ObjectParameter("AdministrativeAttachmentTypeCode", typeof(int));
    
            var economicAttachmentTypeCodeParameter = economicAttachmentTypeCode.HasValue ?
                new ObjectParameter("EconomicAttachmentTypeCode", economicAttachmentTypeCode) :
                new ObjectParameter("EconomicAttachmentTypeCode", typeof(int));
    
            var technicalAttachmentTypeCodeParameter = technicalAttachmentTypeCode.HasValue ?
                new ObjectParameter("TechnicalAttachmentTypeCode", technicalAttachmentTypeCode) :
                new ObjectParameter("TechnicalAttachmentTypeCode", typeof(int));
    
            var administrativeAttachmentSubTypeCodeParameter = administrativeAttachmentSubTypeCode.HasValue ?
                new ObjectParameter("AdministrativeAttachmentSubTypeCode", administrativeAttachmentSubTypeCode) :
                new ObjectParameter("AdministrativeAttachmentSubTypeCode", typeof(int));
    
            var economicAttachmentSubTypeCodeParameter = economicAttachmentSubTypeCode.HasValue ?
                new ObjectParameter("EconomicAttachmentSubTypeCode", economicAttachmentSubTypeCode) :
                new ObjectParameter("EconomicAttachmentSubTypeCode", typeof(int));
    
            var technicalAttachmentSubTypeCodeParameter = technicalAttachmentSubTypeCode.HasValue ?
                new ObjectParameter("TechnicalAttachmentSubTypeCode", technicalAttachmentSubTypeCode) :
                new ObjectParameter("TechnicalAttachmentSubTypeCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadAwardedBidsEconomic_Result>("prcSpcReadAwardedBidsEconomic", resultCode, resultMessage, rFBCodeParameter, documentStatusParameter, technicalStatusParameter, economicStatusParameter, administrativeAttachmentTypeCodeParameter, economicAttachmentTypeCodeParameter, technicalAttachmentTypeCodeParameter, administrativeAttachmentSubTypeCodeParameter, economicAttachmentSubTypeCodeParameter, technicalAttachmentSubTypeCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadBid_QuestionAndAnswer_Result> prcSpcReadBid_QuestionAndAnswer(Nullable<int> bidRFBCode)
        {
            var bidRFBCodeParameter = bidRFBCode.HasValue ?
                new ObjectParameter("bidRFBCode", bidRFBCode) :
                new ObjectParameter("bidRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadBid_QuestionAndAnswer_Result>("prcSpcReadBid_QuestionAndAnswer", bidRFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadBidItems_Result> prcSpcReadBidItems(Nullable<int> rFBCode, Nullable<int> administrativeAttachmentTypeCode, Nullable<int> economicAttachmentTypeCode, Nullable<int> technicalAttachmentTypeCode, Nullable<int> administrativeAttachmentSubTypeCode, Nullable<int> economicAttachmentSubTypeCode, Nullable<int> technicalAttachmentSubTypeCode)
        {
            var rFBCodeParameter = rFBCode.HasValue ?
                new ObjectParameter("RFBCode", rFBCode) :
                new ObjectParameter("RFBCode", typeof(int));
    
            var administrativeAttachmentTypeCodeParameter = administrativeAttachmentTypeCode.HasValue ?
                new ObjectParameter("AdministrativeAttachmentTypeCode", administrativeAttachmentTypeCode) :
                new ObjectParameter("AdministrativeAttachmentTypeCode", typeof(int));
    
            var economicAttachmentTypeCodeParameter = economicAttachmentTypeCode.HasValue ?
                new ObjectParameter("EconomicAttachmentTypeCode", economicAttachmentTypeCode) :
                new ObjectParameter("EconomicAttachmentTypeCode", typeof(int));
    
            var technicalAttachmentTypeCodeParameter = technicalAttachmentTypeCode.HasValue ?
                new ObjectParameter("TechnicalAttachmentTypeCode", technicalAttachmentTypeCode) :
                new ObjectParameter("TechnicalAttachmentTypeCode", typeof(int));
    
            var administrativeAttachmentSubTypeCodeParameter = administrativeAttachmentSubTypeCode.HasValue ?
                new ObjectParameter("AdministrativeAttachmentSubTypeCode", administrativeAttachmentSubTypeCode) :
                new ObjectParameter("AdministrativeAttachmentSubTypeCode", typeof(int));
    
            var economicAttachmentSubTypeCodeParameter = economicAttachmentSubTypeCode.HasValue ?
                new ObjectParameter("EconomicAttachmentSubTypeCode", economicAttachmentSubTypeCode) :
                new ObjectParameter("EconomicAttachmentSubTypeCode", typeof(int));
    
            var technicalAttachmentSubTypeCodeParameter = technicalAttachmentSubTypeCode.HasValue ?
                new ObjectParameter("TechnicalAttachmentSubTypeCode", technicalAttachmentSubTypeCode) :
                new ObjectParameter("TechnicalAttachmentSubTypeCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadBidItems_Result>("prcSpcReadBidItems", rFBCodeParameter, administrativeAttachmentTypeCodeParameter, economicAttachmentTypeCodeParameter, technicalAttachmentTypeCodeParameter, administrativeAttachmentSubTypeCodeParameter, economicAttachmentSubTypeCodeParameter, technicalAttachmentSubTypeCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadBidItems_Explanation_Result> prcSpcReadBidItems_Explanation(Nullable<int> rFBCode)
        {
            var rFBCodeParameter = rFBCode.HasValue ?
                new ObjectParameter("RFBCode", rFBCode) :
                new ObjectParameter("RFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadBidItems_Explanation_Result>("prcSpcReadBidItems_Explanation", rFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadBidItems_OpeningAdministrative_Result> prcSpcReadBidItems_OpeningAdministrative(Nullable<int> rFBCode, Nullable<int> administrativeAttachmentTypeCode, Nullable<int> economicAttachmentTypeCode, Nullable<int> technicalAttachmentTypeCode, Nullable<int> administrativeAttachmentSubTypeCode, Nullable<int> economicAttachmentSubTypeCode, Nullable<int> technicalAttachmentSubTypeCode)
        {
            var rFBCodeParameter = rFBCode.HasValue ?
                new ObjectParameter("RFBCode", rFBCode) :
                new ObjectParameter("RFBCode", typeof(int));
    
            var administrativeAttachmentTypeCodeParameter = administrativeAttachmentTypeCode.HasValue ?
                new ObjectParameter("AdministrativeAttachmentTypeCode", administrativeAttachmentTypeCode) :
                new ObjectParameter("AdministrativeAttachmentTypeCode", typeof(int));
    
            var economicAttachmentTypeCodeParameter = economicAttachmentTypeCode.HasValue ?
                new ObjectParameter("EconomicAttachmentTypeCode", economicAttachmentTypeCode) :
                new ObjectParameter("EconomicAttachmentTypeCode", typeof(int));
    
            var technicalAttachmentTypeCodeParameter = technicalAttachmentTypeCode.HasValue ?
                new ObjectParameter("TechnicalAttachmentTypeCode", technicalAttachmentTypeCode) :
                new ObjectParameter("TechnicalAttachmentTypeCode", typeof(int));
    
            var administrativeAttachmentSubTypeCodeParameter = administrativeAttachmentSubTypeCode.HasValue ?
                new ObjectParameter("AdministrativeAttachmentSubTypeCode", administrativeAttachmentSubTypeCode) :
                new ObjectParameter("AdministrativeAttachmentSubTypeCode", typeof(int));
    
            var economicAttachmentSubTypeCodeParameter = economicAttachmentSubTypeCode.HasValue ?
                new ObjectParameter("EconomicAttachmentSubTypeCode", economicAttachmentSubTypeCode) :
                new ObjectParameter("EconomicAttachmentSubTypeCode", typeof(int));
    
            var technicalAttachmentSubTypeCodeParameter = technicalAttachmentSubTypeCode.HasValue ?
                new ObjectParameter("TechnicalAttachmentSubTypeCode", technicalAttachmentSubTypeCode) :
                new ObjectParameter("TechnicalAttachmentSubTypeCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadBidItems_OpeningAdministrative_Result>("prcSpcReadBidItems_OpeningAdministrative", rFBCodeParameter, administrativeAttachmentTypeCodeParameter, economicAttachmentTypeCodeParameter, technicalAttachmentTypeCodeParameter, administrativeAttachmentSubTypeCodeParameter, economicAttachmentSubTypeCodeParameter, technicalAttachmentSubTypeCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadBidItems_OpeningEconomic_Result> prcSpcReadBidItems_OpeningEconomic(Nullable<int> rFBCode, Nullable<int> administrativeAttachmentTypeCode, Nullable<int> economicAttachmentTypeCode, Nullable<int> technicalAttachmentTypeCode, Nullable<int> administrativeAttachmentSubTypeCode, Nullable<int> economicAttachmentSubTypeCode, Nullable<int> technicalAttachmentSubTypeCode)
        {
            var rFBCodeParameter = rFBCode.HasValue ?
                new ObjectParameter("RFBCode", rFBCode) :
                new ObjectParameter("RFBCode", typeof(int));
    
            var administrativeAttachmentTypeCodeParameter = administrativeAttachmentTypeCode.HasValue ?
                new ObjectParameter("AdministrativeAttachmentTypeCode", administrativeAttachmentTypeCode) :
                new ObjectParameter("AdministrativeAttachmentTypeCode", typeof(int));
    
            var economicAttachmentTypeCodeParameter = economicAttachmentTypeCode.HasValue ?
                new ObjectParameter("EconomicAttachmentTypeCode", economicAttachmentTypeCode) :
                new ObjectParameter("EconomicAttachmentTypeCode", typeof(int));
    
            var technicalAttachmentTypeCodeParameter = technicalAttachmentTypeCode.HasValue ?
                new ObjectParameter("TechnicalAttachmentTypeCode", technicalAttachmentTypeCode) :
                new ObjectParameter("TechnicalAttachmentTypeCode", typeof(int));
    
            var administrativeAttachmentSubTypeCodeParameter = administrativeAttachmentSubTypeCode.HasValue ?
                new ObjectParameter("AdministrativeAttachmentSubTypeCode", administrativeAttachmentSubTypeCode) :
                new ObjectParameter("AdministrativeAttachmentSubTypeCode", typeof(int));
    
            var economicAttachmentSubTypeCodeParameter = economicAttachmentSubTypeCode.HasValue ?
                new ObjectParameter("EconomicAttachmentSubTypeCode", economicAttachmentSubTypeCode) :
                new ObjectParameter("EconomicAttachmentSubTypeCode", typeof(int));
    
            var technicalAttachmentSubTypeCodeParameter = technicalAttachmentSubTypeCode.HasValue ?
                new ObjectParameter("TechnicalAttachmentSubTypeCode", technicalAttachmentSubTypeCode) :
                new ObjectParameter("TechnicalAttachmentSubTypeCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadBidItems_OpeningEconomic_Result>("prcSpcReadBidItems_OpeningEconomic", rFBCodeParameter, administrativeAttachmentTypeCodeParameter, economicAttachmentTypeCodeParameter, technicalAttachmentTypeCodeParameter, administrativeAttachmentSubTypeCodeParameter, economicAttachmentSubTypeCodeParameter, technicalAttachmentSubTypeCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadBidItemsAttachment_Result> prcSpcReadBidItemsAttachment(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rFBCode, Nullable<int> administrativeAttachmentTypeCode, Nullable<int> economicAttachmentTypeCode, Nullable<int> technicalAttachmentTypeCode, Nullable<int> administrativeAttachmentSubTypeCode, Nullable<int> economicAttachmentSubTypeCode, Nullable<int> technicalAttachmentSubTypeCode, Nullable<int> bidDocumentStatus, Nullable<int> bidTechnicalStatus, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var rFBCodeParameter = rFBCode.HasValue ?
                new ObjectParameter("RFBCode", rFBCode) :
                new ObjectParameter("RFBCode", typeof(int));
    
            var administrativeAttachmentTypeCodeParameter = administrativeAttachmentTypeCode.HasValue ?
                new ObjectParameter("AdministrativeAttachmentTypeCode", administrativeAttachmentTypeCode) :
                new ObjectParameter("AdministrativeAttachmentTypeCode", typeof(int));
    
            var economicAttachmentTypeCodeParameter = economicAttachmentTypeCode.HasValue ?
                new ObjectParameter("EconomicAttachmentTypeCode", economicAttachmentTypeCode) :
                new ObjectParameter("EconomicAttachmentTypeCode", typeof(int));
    
            var technicalAttachmentTypeCodeParameter = technicalAttachmentTypeCode.HasValue ?
                new ObjectParameter("TechnicalAttachmentTypeCode", technicalAttachmentTypeCode) :
                new ObjectParameter("TechnicalAttachmentTypeCode", typeof(int));
    
            var administrativeAttachmentSubTypeCodeParameter = administrativeAttachmentSubTypeCode.HasValue ?
                new ObjectParameter("AdministrativeAttachmentSubTypeCode", administrativeAttachmentSubTypeCode) :
                new ObjectParameter("AdministrativeAttachmentSubTypeCode", typeof(int));
    
            var economicAttachmentSubTypeCodeParameter = economicAttachmentSubTypeCode.HasValue ?
                new ObjectParameter("EconomicAttachmentSubTypeCode", economicAttachmentSubTypeCode) :
                new ObjectParameter("EconomicAttachmentSubTypeCode", typeof(int));
    
            var technicalAttachmentSubTypeCodeParameter = technicalAttachmentSubTypeCode.HasValue ?
                new ObjectParameter("TechnicalAttachmentSubTypeCode", technicalAttachmentSubTypeCode) :
                new ObjectParameter("TechnicalAttachmentSubTypeCode", typeof(int));
    
            var bidDocumentStatusParameter = bidDocumentStatus.HasValue ?
                new ObjectParameter("bidDocumentStatus", bidDocumentStatus) :
                new ObjectParameter("bidDocumentStatus", typeof(int));
    
            var bidTechnicalStatusParameter = bidTechnicalStatus.HasValue ?
                new ObjectParameter("bidTechnicalStatus", bidTechnicalStatus) :
                new ObjectParameter("bidTechnicalStatus", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadBidItemsAttachment_Result>("prcSpcReadBidItemsAttachment", resultCode, resultMessage, rFBCodeParameter, administrativeAttachmentTypeCodeParameter, economicAttachmentTypeCodeParameter, technicalAttachmentTypeCodeParameter, administrativeAttachmentSubTypeCodeParameter, economicAttachmentSubTypeCodeParameter, technicalAttachmentSubTypeCodeParameter, bidDocumentStatusParameter, bidTechnicalStatusParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual int prcSpcReadCategory(ObjectParameter resultCode, ObjectParameter resultMessage, string content)
        {
            var contentParameter = content != null ?
                new ObjectParameter("content", content) :
                new ObjectParameter("content", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcReadCategory", resultCode, resultMessage, contentParameter);
        }
    
        public virtual ObjectResult<prcSpcReadCMBprcRFBProcessType_Result> prcSpcReadCMBprcRFBProcessType(ObjectParameter resultCode, ObjectParameter resultMessage)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadCMBprcRFBProcessType_Result>("prcSpcReadCMBprcRFBProcessType", resultCode, resultMessage);
        }
    
        public virtual ObjectResult<prcSpcReadCMBprcRFBStatus_Result> prcSpcReadCMBprcRFBStatus(ObjectParameter resultCode, ObjectParameter resultMessage)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadCMBprcRFBStatus_Result>("prcSpcReadCMBprcRFBStatus", resultCode, resultMessage);
        }
    
        public virtual ObjectResult<prcSpcReadCMBprcRFBStatusforOC_Result> prcSpcReadCMBprcRFBStatusforOC(ObjectParameter resultCode, ObjectParameter resultMessage)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadCMBprcRFBStatusforOC_Result>("prcSpcReadCMBprcRFBStatusforOC", resultCode, resultMessage);
        }
    
        public virtual int prcSpcReadCountprcBIDItem(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter recordsCount, string bitSupplierComment, Nullable<double> bitAwardedQuantity, Nullable<short> bitIsSelected, Nullable<short> bitIsLowestPrice, Nullable<double> bitUniqueCurrencyPrice, Nullable<double> bitHomologatedPrice, Nullable<double> bitUnitNetPrice, string bitCurrency, Nullable<double> bitQuantity, Nullable<short> bitIsBidded, Nullable<int> bitItem, Nullable<int> bitBID)
        {
            var bitSupplierCommentParameter = bitSupplierComment != null ?
                new ObjectParameter("bitSupplierComment", bitSupplierComment) :
                new ObjectParameter("bitSupplierComment", typeof(string));
    
            var bitAwardedQuantityParameter = bitAwardedQuantity.HasValue ?
                new ObjectParameter("bitAwardedQuantity", bitAwardedQuantity) :
                new ObjectParameter("bitAwardedQuantity", typeof(double));
    
            var bitIsSelectedParameter = bitIsSelected.HasValue ?
                new ObjectParameter("bitIsSelected", bitIsSelected) :
                new ObjectParameter("bitIsSelected", typeof(short));
    
            var bitIsLowestPriceParameter = bitIsLowestPrice.HasValue ?
                new ObjectParameter("bitIsLowestPrice", bitIsLowestPrice) :
                new ObjectParameter("bitIsLowestPrice", typeof(short));
    
            var bitUniqueCurrencyPriceParameter = bitUniqueCurrencyPrice.HasValue ?
                new ObjectParameter("bitUniqueCurrencyPrice", bitUniqueCurrencyPrice) :
                new ObjectParameter("bitUniqueCurrencyPrice", typeof(double));
    
            var bitHomologatedPriceParameter = bitHomologatedPrice.HasValue ?
                new ObjectParameter("bitHomologatedPrice", bitHomologatedPrice) :
                new ObjectParameter("bitHomologatedPrice", typeof(double));
    
            var bitUnitNetPriceParameter = bitUnitNetPrice.HasValue ?
                new ObjectParameter("bitUnitNetPrice", bitUnitNetPrice) :
                new ObjectParameter("bitUnitNetPrice", typeof(double));
    
            var bitCurrencyParameter = bitCurrency != null ?
                new ObjectParameter("bitCurrency", bitCurrency) :
                new ObjectParameter("bitCurrency", typeof(string));
    
            var bitQuantityParameter = bitQuantity.HasValue ?
                new ObjectParameter("bitQuantity", bitQuantity) :
                new ObjectParameter("bitQuantity", typeof(double));
    
            var bitIsBiddedParameter = bitIsBidded.HasValue ?
                new ObjectParameter("bitIsBidded", bitIsBidded) :
                new ObjectParameter("bitIsBidded", typeof(short));
    
            var bitItemParameter = bitItem.HasValue ?
                new ObjectParameter("bitItem", bitItem) :
                new ObjectParameter("bitItem", typeof(int));
    
            var bitBIDParameter = bitBID.HasValue ?
                new ObjectParameter("bitBID", bitBID) :
                new ObjectParameter("bitBID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcReadCountprcBIDItem", resultCode, resultMessage, recordsCount, bitSupplierCommentParameter, bitAwardedQuantityParameter, bitIsSelectedParameter, bitIsLowestPriceParameter, bitUniqueCurrencyPriceParameter, bitHomologatedPriceParameter, bitUnitNetPriceParameter, bitCurrencyParameter, bitQuantityParameter, bitIsBiddedParameter, bitItemParameter, bitBIDParameter);
        }
    
        public virtual int prcSpcReadCountprcBidItemsAttachment(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter recordsCount, Nullable<int> rFBCode, Nullable<int> bidDocumentStatus, Nullable<int> bidTechnicalStatus)
        {
            var rFBCodeParameter = rFBCode.HasValue ?
                new ObjectParameter("RFBCode", rFBCode) :
                new ObjectParameter("RFBCode", typeof(int));
    
            var bidDocumentStatusParameter = bidDocumentStatus.HasValue ?
                new ObjectParameter("bidDocumentStatus", bidDocumentStatus) :
                new ObjectParameter("bidDocumentStatus", typeof(int));
    
            var bidTechnicalStatusParameter = bidTechnicalStatus.HasValue ?
                new ObjectParameter("bidTechnicalStatus", bidTechnicalStatus) :
                new ObjectParameter("bidTechnicalStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcReadCountprcBidItemsAttachment", resultCode, resultMessage, recordsCount, rFBCodeParameter, bidDocumentStatusParameter, bidTechnicalStatusParameter);
        }
    
        public virtual int prcSpcReadCountprcBIDQuote(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter recordsCount, string bidAwardComment, string bidFinalScore, Nullable<short> bidIsAwarded, string bidEconomicScore, Nullable<short> bidEconomicQualify, Nullable<System.DateTime> bidEconomicIssueDate, Nullable<int> bidEconomicStatus, string bidTechnicalScore, Nullable<short> bidTechnicalQualify, Nullable<System.DateTime> bidTechnicalIssueDate, Nullable<int> bidTechnicalStatus, string bidAdministrativeScore, Nullable<short> bidAdministrativeQualify, Nullable<int> bidDocumentStatus, string bidSupplierReference, string bidDescription, string bidName, string bidUser, Nullable<short> bidCorrelative, string bidOrganization, Nullable<int> bidRFBCode, Nullable<int> bidID)
        {
            var bidAwardCommentParameter = bidAwardComment != null ?
                new ObjectParameter("bidAwardComment", bidAwardComment) :
                new ObjectParameter("bidAwardComment", typeof(string));
    
            var bidFinalScoreParameter = bidFinalScore != null ?
                new ObjectParameter("bidFinalScore", bidFinalScore) :
                new ObjectParameter("bidFinalScore", typeof(string));
    
            var bidIsAwardedParameter = bidIsAwarded.HasValue ?
                new ObjectParameter("bidIsAwarded", bidIsAwarded) :
                new ObjectParameter("bidIsAwarded", typeof(short));
    
            var bidEconomicScoreParameter = bidEconomicScore != null ?
                new ObjectParameter("bidEconomicScore", bidEconomicScore) :
                new ObjectParameter("bidEconomicScore", typeof(string));
    
            var bidEconomicQualifyParameter = bidEconomicQualify.HasValue ?
                new ObjectParameter("bidEconomicQualify", bidEconomicQualify) :
                new ObjectParameter("bidEconomicQualify", typeof(short));
    
            var bidEconomicIssueDateParameter = bidEconomicIssueDate.HasValue ?
                new ObjectParameter("bidEconomicIssueDate", bidEconomicIssueDate) :
                new ObjectParameter("bidEconomicIssueDate", typeof(System.DateTime));
    
            var bidEconomicStatusParameter = bidEconomicStatus.HasValue ?
                new ObjectParameter("bidEconomicStatus", bidEconomicStatus) :
                new ObjectParameter("bidEconomicStatus", typeof(int));
    
            var bidTechnicalScoreParameter = bidTechnicalScore != null ?
                new ObjectParameter("bidTechnicalScore", bidTechnicalScore) :
                new ObjectParameter("bidTechnicalScore", typeof(string));
    
            var bidTechnicalQualifyParameter = bidTechnicalQualify.HasValue ?
                new ObjectParameter("bidTechnicalQualify", bidTechnicalQualify) :
                new ObjectParameter("bidTechnicalQualify", typeof(short));
    
            var bidTechnicalIssueDateParameter = bidTechnicalIssueDate.HasValue ?
                new ObjectParameter("bidTechnicalIssueDate", bidTechnicalIssueDate) :
                new ObjectParameter("bidTechnicalIssueDate", typeof(System.DateTime));
    
            var bidTechnicalStatusParameter = bidTechnicalStatus.HasValue ?
                new ObjectParameter("bidTechnicalStatus", bidTechnicalStatus) :
                new ObjectParameter("bidTechnicalStatus", typeof(int));
    
            var bidAdministrativeScoreParameter = bidAdministrativeScore != null ?
                new ObjectParameter("bidAdministrativeScore", bidAdministrativeScore) :
                new ObjectParameter("bidAdministrativeScore", typeof(string));
    
            var bidAdministrativeQualifyParameter = bidAdministrativeQualify.HasValue ?
                new ObjectParameter("bidAdministrativeQualify", bidAdministrativeQualify) :
                new ObjectParameter("bidAdministrativeQualify", typeof(short));
    
            var bidDocumentStatusParameter = bidDocumentStatus.HasValue ?
                new ObjectParameter("bidDocumentStatus", bidDocumentStatus) :
                new ObjectParameter("bidDocumentStatus", typeof(int));
    
            var bidSupplierReferenceParameter = bidSupplierReference != null ?
                new ObjectParameter("bidSupplierReference", bidSupplierReference) :
                new ObjectParameter("bidSupplierReference", typeof(string));
    
            var bidDescriptionParameter = bidDescription != null ?
                new ObjectParameter("bidDescription", bidDescription) :
                new ObjectParameter("bidDescription", typeof(string));
    
            var bidNameParameter = bidName != null ?
                new ObjectParameter("bidName", bidName) :
                new ObjectParameter("bidName", typeof(string));
    
            var bidUserParameter = bidUser != null ?
                new ObjectParameter("bidUser", bidUser) :
                new ObjectParameter("bidUser", typeof(string));
    
            var bidCorrelativeParameter = bidCorrelative.HasValue ?
                new ObjectParameter("bidCorrelative", bidCorrelative) :
                new ObjectParameter("bidCorrelative", typeof(short));
    
            var bidOrganizationParameter = bidOrganization != null ?
                new ObjectParameter("bidOrganization", bidOrganization) :
                new ObjectParameter("bidOrganization", typeof(string));
    
            var bidRFBCodeParameter = bidRFBCode.HasValue ?
                new ObjectParameter("bidRFBCode", bidRFBCode) :
                new ObjectParameter("bidRFBCode", typeof(int));
    
            var bidIDParameter = bidID.HasValue ?
                new ObjectParameter("bidID", bidID) :
                new ObjectParameter("bidID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcReadCountprcBIDQuote", resultCode, resultMessage, recordsCount, bidAwardCommentParameter, bidFinalScoreParameter, bidIsAwardedParameter, bidEconomicScoreParameter, bidEconomicQualifyParameter, bidEconomicIssueDateParameter, bidEconomicStatusParameter, bidTechnicalScoreParameter, bidTechnicalQualifyParameter, bidTechnicalIssueDateParameter, bidTechnicalStatusParameter, bidAdministrativeScoreParameter, bidAdministrativeQualifyParameter, bidDocumentStatusParameter, bidSupplierReferenceParameter, bidDescriptionParameter, bidNameParameter, bidUserParameter, bidCorrelativeParameter, bidOrganizationParameter, bidRFBCodeParameter, bidIDParameter);
        }
    
        public virtual int prcSpcReadCountprcREQRequisition(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter recordsCount, Nullable<int> reqCode, Nullable<int> reqParentCode, Nullable<System.DateTime> reqCreationDate, string reqName, string reqEnterprise, string reqOrganization, string reqUser, Nullable<int> reqPrivacy)
        {
            var reqCodeParameter = reqCode.HasValue ?
                new ObjectParameter("reqCode", reqCode) :
                new ObjectParameter("reqCode", typeof(int));
    
            var reqParentCodeParameter = reqParentCode.HasValue ?
                new ObjectParameter("reqParentCode", reqParentCode) :
                new ObjectParameter("reqParentCode", typeof(int));
    
            var reqCreationDateParameter = reqCreationDate.HasValue ?
                new ObjectParameter("reqCreationDate", reqCreationDate) :
                new ObjectParameter("reqCreationDate", typeof(System.DateTime));
    
            var reqNameParameter = reqName != null ?
                new ObjectParameter("reqName", reqName) :
                new ObjectParameter("reqName", typeof(string));
    
            var reqEnterpriseParameter = reqEnterprise != null ?
                new ObjectParameter("reqEnterprise", reqEnterprise) :
                new ObjectParameter("reqEnterprise", typeof(string));
    
            var reqOrganizationParameter = reqOrganization != null ?
                new ObjectParameter("reqOrganization", reqOrganization) :
                new ObjectParameter("reqOrganization", typeof(string));
    
            var reqUserParameter = reqUser != null ?
                new ObjectParameter("reqUser", reqUser) :
                new ObjectParameter("reqUser", typeof(string));
    
            var reqPrivacyParameter = reqPrivacy.HasValue ?
                new ObjectParameter("reqPrivacy", reqPrivacy) :
                new ObjectParameter("reqPrivacy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcReadCountprcREQRequisition", resultCode, resultMessage, recordsCount, reqCodeParameter, reqParentCodeParameter, reqCreationDateParameter, reqNameParameter, reqEnterpriseParameter, reqOrganizationParameter, reqUserParameter, reqPrivacyParameter);
        }
    
        public virtual int prcSpcReadCountprcRFBApproval(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter recordsCount, string rapApproverName, Nullable<int> rapApprovalType, Nullable<int> rapRFBCode)
        {
            var rapApproverNameParameter = rapApproverName != null ?
                new ObjectParameter("rapApproverName", rapApproverName) :
                new ObjectParameter("rapApproverName", typeof(string));
    
            var rapApprovalTypeParameter = rapApprovalType.HasValue ?
                new ObjectParameter("rapApprovalType", rapApprovalType) :
                new ObjectParameter("rapApprovalType", typeof(int));
    
            var rapRFBCodeParameter = rapRFBCode.HasValue ?
                new ObjectParameter("rapRFBCode", rapRFBCode) :
                new ObjectParameter("rapRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcReadCountprcRFBApproval", resultCode, resultMessage, recordsCount, rapApproverNameParameter, rapApprovalTypeParameter, rapRFBCodeParameter);
        }
    
        public virtual int prcSpcReadCountprcRFBAwardCriteria(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter recordsCount, Nullable<int> rbaScope, Nullable<int> rbaDataType, string rbaName, Nullable<int> rbaRFBCode, Nullable<int> rbaSourceID)
        {
            var rbaScopeParameter = rbaScope.HasValue ?
                new ObjectParameter("rbaScope", rbaScope) :
                new ObjectParameter("rbaScope", typeof(int));
    
            var rbaDataTypeParameter = rbaDataType.HasValue ?
                new ObjectParameter("rbaDataType", rbaDataType) :
                new ObjectParameter("rbaDataType", typeof(int));
    
            var rbaNameParameter = rbaName != null ?
                new ObjectParameter("rbaName", rbaName) :
                new ObjectParameter("rbaName", typeof(string));
    
            var rbaRFBCodeParameter = rbaRFBCode.HasValue ?
                new ObjectParameter("rbaRFBCode", rbaRFBCode) :
                new ObjectParameter("rbaRFBCode", typeof(int));
    
            var rbaSourceIDParameter = rbaSourceID.HasValue ?
                new ObjectParameter("rbaSourceID", rbaSourceID) :
                new ObjectParameter("rbaSourceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcReadCountprcRFBAwardCriteria", resultCode, resultMessage, recordsCount, rbaScopeParameter, rbaDataTypeParameter, rbaNameParameter, rbaRFBCodeParameter, rbaSourceIDParameter);
        }
    
        public virtual int prcSpcReadCountprcRFBClause(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter recordsCount, string rbcDescription, string rbcTitle, Nullable<short> rbcSequence, Nullable<int> rbcRFBCode)
        {
            var rbcDescriptionParameter = rbcDescription != null ?
                new ObjectParameter("rbcDescription", rbcDescription) :
                new ObjectParameter("rbcDescription", typeof(string));
    
            var rbcTitleParameter = rbcTitle != null ?
                new ObjectParameter("rbcTitle", rbcTitle) :
                new ObjectParameter("rbcTitle", typeof(string));
    
            var rbcSequenceParameter = rbcSequence.HasValue ?
                new ObjectParameter("rbcSequence", rbcSequence) :
                new ObjectParameter("rbcSequence", typeof(short));
    
            var rbcRFBCodeParameter = rbcRFBCode.HasValue ?
                new ObjectParameter("rbcRFBCode", rbcRFBCode) :
                new ObjectParameter("rbcRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcReadCountprcRFBClause", resultCode, resultMessage, recordsCount, rbcDescriptionParameter, rbcTitleParameter, rbcSequenceParameter, rbcRFBCodeParameter);
        }
    
        public virtual int prcSpcReadCountprcRFBDate(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter recordsCount, Nullable<System.DateTime> rbdQuestionPublication, Nullable<System.DateTime> rbdEconomicBidOpening, Nullable<System.DateTime> rbdTechnicalBidOpening, Nullable<System.DateTime> rbdEconomicBidReception, Nullable<System.DateTime> rbdTechnicalBidReception, Nullable<int> rbdRFBCode)
        {
            var rbdQuestionPublicationParameter = rbdQuestionPublication.HasValue ?
                new ObjectParameter("rbdQuestionPublication", rbdQuestionPublication) :
                new ObjectParameter("rbdQuestionPublication", typeof(System.DateTime));
    
            var rbdEconomicBidOpeningParameter = rbdEconomicBidOpening.HasValue ?
                new ObjectParameter("rbdEconomicBidOpening", rbdEconomicBidOpening) :
                new ObjectParameter("rbdEconomicBidOpening", typeof(System.DateTime));
    
            var rbdTechnicalBidOpeningParameter = rbdTechnicalBidOpening.HasValue ?
                new ObjectParameter("rbdTechnicalBidOpening", rbdTechnicalBidOpening) :
                new ObjectParameter("rbdTechnicalBidOpening", typeof(System.DateTime));
    
            var rbdEconomicBidReceptionParameter = rbdEconomicBidReception.HasValue ?
                new ObjectParameter("rbdEconomicBidReception", rbdEconomicBidReception) :
                new ObjectParameter("rbdEconomicBidReception", typeof(System.DateTime));
    
            var rbdTechnicalBidReceptionParameter = rbdTechnicalBidReception.HasValue ?
                new ObjectParameter("rbdTechnicalBidReception", rbdTechnicalBidReception) :
                new ObjectParameter("rbdTechnicalBidReception", typeof(System.DateTime));
    
            var rbdRFBCodeParameter = rbdRFBCode.HasValue ?
                new ObjectParameter("rbdRFBCode", rbdRFBCode) :
                new ObjectParameter("rbdRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcReadCountprcRFBDate", resultCode, resultMessage, recordsCount, rbdQuestionPublicationParameter, rbdEconomicBidOpeningParameter, rbdTechnicalBidOpeningParameter, rbdEconomicBidReceptionParameter, rbdTechnicalBidReceptionParameter, rbdRFBCodeParameter);
        }
    
        public virtual int prcSpcReadCountprcRFBGuarantee(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter recordsCount, string rgaAmountType, Nullable<System.DateTime> rgaExpirationDate, Nullable<int> rgaDocumentType, Nullable<int> rgaGuaranteeType, Nullable<short> rgaSequence, Nullable<int> rgaRFBCode)
        {
            var rgaAmountTypeParameter = rgaAmountType != null ?
                new ObjectParameter("rgaAmountType", rgaAmountType) :
                new ObjectParameter("rgaAmountType", typeof(string));
    
            var rgaExpirationDateParameter = rgaExpirationDate.HasValue ?
                new ObjectParameter("rgaExpirationDate", rgaExpirationDate) :
                new ObjectParameter("rgaExpirationDate", typeof(System.DateTime));
    
            var rgaDocumentTypeParameter = rgaDocumentType.HasValue ?
                new ObjectParameter("rgaDocumentType", rgaDocumentType) :
                new ObjectParameter("rgaDocumentType", typeof(int));
    
            var rgaGuaranteeTypeParameter = rgaGuaranteeType.HasValue ?
                new ObjectParameter("rgaGuaranteeType", rgaGuaranteeType) :
                new ObjectParameter("rgaGuaranteeType", typeof(int));
    
            var rgaSequenceParameter = rgaSequence.HasValue ?
                new ObjectParameter("rgaSequence", rgaSequence) :
                new ObjectParameter("rgaSequence", typeof(short));
    
            var rgaRFBCodeParameter = rgaRFBCode.HasValue ?
                new ObjectParameter("rgaRFBCode", rgaRFBCode) :
                new ObjectParameter("rgaRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcReadCountprcRFBGuarantee", resultCode, resultMessage, recordsCount, rgaAmountTypeParameter, rgaExpirationDateParameter, rgaDocumentTypeParameter, rgaGuaranteeTypeParameter, rgaSequenceParameter, rgaRFBCodeParameter);
        }
    
        public virtual int prcSpcReadCountprcRFBHeader(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter recordsCount, string rbhCurrency, Nullable<int> rbhContactCode, string rbhOwnerOrganizationCode, Nullable<int> rbhProcessSubType, Nullable<int> rbhProcessType, Nullable<int> rbhDocumentSubType, Nullable<int> rbhDocumentType, Nullable<int> rbhTemplate, string rbhUser, string rbhOrganization, string rbhEnterprise, Nullable<System.DateTime> rbhCreationDate, Nullable<short> rbhIsTemplate, Nullable<int> rbhCode)
        {
            var rbhCurrencyParameter = rbhCurrency != null ?
                new ObjectParameter("rbhCurrency", rbhCurrency) :
                new ObjectParameter("rbhCurrency", typeof(string));
    
            var rbhContactCodeParameter = rbhContactCode.HasValue ?
                new ObjectParameter("rbhContactCode", rbhContactCode) :
                new ObjectParameter("rbhContactCode", typeof(int));
    
            var rbhOwnerOrganizationCodeParameter = rbhOwnerOrganizationCode != null ?
                new ObjectParameter("rbhOwnerOrganizationCode", rbhOwnerOrganizationCode) :
                new ObjectParameter("rbhOwnerOrganizationCode", typeof(string));
    
            var rbhProcessSubTypeParameter = rbhProcessSubType.HasValue ?
                new ObjectParameter("rbhProcessSubType", rbhProcessSubType) :
                new ObjectParameter("rbhProcessSubType", typeof(int));
    
            var rbhProcessTypeParameter = rbhProcessType.HasValue ?
                new ObjectParameter("rbhProcessType", rbhProcessType) :
                new ObjectParameter("rbhProcessType", typeof(int));
    
            var rbhDocumentSubTypeParameter = rbhDocumentSubType.HasValue ?
                new ObjectParameter("rbhDocumentSubType", rbhDocumentSubType) :
                new ObjectParameter("rbhDocumentSubType", typeof(int));
    
            var rbhDocumentTypeParameter = rbhDocumentType.HasValue ?
                new ObjectParameter("rbhDocumentType", rbhDocumentType) :
                new ObjectParameter("rbhDocumentType", typeof(int));
    
            var rbhTemplateParameter = rbhTemplate.HasValue ?
                new ObjectParameter("rbhTemplate", rbhTemplate) :
                new ObjectParameter("rbhTemplate", typeof(int));
    
            var rbhUserParameter = rbhUser != null ?
                new ObjectParameter("rbhUser", rbhUser) :
                new ObjectParameter("rbhUser", typeof(string));
    
            var rbhOrganizationParameter = rbhOrganization != null ?
                new ObjectParameter("rbhOrganization", rbhOrganization) :
                new ObjectParameter("rbhOrganization", typeof(string));
    
            var rbhEnterpriseParameter = rbhEnterprise != null ?
                new ObjectParameter("rbhEnterprise", rbhEnterprise) :
                new ObjectParameter("rbhEnterprise", typeof(string));
    
            var rbhCreationDateParameter = rbhCreationDate.HasValue ?
                new ObjectParameter("rbhCreationDate", rbhCreationDate) :
                new ObjectParameter("rbhCreationDate", typeof(System.DateTime));
    
            var rbhIsTemplateParameter = rbhIsTemplate.HasValue ?
                new ObjectParameter("rbhIsTemplate", rbhIsTemplate) :
                new ObjectParameter("rbhIsTemplate", typeof(short));
    
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcReadCountprcRFBHeader", resultCode, resultMessage, recordsCount, rbhCurrencyParameter, rbhContactCodeParameter, rbhOwnerOrganizationCodeParameter, rbhProcessSubTypeParameter, rbhProcessTypeParameter, rbhDocumentSubTypeParameter, rbhDocumentTypeParameter, rbhTemplateParameter, rbhUserParameter, rbhOrganizationParameter, rbhEnterpriseParameter, rbhCreationDateParameter, rbhIsTemplateParameter, rbhCodeParameter);
        }
    
        public virtual int prcSpcReadCountprcRFBItem(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter recordsCount, string rbiUOM, string rbiName, string rbiCategory, Nullable<int> rbiSchema, Nullable<int> rbiRFBCode)
        {
            var rbiUOMParameter = rbiUOM != null ?
                new ObjectParameter("rbiUOM", rbiUOM) :
                new ObjectParameter("rbiUOM", typeof(string));
    
            var rbiNameParameter = rbiName != null ?
                new ObjectParameter("rbiName", rbiName) :
                new ObjectParameter("rbiName", typeof(string));
    
            var rbiCategoryParameter = rbiCategory != null ?
                new ObjectParameter("rbiCategory", rbiCategory) :
                new ObjectParameter("rbiCategory", typeof(string));
    
            var rbiSchemaParameter = rbiSchema.HasValue ?
                new ObjectParameter("rbiSchema", rbiSchema) :
                new ObjectParameter("rbiSchema", typeof(int));
    
            var rbiRFBCodeParameter = rbiRFBCode.HasValue ?
                new ObjectParameter("rbiRFBCode", rbiRFBCode) :
                new ObjectParameter("rbiRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcReadCountprcRFBItem", resultCode, resultMessage, recordsCount, rbiUOMParameter, rbiNameParameter, rbiCategoryParameter, rbiSchemaParameter, rbiRFBCodeParameter);
        }
    
        public virtual int prcSpcReadCountprcRFBLegalRecord(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter recordsCount, Nullable<int> rlrLegalRecordType, Nullable<short> rlrSequence, Nullable<int> rlrRFBCode)
        {
            var rlrLegalRecordTypeParameter = rlrLegalRecordType.HasValue ?
                new ObjectParameter("rlrLegalRecordType", rlrLegalRecordType) :
                new ObjectParameter("rlrLegalRecordType", typeof(int));
    
            var rlrSequenceParameter = rlrSequence.HasValue ?
                new ObjectParameter("rlrSequence", rlrSequence) :
                new ObjectParameter("rlrSequence", typeof(short));
    
            var rlrRFBCodeParameter = rlrRFBCode.HasValue ?
                new ObjectParameter("rlrRFBCode", rlrRFBCode) :
                new ObjectParameter("rlrRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcReadCountprcRFBLegalRecord", resultCode, resultMessage, recordsCount, rlrLegalRecordTypeParameter, rlrSequenceParameter, rlrRFBCodeParameter);
        }
    
        public virtual int prcSpcReadCountprcRFBParticipants(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter recordsCount, Nullable<int> rbhCode)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcReadCountprcRFBParticipants", resultCode, resultMessage, recordsCount, rbhCodeParameter);
        }
    
        public virtual int prcSpcReadCountprcRFBProcessSubType(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter recordsCount, Nullable<int> rpsTimePeriod, string rpsName, Nullable<int> rpsCode, Nullable<short> rpsIsActive, Nullable<int> rpsProcessType)
        {
            var rpsTimePeriodParameter = rpsTimePeriod.HasValue ?
                new ObjectParameter("rpsTimePeriod", rpsTimePeriod) :
                new ObjectParameter("rpsTimePeriod", typeof(int));
    
            var rpsNameParameter = rpsName != null ?
                new ObjectParameter("rpsName", rpsName) :
                new ObjectParameter("rpsName", typeof(string));
    
            var rpsCodeParameter = rpsCode.HasValue ?
                new ObjectParameter("rpsCode", rpsCode) :
                new ObjectParameter("rpsCode", typeof(int));
    
            var rpsIsActiveParameter = rpsIsActive.HasValue ?
                new ObjectParameter("rpsIsActive", rpsIsActive) :
                new ObjectParameter("rpsIsActive", typeof(short));
    
            var rpsProcessTypeParameter = rpsProcessType.HasValue ?
                new ObjectParameter("rpsProcessType", rpsProcessType) :
                new ObjectParameter("rpsProcessType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcReadCountprcRFBProcessSubType", resultCode, resultMessage, recordsCount, rpsTimePeriodParameter, rpsNameParameter, rpsCodeParameter, rpsIsActiveParameter, rpsProcessTypeParameter);
        }
    
        public virtual int prcSpcReadCountprcRFBProcessType(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter recordsCount, string rptName, Nullable<int> rptCode, Nullable<short> rptIsActive, Nullable<int> rptID)
        {
            var rptNameParameter = rptName != null ?
                new ObjectParameter("rptName", rptName) :
                new ObjectParameter("rptName", typeof(string));
    
            var rptCodeParameter = rptCode.HasValue ?
                new ObjectParameter("rptCode", rptCode) :
                new ObjectParameter("rptCode", typeof(int));
    
            var rptIsActiveParameter = rptIsActive.HasValue ?
                new ObjectParameter("rptIsActive", rptIsActive) :
                new ObjectParameter("rptIsActive", typeof(short));
    
            var rptIDParameter = rptID.HasValue ?
                new ObjectParameter("rptID", rptID) :
                new ObjectParameter("rptID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcReadCountprcRFBProcessType", resultCode, resultMessage, recordsCount, rptNameParameter, rptCodeParameter, rptIsActiveParameter, rptIDParameter);
        }
    
        public virtual int prcSpcReadCountprcRFBRequisite(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter recordsCount, Nullable<short> rbrSequence, string rbrTitle, Nullable<int> rbrRequisiteType, Nullable<int> rbrRFBCode, Nullable<int> rbrID, Nullable<int> rbrSourceID)
        {
            var rbrSequenceParameter = rbrSequence.HasValue ?
                new ObjectParameter("rbrSequence", rbrSequence) :
                new ObjectParameter("rbrSequence", typeof(short));
    
            var rbrTitleParameter = rbrTitle != null ?
                new ObjectParameter("rbrTitle", rbrTitle) :
                new ObjectParameter("rbrTitle", typeof(string));
    
            var rbrRequisiteTypeParameter = rbrRequisiteType.HasValue ?
                new ObjectParameter("rbrRequisiteType", rbrRequisiteType) :
                new ObjectParameter("rbrRequisiteType", typeof(int));
    
            var rbrRFBCodeParameter = rbrRFBCode.HasValue ?
                new ObjectParameter("rbrRFBCode", rbrRFBCode) :
                new ObjectParameter("rbrRFBCode", typeof(int));
    
            var rbrIDParameter = rbrID.HasValue ?
                new ObjectParameter("rbrID", rbrID) :
                new ObjectParameter("rbrID", typeof(int));
    
            var rbrSourceIDParameter = rbrSourceID.HasValue ?
                new ObjectParameter("rbrSourceID", rbrSourceID) :
                new ObjectParameter("rbrSourceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcReadCountprcRFBRequisite", resultCode, resultMessage, recordsCount, rbrSequenceParameter, rbrTitleParameter, rbrRequisiteTypeParameter, rbrRFBCodeParameter, rbrIDParameter, rbrSourceIDParameter);
        }
    
        public virtual int prcSpcReadCountprcRFBUserDefinedDate(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter recordsCount, Nullable<int> rudRFBCode, string rudName, Nullable<System.DateTime> rudValue)
        {
            var rudRFBCodeParameter = rudRFBCode.HasValue ?
                new ObjectParameter("rudRFBCode", rudRFBCode) :
                new ObjectParameter("rudRFBCode", typeof(int));
    
            var rudNameParameter = rudName != null ?
                new ObjectParameter("rudName", rudName) :
                new ObjectParameter("rudName", typeof(string));
    
            var rudValueParameter = rudValue.HasValue ?
                new ObjectParameter("rudValue", rudValue) :
                new ObjectParameter("rudValue", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcReadCountprcRFBUserDefinedDate", resultCode, resultMessage, recordsCount, rudRFBCodeParameter, rudNameParameter, rudValueParameter);
        }
    
        public virtual int prcSpcReadCountprcRFBVersion(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter recordsCount, string rbvXML, Nullable<int> rbvRFBStatus, Nullable<System.DateTime> rbvDate, Nullable<short> rbvVersion, Nullable<int> rbvRFBCode)
        {
            var rbvXMLParameter = rbvXML != null ?
                new ObjectParameter("rbvXML", rbvXML) :
                new ObjectParameter("rbvXML", typeof(string));
    
            var rbvRFBStatusParameter = rbvRFBStatus.HasValue ?
                new ObjectParameter("rbvRFBStatus", rbvRFBStatus) :
                new ObjectParameter("rbvRFBStatus", typeof(int));
    
            var rbvDateParameter = rbvDate.HasValue ?
                new ObjectParameter("rbvDate", rbvDate) :
                new ObjectParameter("rbvDate", typeof(System.DateTime));
    
            var rbvVersionParameter = rbvVersion.HasValue ?
                new ObjectParameter("rbvVersion", rbvVersion) :
                new ObjectParameter("rbvVersion", typeof(short));
    
            var rbvRFBCodeParameter = rbvRFBCode.HasValue ?
                new ObjectParameter("rbvRFBCode", rbvRFBCode) :
                new ObjectParameter("rbvRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcReadCountprcRFBVersion", resultCode, resultMessage, recordsCount, rbvXMLParameter, rbvRFBStatusParameter, rbvDateParameter, rbvVersionParameter, rbvRFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadDataType_Result> prcSpcReadDataType(ObjectParameter resultCode, ObjectParameter resultMessage)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadDataType_Result>("prcSpcReadDataType", resultCode, resultMessage);
        }
    
        public virtual ObjectResult<prcSpcReadDate_Result> prcSpcReadDate(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbhRFBCode)
        {
            var rbhRFBCodeParameter = rbhRFBCode.HasValue ?
                new ObjectParameter("rbhRFBCode", rbhRFBCode) :
                new ObjectParameter("rbhRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadDate_Result>("prcSpcReadDate", resultCode, resultMessage, rbhRFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadgblCurrency_Result> prcSpcReadgblCurrency()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadgblCurrency_Result>("prcSpcReadgblCurrency");
        }
    
        public virtual int prcSpcReadgblGeographicZone()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcReadgblGeographicZone");
        }
    
        public virtual ObjectResult<prcSpcReadOrganizationProviders_Result> prcSpcReadOrganizationProviders(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> orgClass, string orgTaxID, string orgLegalName, string ctgCode, Nullable<int> ctgSchema, string optButtonChecked)
        {
            var orgClassParameter = orgClass.HasValue ?
                new ObjectParameter("orgClass", orgClass) :
                new ObjectParameter("orgClass", typeof(int));
    
            var orgTaxIDParameter = orgTaxID != null ?
                new ObjectParameter("orgTaxID", orgTaxID) :
                new ObjectParameter("orgTaxID", typeof(string));
    
            var orgLegalNameParameter = orgLegalName != null ?
                new ObjectParameter("orgLegalName", orgLegalName) :
                new ObjectParameter("orgLegalName", typeof(string));
    
            var ctgCodeParameter = ctgCode != null ?
                new ObjectParameter("ctgCode", ctgCode) :
                new ObjectParameter("ctgCode", typeof(string));
    
            var ctgSchemaParameter = ctgSchema.HasValue ?
                new ObjectParameter("ctgSchema", ctgSchema) :
                new ObjectParameter("ctgSchema", typeof(int));
    
            var optButtonCheckedParameter = optButtonChecked != null ?
                new ObjectParameter("OptButtonChecked", optButtonChecked) :
                new ObjectParameter("OptButtonChecked", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadOrganizationProviders_Result>("prcSpcReadOrganizationProviders", resultCode, resultMessage, orgClassParameter, orgTaxIDParameter, orgLegalNameParameter, ctgCodeParameter, ctgSchemaParameter, optButtonCheckedParameter);
        }
    
        public virtual ObjectResult<prcSpcReadPosponedProcess_Result> prcSpcReadPosponedProcess(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> reqParentCode, string reqUser, string reqOrganization)
        {
            var reqParentCodeParameter = reqParentCode.HasValue ?
                new ObjectParameter("reqParentCode", reqParentCode) :
                new ObjectParameter("reqParentCode", typeof(int));
    
            var reqUserParameter = reqUser != null ?
                new ObjectParameter("reqUser", reqUser) :
                new ObjectParameter("reqUser", typeof(string));
    
            var reqOrganizationParameter = reqOrganization != null ?
                new ObjectParameter("reqOrganization", reqOrganization) :
                new ObjectParameter("reqOrganization", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadPosponedProcess_Result>("prcSpcReadPosponedProcess", resultCode, resultMessage, reqParentCodeParameter, reqUserParameter, reqOrganizationParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcBIDBidFieldValue_Result> prcSpcReadprcBIDBidFieldValue(ObjectParameter resultCode, ObjectParameter resultMessage, string bfvValue, Nullable<int> bfvBidField, Nullable<int> bfvItem, Nullable<int> bfvBID, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var bfvValueParameter = bfvValue != null ?
                new ObjectParameter("bfvValue", bfvValue) :
                new ObjectParameter("bfvValue", typeof(string));
    
            var bfvBidFieldParameter = bfvBidField.HasValue ?
                new ObjectParameter("bfvBidField", bfvBidField) :
                new ObjectParameter("bfvBidField", typeof(int));
    
            var bfvItemParameter = bfvItem.HasValue ?
                new ObjectParameter("bfvItem", bfvItem) :
                new ObjectParameter("bfvItem", typeof(int));
    
            var bfvBIDParameter = bfvBID.HasValue ?
                new ObjectParameter("bfvBID", bfvBID) :
                new ObjectParameter("bfvBID", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcBIDBidFieldValue_Result>("prcSpcReadprcBIDBidFieldValue", resultCode, resultMessage, bfvValueParameter, bfvBidFieldParameter, bfvItemParameter, bfvBIDParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcBIDConfPay_Result> prcSpcReadprcBIDConfPay(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> bidID)
        {
            var bidIDParameter = bidID.HasValue ?
                new ObjectParameter("bidID", bidID) :
                new ObjectParameter("bidID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcBIDConfPay_Result>("prcSpcReadprcBIDConfPay", resultCode, resultMessage, bidIDParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcBIDItemByBID_Result> prcSpcReadprcBIDItemByBID(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> bitBID)
        {
            var bitBIDParameter = bitBID.HasValue ?
                new ObjectParameter("bitBID", bitBID) :
                new ObjectParameter("bitBID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcBIDItemByBID_Result>("prcSpcReadprcBIDItemByBID", resultCode, resultMessage, bitBIDParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcBIDItemByRFBItem_Result> prcSpcReadprcBIDItemByRFBItem(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rfbItem)
        {
            var rfbItemParameter = rfbItem.HasValue ?
                new ObjectParameter("rfbItem", rfbItem) :
                new ObjectParameter("rfbItem", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcBIDItemByRFBItem_Result>("prcSpcReadprcBIDItemByRFBItem", resultCode, resultMessage, rfbItemParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcBIDItemByRFBItemNoRejets_Result> prcSpcReadprcBIDItemByRFBItemNoRejets(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rfbItem, Nullable<int> rejectStatus)
        {
            var rfbItemParameter = rfbItem.HasValue ?
                new ObjectParameter("rfbItem", rfbItem) :
                new ObjectParameter("rfbItem", typeof(int));
    
            var rejectStatusParameter = rejectStatus.HasValue ?
                new ObjectParameter("rejectStatus", rejectStatus) :
                new ObjectParameter("rejectStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcBIDItemByRFBItemNoRejets_Result>("prcSpcReadprcBIDItemByRFBItemNoRejets", resultCode, resultMessage, rfbItemParameter, rejectStatusParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcBIDItemRFBItem_Result> prcSpcReadprcBIDItemRFBItem(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> bidID)
        {
            var bidIDParameter = bidID.HasValue ?
                new ObjectParameter("bidID", bidID) :
                new ObjectParameter("bidID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcBIDItemRFBItem_Result>("prcSpcReadprcBIDItemRFBItem", resultCode, resultMessage, bidIDParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcBIDItemRFBItemrbhCode_Result> prcSpcReadprcBIDItemRFBItemrbhCode(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> bidID)
        {
            var bidIDParameter = bidID.HasValue ?
                new ObjectParameter("bidID", bidID) :
                new ObjectParameter("bidID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcBIDItemRFBItemrbhCode_Result>("prcSpcReadprcBIDItemRFBItemrbhCode", resultCode, resultMessage, bidIDParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcBIDItemSum_Result> prcSpcReadprcBIDItemSum(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> bidID)
        {
            var bidIDParameter = bidID.HasValue ?
                new ObjectParameter("bidID", bidID) :
                new ObjectParameter("bidID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcBIDItemSum_Result>("prcSpcReadprcBIDItemSum", resultCode, resultMessage, bidIDParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcBIDItemToConfirm_Result> prcSpcReadprcBIDItemToConfirm(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> bitBID, Nullable<int> rfbCode)
        {
            var bitBIDParameter = bitBID.HasValue ?
                new ObjectParameter("bitBID", bitBID) :
                new ObjectParameter("bitBID", typeof(int));
    
            var rfbCodeParameter = rfbCode.HasValue ?
                new ObjectParameter("RfbCode", rfbCode) :
                new ObjectParameter("RfbCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcBIDItemToConfirm_Result>("prcSpcReadprcBIDItemToConfirm", resultCode, resultMessage, bitBIDParameter, rfbCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcBIDOpeningComment_Result> prcSpcReadprcBIDOpeningComment(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> bocBID, Nullable<int> bocID, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var bocBIDParameter = bocBID.HasValue ?
                new ObjectParameter("bocBID", bocBID) :
                new ObjectParameter("bocBID", typeof(int));
    
            var bocIDParameter = bocID.HasValue ?
                new ObjectParameter("bocID", bocID) :
                new ObjectParameter("bocID", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcBIDOpeningComment_Result>("prcSpcReadprcBIDOpeningComment", resultCode, resultMessage, bocBIDParameter, bocIDParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcBIDOpeningCommentByRFB_Result> prcSpcReadprcBIDOpeningCommentByRFB(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rFBCode, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var rFBCodeParameter = rFBCode.HasValue ?
                new ObjectParameter("RFBCode", rFBCode) :
                new ObjectParameter("RFBCode", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcBIDOpeningCommentByRFB_Result>("prcSpcReadprcBIDOpeningCommentByRFB", resultCode, resultMessage, rFBCodeParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcBIDQuote_Result> prcSpcReadprcBIDQuote(ObjectParameter resultCode, ObjectParameter resultMessage, string bidAwardComment, string bidFinalScore, Nullable<short> bidIsAwarded, string bidEconomicScore, Nullable<short> bidEconomicQualify, Nullable<System.DateTime> bidEconomicIssueDate, Nullable<int> bidEconomicStatus, string bidTechnicalScore, Nullable<short> bidTechnicalQualify, Nullable<System.DateTime> bidTechnicalIssueDate, Nullable<int> bidTechnicalStatus, string bidAdministrativeScore, Nullable<short> bidAdministrativeQualify, Nullable<int> bidDocumentStatus, string bidSupplierReference, string bidDescription, string bidName, string bidUser, Nullable<short> bidCorrelative, string bidOrganization, Nullable<int> bidRFBCode, Nullable<int> bidID, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var bidAwardCommentParameter = bidAwardComment != null ?
                new ObjectParameter("bidAwardComment", bidAwardComment) :
                new ObjectParameter("bidAwardComment", typeof(string));
    
            var bidFinalScoreParameter = bidFinalScore != null ?
                new ObjectParameter("bidFinalScore", bidFinalScore) :
                new ObjectParameter("bidFinalScore", typeof(string));
    
            var bidIsAwardedParameter = bidIsAwarded.HasValue ?
                new ObjectParameter("bidIsAwarded", bidIsAwarded) :
                new ObjectParameter("bidIsAwarded", typeof(short));
    
            var bidEconomicScoreParameter = bidEconomicScore != null ?
                new ObjectParameter("bidEconomicScore", bidEconomicScore) :
                new ObjectParameter("bidEconomicScore", typeof(string));
    
            var bidEconomicQualifyParameter = bidEconomicQualify.HasValue ?
                new ObjectParameter("bidEconomicQualify", bidEconomicQualify) :
                new ObjectParameter("bidEconomicQualify", typeof(short));
    
            var bidEconomicIssueDateParameter = bidEconomicIssueDate.HasValue ?
                new ObjectParameter("bidEconomicIssueDate", bidEconomicIssueDate) :
                new ObjectParameter("bidEconomicIssueDate", typeof(System.DateTime));
    
            var bidEconomicStatusParameter = bidEconomicStatus.HasValue ?
                new ObjectParameter("bidEconomicStatus", bidEconomicStatus) :
                new ObjectParameter("bidEconomicStatus", typeof(int));
    
            var bidTechnicalScoreParameter = bidTechnicalScore != null ?
                new ObjectParameter("bidTechnicalScore", bidTechnicalScore) :
                new ObjectParameter("bidTechnicalScore", typeof(string));
    
            var bidTechnicalQualifyParameter = bidTechnicalQualify.HasValue ?
                new ObjectParameter("bidTechnicalQualify", bidTechnicalQualify) :
                new ObjectParameter("bidTechnicalQualify", typeof(short));
    
            var bidTechnicalIssueDateParameter = bidTechnicalIssueDate.HasValue ?
                new ObjectParameter("bidTechnicalIssueDate", bidTechnicalIssueDate) :
                new ObjectParameter("bidTechnicalIssueDate", typeof(System.DateTime));
    
            var bidTechnicalStatusParameter = bidTechnicalStatus.HasValue ?
                new ObjectParameter("bidTechnicalStatus", bidTechnicalStatus) :
                new ObjectParameter("bidTechnicalStatus", typeof(int));
    
            var bidAdministrativeScoreParameter = bidAdministrativeScore != null ?
                new ObjectParameter("bidAdministrativeScore", bidAdministrativeScore) :
                new ObjectParameter("bidAdministrativeScore", typeof(string));
    
            var bidAdministrativeQualifyParameter = bidAdministrativeQualify.HasValue ?
                new ObjectParameter("bidAdministrativeQualify", bidAdministrativeQualify) :
                new ObjectParameter("bidAdministrativeQualify", typeof(short));
    
            var bidDocumentStatusParameter = bidDocumentStatus.HasValue ?
                new ObjectParameter("bidDocumentStatus", bidDocumentStatus) :
                new ObjectParameter("bidDocumentStatus", typeof(int));
    
            var bidSupplierReferenceParameter = bidSupplierReference != null ?
                new ObjectParameter("bidSupplierReference", bidSupplierReference) :
                new ObjectParameter("bidSupplierReference", typeof(string));
    
            var bidDescriptionParameter = bidDescription != null ?
                new ObjectParameter("bidDescription", bidDescription) :
                new ObjectParameter("bidDescription", typeof(string));
    
            var bidNameParameter = bidName != null ?
                new ObjectParameter("bidName", bidName) :
                new ObjectParameter("bidName", typeof(string));
    
            var bidUserParameter = bidUser != null ?
                new ObjectParameter("bidUser", bidUser) :
                new ObjectParameter("bidUser", typeof(string));
    
            var bidCorrelativeParameter = bidCorrelative.HasValue ?
                new ObjectParameter("bidCorrelative", bidCorrelative) :
                new ObjectParameter("bidCorrelative", typeof(short));
    
            var bidOrganizationParameter = bidOrganization != null ?
                new ObjectParameter("bidOrganization", bidOrganization) :
                new ObjectParameter("bidOrganization", typeof(string));
    
            var bidRFBCodeParameter = bidRFBCode.HasValue ?
                new ObjectParameter("bidRFBCode", bidRFBCode) :
                new ObjectParameter("bidRFBCode", typeof(int));
    
            var bidIDParameter = bidID.HasValue ?
                new ObjectParameter("bidID", bidID) :
                new ObjectParameter("bidID", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcBIDQuote_Result>("prcSpcReadprcBIDQuote", resultCode, resultMessage, bidAwardCommentParameter, bidFinalScoreParameter, bidIsAwardedParameter, bidEconomicScoreParameter, bidEconomicQualifyParameter, bidEconomicIssueDateParameter, bidEconomicStatusParameter, bidTechnicalScoreParameter, bidTechnicalQualifyParameter, bidTechnicalIssueDateParameter, bidTechnicalStatusParameter, bidAdministrativeScoreParameter, bidAdministrativeQualifyParameter, bidDocumentStatusParameter, bidSupplierReferenceParameter, bidDescriptionParameter, bidNameParameter, bidUserParameter, bidCorrelativeParameter, bidOrganizationParameter, bidRFBCodeParameter, bidIDParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcBIDQuoteAndBidItem_Result> prcSpcReadprcBIDQuoteAndBidItem(Nullable<int> rbhCode)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcBIDQuoteAndBidItem_Result>("prcSpcReadprcBIDQuoteAndBidItem", rbhCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcBIDQuoteAndBidItemInformar_Result> prcSpcReadprcBIDQuoteAndBidItemInformar(Nullable<int> rbhCode)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcBIDQuoteAndBidItemInformar_Result>("prcSpcReadprcBIDQuoteAndBidItemInformar", rbhCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcBIDQuoteByHeader_Result> prcSpcReadprcBIDQuoteByHeader(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rfbCode, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var rfbCodeParameter = rfbCode.HasValue ?
                new ObjectParameter("rfbCode", rfbCode) :
                new ObjectParameter("rfbCode", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcBIDQuoteByHeader_Result>("prcSpcReadprcBIDQuoteByHeader", resultCode, resultMessage, rfbCodeParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcBIDSupplierComparativeTable_Result> prcSpcReadprcBIDSupplierComparativeTable(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> bidRFBCode)
        {
            var bidRFBCodeParameter = bidRFBCode.HasValue ?
                new ObjectParameter("bidRFBCode", bidRFBCode) :
                new ObjectParameter("bidRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcBIDSupplierComparativeTable_Result>("prcSpcReadprcBIDSupplierComparativeTable", resultCode, resultMessage, bidRFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcBIDSupplierComparativeTableAmounts_Result> prcSpcReadprcBIDSupplierComparativeTableAmounts(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> bidRFBCode)
        {
            var bidRFBCodeParameter = bidRFBCode.HasValue ?
                new ObjectParameter("bidRFBCode", bidRFBCode) :
                new ObjectParameter("bidRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcBIDSupplierComparativeTableAmounts_Result>("prcSpcReadprcBIDSupplierComparativeTableAmounts", resultCode, resultMessage, bidRFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcBIDSupplierComparativeTableAmountsNORejects_Result> prcSpcReadprcBIDSupplierComparativeTableAmountsNORejects(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> bidRFBCode, Nullable<int> rejectStatus)
        {
            var bidRFBCodeParameter = bidRFBCode.HasValue ?
                new ObjectParameter("bidRFBCode", bidRFBCode) :
                new ObjectParameter("bidRFBCode", typeof(int));
    
            var rejectStatusParameter = rejectStatus.HasValue ?
                new ObjectParameter("RejectStatus", rejectStatus) :
                new ObjectParameter("RejectStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcBIDSupplierComparativeTableAmountsNORejects_Result>("prcSpcReadprcBIDSupplierComparativeTableAmountsNORejects", resultCode, resultMessage, bidRFBCodeParameter, rejectStatusParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcBIDSupplierComparativeTableNORejects_Result> prcSpcReadprcBIDSupplierComparativeTableNORejects(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> bidRFBCode, Nullable<int> rejectStatus)
        {
            var bidRFBCodeParameter = bidRFBCode.HasValue ?
                new ObjectParameter("bidRFBCode", bidRFBCode) :
                new ObjectParameter("bidRFBCode", typeof(int));
    
            var rejectStatusParameter = rejectStatus.HasValue ?
                new ObjectParameter("RejectStatus", rejectStatus) :
                new ObjectParameter("RejectStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcBIDSupplierComparativeTableNORejects_Result>("prcSpcReadprcBIDSupplierComparativeTableNORejects", resultCode, resultMessage, bidRFBCodeParameter, rejectStatusParameter);
        }
    
        public virtual int prcSpcReadprcCategory(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<short> ctgIsActive, string ctgCode, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var ctgIsActiveParameter = ctgIsActive.HasValue ?
                new ObjectParameter("ctgIsActive", ctgIsActive) :
                new ObjectParameter("ctgIsActive", typeof(short));
    
            var ctgCodeParameter = ctgCode != null ?
                new ObjectParameter("ctgCode", ctgCode) :
                new ObjectParameter("ctgCode", typeof(string));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcReadprcCategory", resultCode, resultMessage, ctgIsActiveParameter, ctgCodeParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcCriteriaClauseByCategory_Result> prcSpcReadprcCriteriaClauseByCategory(Nullable<int> rbcRFBCode, Nullable<int> tpcID, string estadoVigencia)
        {
            var rbcRFBCodeParameter = rbcRFBCode.HasValue ?
                new ObjectParameter("rbcRFBCode", rbcRFBCode) :
                new ObjectParameter("rbcRFBCode", typeof(int));
    
            var tpcIDParameter = tpcID.HasValue ?
                new ObjectParameter("tpcID", tpcID) :
                new ObjectParameter("tpcID", typeof(int));
    
            var estadoVigenciaParameter = estadoVigencia != null ?
                new ObjectParameter("estadoVigencia", estadoVigencia) :
                new ObjectParameter("estadoVigencia", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcCriteriaClauseByCategory_Result>("prcSpcReadprcCriteriaClauseByCategory", rbcRFBCodeParameter, tpcIDParameter, estadoVigenciaParameter);
        }
    
        public virtual int prcSpcReadprcGoodAndService(ObjectParameter resultCode, ObjectParameter resultMessage, string content)
        {
            var contentParameter = content != null ?
                new ObjectParameter("content", content) :
                new ObjectParameter("content", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcReadprcGoodAndService", resultCode, resultMessage, contentParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcGoodAndServiceOnly_Result> prcSpcReadprcGoodAndServiceOnly(ObjectParameter resultCode, ObjectParameter resultMessage, string content)
        {
            var contentParameter = content != null ?
                new ObjectParameter("content", content) :
                new ObjectParameter("content", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcGoodAndServiceOnly_Result>("prcSpcReadprcGoodAndServiceOnly", resultCode, resultMessage, contentParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcPOApprovalType_Result> prcSpcReadprcPOApprovalType(ObjectParameter resultCode, ObjectParameter resultMessage)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcPOApprovalType_Result>("prcSpcReadprcPOApprovalType", resultCode, resultMessage);
        }
    
        public virtual ObjectResult<prcSpcReadprcPOBuyerStatus_Result> prcSpcReadprcPOBuyerStatus(ObjectParameter resultCode, ObjectParameter resultMessage)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcPOBuyerStatus_Result>("prcSpcReadprcPOBuyerStatus", resultCode, resultMessage);
        }
    
        public virtual ObjectResult<prcSpcReadprcPOclause_Result> prcSpcReadprcPOclause(Nullable<int> pocPorId)
        {
            var pocPorIdParameter = pocPorId.HasValue ?
                new ObjectParameter("pocPorId", pocPorId) :
                new ObjectParameter("pocPorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcPOclause_Result>("prcSpcReadprcPOclause", pocPorIdParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcPODiscount_Result> prcSpcReadprcPODiscount(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> pdcItem)
        {
            var pdcItemParameter = pdcItem.HasValue ?
                new ObjectParameter("pdcItem", pdcItem) :
                new ObjectParameter("pdcItem", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcPODiscount_Result>("prcSpcReadprcPODiscount", resultCode, resultMessage, pdcItemParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcPOItemToEvaluate_Result> prcSpcReadprcPOItemToEvaluate(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> porID)
        {
            var porIDParameter = porID.HasValue ?
                new ObjectParameter("porID", porID) :
                new ObjectParameter("porID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcPOItemToEvaluate_Result>("prcSpcReadprcPOItemToEvaluate", resultCode, resultMessage, porIDParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcPOItemToEvaluate2_Result> prcSpcReadprcPOItemToEvaluate2(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> porID)
        {
            var porIDParameter = porID.HasValue ?
                new ObjectParameter("porID", porID) :
                new ObjectParameter("porID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcPOItemToEvaluate2_Result>("prcSpcReadprcPOItemToEvaluate2", resultCode, resultMessage, porIDParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcPOOrderCharge_Result> prcSpcReadprcPOOrderCharge(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<short> pocIsActive, Nullable<int> pocCode, string pocName, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var pocIsActiveParameter = pocIsActive.HasValue ?
                new ObjectParameter("pocIsActive", pocIsActive) :
                new ObjectParameter("pocIsActive", typeof(short));
    
            var pocCodeParameter = pocCode.HasValue ?
                new ObjectParameter("pocCode", pocCode) :
                new ObjectParameter("pocCode", typeof(int));
    
            var pocNameParameter = pocName != null ?
                new ObjectParameter("pocName", pocName) :
                new ObjectParameter("pocName", typeof(string));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcPOOrderCharge_Result>("prcSpcReadprcPOOrderCharge", resultCode, resultMessage, pocIsActiveParameter, pocCodeParameter, pocNameParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcPOOrderDiscount_Result> prcSpcReadprcPOOrderDiscount(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<short> podIsActive, Nullable<int> podCode, string podName, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var podIsActiveParameter = podIsActive.HasValue ?
                new ObjectParameter("podIsActive", podIsActive) :
                new ObjectParameter("podIsActive", typeof(short));
    
            var podCodeParameter = podCode.HasValue ?
                new ObjectParameter("podCode", podCode) :
                new ObjectParameter("podCode", typeof(int));
    
            var podNameParameter = podName != null ?
                new ObjectParameter("podName", podName) :
                new ObjectParameter("podName", typeof(string));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcPOOrderDiscount_Result>("prcSpcReadprcPOOrderDiscount", resultCode, resultMessage, podIsActiveParameter, podCodeParameter, podNameParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcPOOrderType_Result> prcSpcReadprcPOOrderType(ObjectParameter resultCode, ObjectParameter resultMessage, string potName, Nullable<int> potCode, Nullable<short> potIsActive, string potAbbreviationCode)
        {
            var potNameParameter = potName != null ?
                new ObjectParameter("potName", potName) :
                new ObjectParameter("potName", typeof(string));
    
            var potCodeParameter = potCode.HasValue ?
                new ObjectParameter("potCode", potCode) :
                new ObjectParameter("potCode", typeof(int));
    
            var potIsActiveParameter = potIsActive.HasValue ?
                new ObjectParameter("potIsActive", potIsActive) :
                new ObjectParameter("potIsActive", typeof(short));
    
            var potAbbreviationCodeParameter = potAbbreviationCode != null ?
                new ObjectParameter("potAbbreviationCode", potAbbreviationCode) :
                new ObjectParameter("potAbbreviationCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcPOOrderType_Result>("prcSpcReadprcPOOrderType", resultCode, resultMessage, potNameParameter, potCodeParameter, potIsActiveParameter, potAbbreviationCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcPOPaymentMethod_Result> prcSpcReadprcPOPaymentMethod(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> ppmIsActive)
        {
            var ppmIsActiveParameter = ppmIsActive.HasValue ?
                new ObjectParameter("ppmIsActive", ppmIsActive) :
                new ObjectParameter("ppmIsActive", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcPOPaymentMethod_Result>("prcSpcReadprcPOPaymentMethod", resultCode, resultMessage, ppmIsActiveParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcPOPaymentType_Result> prcSpcReadprcPOPaymentType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcPOPaymentType_Result>("prcSpcReadprcPOPaymentType");
        }
    
        public virtual ObjectResult<prcSpcReadprcPOSellerStatus_Result> prcSpcReadprcPOSellerStatus(ObjectParameter resultCode, ObjectParameter resultMessage)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcPOSellerStatus_Result>("prcSpcReadprcPOSellerStatus", resultCode, resultMessage);
        }
    
        public virtual ObjectResult<prcSpcReadprcPOShipmentType_Result> prcSpcReadprcPOShipmentType(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> pstIsActive)
        {
            var pstIsActiveParameter = pstIsActive.HasValue ?
                new ObjectParameter("pstIsActive", pstIsActive) :
                new ObjectParameter("pstIsActive", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcPOShipmentType_Result>("prcSpcReadprcPOShipmentType", resultCode, resultMessage, pstIsActiveParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcProcessJustify_Result> prcSpcReadprcProcessJustify(Nullable<int> typeProcess)
        {
            var typeProcessParameter = typeProcess.HasValue ?
                new ObjectParameter("TypeProcess", typeProcess) :
                new ObjectParameter("TypeProcess", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcProcessJustify_Result>("prcSpcReadprcProcessJustify", typeProcessParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcREQRequisition_Result> prcSpcReadprcREQRequisition(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> reqCode, Nullable<int> reqParentCode, Nullable<System.DateTime> reqCreationDate, string reqName, string reqEnterprise, string reqOrganization, string reqUser, Nullable<int> reqPrivacy, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var reqCodeParameter = reqCode.HasValue ?
                new ObjectParameter("reqCode", reqCode) :
                new ObjectParameter("reqCode", typeof(int));
    
            var reqParentCodeParameter = reqParentCode.HasValue ?
                new ObjectParameter("reqParentCode", reqParentCode) :
                new ObjectParameter("reqParentCode", typeof(int));
    
            var reqCreationDateParameter = reqCreationDate.HasValue ?
                new ObjectParameter("reqCreationDate", reqCreationDate) :
                new ObjectParameter("reqCreationDate", typeof(System.DateTime));
    
            var reqNameParameter = reqName != null ?
                new ObjectParameter("reqName", reqName) :
                new ObjectParameter("reqName", typeof(string));
    
            var reqEnterpriseParameter = reqEnterprise != null ?
                new ObjectParameter("reqEnterprise", reqEnterprise) :
                new ObjectParameter("reqEnterprise", typeof(string));
    
            var reqOrganizationParameter = reqOrganization != null ?
                new ObjectParameter("reqOrganization", reqOrganization) :
                new ObjectParameter("reqOrganization", typeof(string));
    
            var reqUserParameter = reqUser != null ?
                new ObjectParameter("reqUser", reqUser) :
                new ObjectParameter("reqUser", typeof(string));
    
            var reqPrivacyParameter = reqPrivacy.HasValue ?
                new ObjectParameter("reqPrivacy", reqPrivacy) :
                new ObjectParameter("reqPrivacy", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcREQRequisition_Result>("prcSpcReadprcREQRequisition", resultCode, resultMessage, reqCodeParameter, reqParentCodeParameter, reqCreationDateParameter, reqNameParameter, reqEnterpriseParameter, reqOrganizationParameter, reqUserParameter, reqPrivacyParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcREQRequisition_A_Result> prcSpcReadprcREQRequisition_A(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> reqCode, Nullable<int> reqParentCode, Nullable<System.DateTime> reqCreationDate, string reqName, string reqEnterprise, string reqOrganization, string reqUser, Nullable<int> reqPrivacy, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var reqCodeParameter = reqCode.HasValue ?
                new ObjectParameter("reqCode", reqCode) :
                new ObjectParameter("reqCode", typeof(int));
    
            var reqParentCodeParameter = reqParentCode.HasValue ?
                new ObjectParameter("reqParentCode", reqParentCode) :
                new ObjectParameter("reqParentCode", typeof(int));
    
            var reqCreationDateParameter = reqCreationDate.HasValue ?
                new ObjectParameter("reqCreationDate", reqCreationDate) :
                new ObjectParameter("reqCreationDate", typeof(System.DateTime));
    
            var reqNameParameter = reqName != null ?
                new ObjectParameter("reqName", reqName) :
                new ObjectParameter("reqName", typeof(string));
    
            var reqEnterpriseParameter = reqEnterprise != null ?
                new ObjectParameter("reqEnterprise", reqEnterprise) :
                new ObjectParameter("reqEnterprise", typeof(string));
    
            var reqOrganizationParameter = reqOrganization != null ?
                new ObjectParameter("reqOrganization", reqOrganization) :
                new ObjectParameter("reqOrganization", typeof(string));
    
            var reqUserParameter = reqUser != null ?
                new ObjectParameter("reqUser", reqUser) :
                new ObjectParameter("reqUser", typeof(string));
    
            var reqPrivacyParameter = reqPrivacy.HasValue ?
                new ObjectParameter("reqPrivacy", reqPrivacy) :
                new ObjectParameter("reqPrivacy", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcREQRequisition_A_Result>("prcSpcReadprcREQRequisition_A", resultCode, resultMessage, reqCodeParameter, reqParentCodeParameter, reqCreationDateParameter, reqNameParameter, reqEnterpriseParameter, reqOrganizationParameter, reqUserParameter, reqPrivacyParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcREQRequisition_B_Result> prcSpcReadprcREQRequisition_B(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> reqCode, Nullable<int> reqParentCode, Nullable<System.DateTime> reqCreationDate, string reqName, string reqEnterprise, string reqOrganization, string reqUser, Nullable<int> reqPrivacy, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var reqCodeParameter = reqCode.HasValue ?
                new ObjectParameter("reqCode", reqCode) :
                new ObjectParameter("reqCode", typeof(int));
    
            var reqParentCodeParameter = reqParentCode.HasValue ?
                new ObjectParameter("reqParentCode", reqParentCode) :
                new ObjectParameter("reqParentCode", typeof(int));
    
            var reqCreationDateParameter = reqCreationDate.HasValue ?
                new ObjectParameter("reqCreationDate", reqCreationDate) :
                new ObjectParameter("reqCreationDate", typeof(System.DateTime));
    
            var reqNameParameter = reqName != null ?
                new ObjectParameter("reqName", reqName) :
                new ObjectParameter("reqName", typeof(string));
    
            var reqEnterpriseParameter = reqEnterprise != null ?
                new ObjectParameter("reqEnterprise", reqEnterprise) :
                new ObjectParameter("reqEnterprise", typeof(string));
    
            var reqOrganizationParameter = reqOrganization != null ?
                new ObjectParameter("reqOrganization", reqOrganization) :
                new ObjectParameter("reqOrganization", typeof(string));
    
            var reqUserParameter = reqUser != null ?
                new ObjectParameter("reqUser", reqUser) :
                new ObjectParameter("reqUser", typeof(string));
    
            var reqPrivacyParameter = reqPrivacy.HasValue ?
                new ObjectParameter("reqPrivacy", reqPrivacy) :
                new ObjectParameter("reqPrivacy", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcREQRequisition_B_Result>("prcSpcReadprcREQRequisition_B", resultCode, resultMessage, reqCodeParameter, reqParentCodeParameter, reqCreationDateParameter, reqNameParameter, reqEnterpriseParameter, reqOrganizationParameter, reqUserParameter, reqPrivacyParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcREQRequisition_C_Result> prcSpcReadprcREQRequisition_C(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> reqCode, Nullable<int> reqParentCode, Nullable<System.DateTime> reqCreationDate, string reqName, string reqEnterprise, string reqOrganization, string reqUser, Nullable<int> reqPrivacy, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var reqCodeParameter = reqCode.HasValue ?
                new ObjectParameter("reqCode", reqCode) :
                new ObjectParameter("reqCode", typeof(int));
    
            var reqParentCodeParameter = reqParentCode.HasValue ?
                new ObjectParameter("reqParentCode", reqParentCode) :
                new ObjectParameter("reqParentCode", typeof(int));
    
            var reqCreationDateParameter = reqCreationDate.HasValue ?
                new ObjectParameter("reqCreationDate", reqCreationDate) :
                new ObjectParameter("reqCreationDate", typeof(System.DateTime));
    
            var reqNameParameter = reqName != null ?
                new ObjectParameter("reqName", reqName) :
                new ObjectParameter("reqName", typeof(string));
    
            var reqEnterpriseParameter = reqEnterprise != null ?
                new ObjectParameter("reqEnterprise", reqEnterprise) :
                new ObjectParameter("reqEnterprise", typeof(string));
    
            var reqOrganizationParameter = reqOrganization != null ?
                new ObjectParameter("reqOrganization", reqOrganization) :
                new ObjectParameter("reqOrganization", typeof(string));
    
            var reqUserParameter = reqUser != null ?
                new ObjectParameter("reqUser", reqUser) :
                new ObjectParameter("reqUser", typeof(string));
    
            var reqPrivacyParameter = reqPrivacy.HasValue ?
                new ObjectParameter("reqPrivacy", reqPrivacy) :
                new ObjectParameter("reqPrivacy", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcREQRequisition_C_Result>("prcSpcReadprcREQRequisition_C", resultCode, resultMessage, reqCodeParameter, reqParentCodeParameter, reqCreationDateParameter, reqNameParameter, reqEnterpriseParameter, reqOrganizationParameter, reqUserParameter, reqPrivacyParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcREQRequisition_D_Result> prcSpcReadprcREQRequisition_D(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> reqCode, Nullable<int> reqParentCode, Nullable<System.DateTime> reqCreationDate, string reqName, string reqEnterprise, string reqOrganization, string reqUser, Nullable<int> reqPrivacy, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var reqCodeParameter = reqCode.HasValue ?
                new ObjectParameter("reqCode", reqCode) :
                new ObjectParameter("reqCode", typeof(int));
    
            var reqParentCodeParameter = reqParentCode.HasValue ?
                new ObjectParameter("reqParentCode", reqParentCode) :
                new ObjectParameter("reqParentCode", typeof(int));
    
            var reqCreationDateParameter = reqCreationDate.HasValue ?
                new ObjectParameter("reqCreationDate", reqCreationDate) :
                new ObjectParameter("reqCreationDate", typeof(System.DateTime));
    
            var reqNameParameter = reqName != null ?
                new ObjectParameter("reqName", reqName) :
                new ObjectParameter("reqName", typeof(string));
    
            var reqEnterpriseParameter = reqEnterprise != null ?
                new ObjectParameter("reqEnterprise", reqEnterprise) :
                new ObjectParameter("reqEnterprise", typeof(string));
    
            var reqOrganizationParameter = reqOrganization != null ?
                new ObjectParameter("reqOrganization", reqOrganization) :
                new ObjectParameter("reqOrganization", typeof(string));
    
            var reqUserParameter = reqUser != null ?
                new ObjectParameter("reqUser", reqUser) :
                new ObjectParameter("reqUser", typeof(string));
    
            var reqPrivacyParameter = reqPrivacy.HasValue ?
                new ObjectParameter("reqPrivacy", reqPrivacy) :
                new ObjectParameter("reqPrivacy", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcREQRequisition_D_Result>("prcSpcReadprcREQRequisition_D", resultCode, resultMessage, reqCodeParameter, reqParentCodeParameter, reqCreationDateParameter, reqNameParameter, reqEnterpriseParameter, reqOrganizationParameter, reqUserParameter, reqPrivacyParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcREQRequisition_E_Result> prcSpcReadprcREQRequisition_E(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> reqCode, Nullable<int> reqParentCode, Nullable<System.DateTime> reqCreationDate, string reqName, string reqEnterprise, string reqOrganization, string reqUser, Nullable<int> reqPrivacy, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var reqCodeParameter = reqCode.HasValue ?
                new ObjectParameter("reqCode", reqCode) :
                new ObjectParameter("reqCode", typeof(int));
    
            var reqParentCodeParameter = reqParentCode.HasValue ?
                new ObjectParameter("reqParentCode", reqParentCode) :
                new ObjectParameter("reqParentCode", typeof(int));
    
            var reqCreationDateParameter = reqCreationDate.HasValue ?
                new ObjectParameter("reqCreationDate", reqCreationDate) :
                new ObjectParameter("reqCreationDate", typeof(System.DateTime));
    
            var reqNameParameter = reqName != null ?
                new ObjectParameter("reqName", reqName) :
                new ObjectParameter("reqName", typeof(string));
    
            var reqEnterpriseParameter = reqEnterprise != null ?
                new ObjectParameter("reqEnterprise", reqEnterprise) :
                new ObjectParameter("reqEnterprise", typeof(string));
    
            var reqOrganizationParameter = reqOrganization != null ?
                new ObjectParameter("reqOrganization", reqOrganization) :
                new ObjectParameter("reqOrganization", typeof(string));
    
            var reqUserParameter = reqUser != null ?
                new ObjectParameter("reqUser", reqUser) :
                new ObjectParameter("reqUser", typeof(string));
    
            var reqPrivacyParameter = reqPrivacy.HasValue ?
                new ObjectParameter("reqPrivacy", reqPrivacy) :
                new ObjectParameter("reqPrivacy", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcREQRequisition_E_Result>("prcSpcReadprcREQRequisition_E", resultCode, resultMessage, reqCodeParameter, reqParentCodeParameter, reqCreationDateParameter, reqNameParameter, reqEnterpriseParameter, reqOrganizationParameter, reqUserParameter, reqPrivacyParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcREQRequisition_F_Result> prcSpcReadprcREQRequisition_F(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> reqCode, Nullable<int> reqParentCode, Nullable<System.DateTime> reqCreationDate, string reqName, string reqEnterprise, string reqOrganization, string reqUser, Nullable<int> reqPrivacy, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var reqCodeParameter = reqCode.HasValue ?
                new ObjectParameter("reqCode", reqCode) :
                new ObjectParameter("reqCode", typeof(int));
    
            var reqParentCodeParameter = reqParentCode.HasValue ?
                new ObjectParameter("reqParentCode", reqParentCode) :
                new ObjectParameter("reqParentCode", typeof(int));
    
            var reqCreationDateParameter = reqCreationDate.HasValue ?
                new ObjectParameter("reqCreationDate", reqCreationDate) :
                new ObjectParameter("reqCreationDate", typeof(System.DateTime));
    
            var reqNameParameter = reqName != null ?
                new ObjectParameter("reqName", reqName) :
                new ObjectParameter("reqName", typeof(string));
    
            var reqEnterpriseParameter = reqEnterprise != null ?
                new ObjectParameter("reqEnterprise", reqEnterprise) :
                new ObjectParameter("reqEnterprise", typeof(string));
    
            var reqOrganizationParameter = reqOrganization != null ?
                new ObjectParameter("reqOrganization", reqOrganization) :
                new ObjectParameter("reqOrganization", typeof(string));
    
            var reqUserParameter = reqUser != null ?
                new ObjectParameter("reqUser", reqUser) :
                new ObjectParameter("reqUser", typeof(string));
    
            var reqPrivacyParameter = reqPrivacy.HasValue ?
                new ObjectParameter("reqPrivacy", reqPrivacy) :
                new ObjectParameter("reqPrivacy", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcREQRequisition_F_Result>("prcSpcReadprcREQRequisition_F", resultCode, resultMessage, reqCodeParameter, reqParentCodeParameter, reqCreationDateParameter, reqNameParameter, reqEnterpriseParameter, reqOrganizationParameter, reqUserParameter, reqPrivacyParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcREQRequisition_G_Result> prcSpcReadprcREQRequisition_G(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> reqCode, Nullable<int> reqParentCode, Nullable<System.DateTime> reqCreationDate, string reqName, string reqEnterprise, string reqOrganization, string reqUser, Nullable<int> reqPrivacy, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var reqCodeParameter = reqCode.HasValue ?
                new ObjectParameter("reqCode", reqCode) :
                new ObjectParameter("reqCode", typeof(int));
    
            var reqParentCodeParameter = reqParentCode.HasValue ?
                new ObjectParameter("reqParentCode", reqParentCode) :
                new ObjectParameter("reqParentCode", typeof(int));
    
            var reqCreationDateParameter = reqCreationDate.HasValue ?
                new ObjectParameter("reqCreationDate", reqCreationDate) :
                new ObjectParameter("reqCreationDate", typeof(System.DateTime));
    
            var reqNameParameter = reqName != null ?
                new ObjectParameter("reqName", reqName) :
                new ObjectParameter("reqName", typeof(string));
    
            var reqEnterpriseParameter = reqEnterprise != null ?
                new ObjectParameter("reqEnterprise", reqEnterprise) :
                new ObjectParameter("reqEnterprise", typeof(string));
    
            var reqOrganizationParameter = reqOrganization != null ?
                new ObjectParameter("reqOrganization", reqOrganization) :
                new ObjectParameter("reqOrganization", typeof(string));
    
            var reqUserParameter = reqUser != null ?
                new ObjectParameter("reqUser", reqUser) :
                new ObjectParameter("reqUser", typeof(string));
    
            var reqPrivacyParameter = reqPrivacy.HasValue ?
                new ObjectParameter("reqPrivacy", reqPrivacy) :
                new ObjectParameter("reqPrivacy", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcREQRequisition_G_Result>("prcSpcReadprcREQRequisition_G", resultCode, resultMessage, reqCodeParameter, reqParentCodeParameter, reqCreationDateParameter, reqNameParameter, reqEnterpriseParameter, reqOrganizationParameter, reqUserParameter, reqPrivacyParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcREQRequisition_H_Result> prcSpcReadprcREQRequisition_H(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> reqCode, Nullable<int> reqParentCode, Nullable<System.DateTime> reqCreationDate, string reqName, string reqEnterprise, string reqOrganization, string reqUser, Nullable<int> reqPrivacy, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var reqCodeParameter = reqCode.HasValue ?
                new ObjectParameter("reqCode", reqCode) :
                new ObjectParameter("reqCode", typeof(int));
    
            var reqParentCodeParameter = reqParentCode.HasValue ?
                new ObjectParameter("reqParentCode", reqParentCode) :
                new ObjectParameter("reqParentCode", typeof(int));
    
            var reqCreationDateParameter = reqCreationDate.HasValue ?
                new ObjectParameter("reqCreationDate", reqCreationDate) :
                new ObjectParameter("reqCreationDate", typeof(System.DateTime));
    
            var reqNameParameter = reqName != null ?
                new ObjectParameter("reqName", reqName) :
                new ObjectParameter("reqName", typeof(string));
    
            var reqEnterpriseParameter = reqEnterprise != null ?
                new ObjectParameter("reqEnterprise", reqEnterprise) :
                new ObjectParameter("reqEnterprise", typeof(string));
    
            var reqOrganizationParameter = reqOrganization != null ?
                new ObjectParameter("reqOrganization", reqOrganization) :
                new ObjectParameter("reqOrganization", typeof(string));
    
            var reqUserParameter = reqUser != null ?
                new ObjectParameter("reqUser", reqUser) :
                new ObjectParameter("reqUser", typeof(string));
    
            var reqPrivacyParameter = reqPrivacy.HasValue ?
                new ObjectParameter("reqPrivacy", reqPrivacy) :
                new ObjectParameter("reqPrivacy", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcREQRequisition_H_Result>("prcSpcReadprcREQRequisition_H", resultCode, resultMessage, reqCodeParameter, reqParentCodeParameter, reqCreationDateParameter, reqNameParameter, reqEnterpriseParameter, reqOrganizationParameter, reqUserParameter, reqPrivacyParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcREQRequisition_I_Result> prcSpcReadprcREQRequisition_I(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> reqCode, Nullable<int> reqParentCode, Nullable<System.DateTime> reqCreationDate, string reqName, string reqEnterprise, string reqOrganization, string reqUser, Nullable<int> reqPrivacy, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var reqCodeParameter = reqCode.HasValue ?
                new ObjectParameter("reqCode", reqCode) :
                new ObjectParameter("reqCode", typeof(int));
    
            var reqParentCodeParameter = reqParentCode.HasValue ?
                new ObjectParameter("reqParentCode", reqParentCode) :
                new ObjectParameter("reqParentCode", typeof(int));
    
            var reqCreationDateParameter = reqCreationDate.HasValue ?
                new ObjectParameter("reqCreationDate", reqCreationDate) :
                new ObjectParameter("reqCreationDate", typeof(System.DateTime));
    
            var reqNameParameter = reqName != null ?
                new ObjectParameter("reqName", reqName) :
                new ObjectParameter("reqName", typeof(string));
    
            var reqEnterpriseParameter = reqEnterprise != null ?
                new ObjectParameter("reqEnterprise", reqEnterprise) :
                new ObjectParameter("reqEnterprise", typeof(string));
    
            var reqOrganizationParameter = reqOrganization != null ?
                new ObjectParameter("reqOrganization", reqOrganization) :
                new ObjectParameter("reqOrganization", typeof(string));
    
            var reqUserParameter = reqUser != null ?
                new ObjectParameter("reqUser", reqUser) :
                new ObjectParameter("reqUser", typeof(string));
    
            var reqPrivacyParameter = reqPrivacy.HasValue ?
                new ObjectParameter("reqPrivacy", reqPrivacy) :
                new ObjectParameter("reqPrivacy", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcREQRequisition_I_Result>("prcSpcReadprcREQRequisition_I", resultCode, resultMessage, reqCodeParameter, reqParentCodeParameter, reqCreationDateParameter, reqNameParameter, reqEnterpriseParameter, reqOrganizationParameter, reqUserParameter, reqPrivacyParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcREQRequisition_J_Result> prcSpcReadprcREQRequisition_J(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> reqCode, Nullable<int> reqParentCode, Nullable<System.DateTime> reqCreationDate, string reqName, string reqEnterprise, string reqOrganization, string reqUser, Nullable<int> reqPrivacy, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var reqCodeParameter = reqCode.HasValue ?
                new ObjectParameter("reqCode", reqCode) :
                new ObjectParameter("reqCode", typeof(int));
    
            var reqParentCodeParameter = reqParentCode.HasValue ?
                new ObjectParameter("reqParentCode", reqParentCode) :
                new ObjectParameter("reqParentCode", typeof(int));
    
            var reqCreationDateParameter = reqCreationDate.HasValue ?
                new ObjectParameter("reqCreationDate", reqCreationDate) :
                new ObjectParameter("reqCreationDate", typeof(System.DateTime));
    
            var reqNameParameter = reqName != null ?
                new ObjectParameter("reqName", reqName) :
                new ObjectParameter("reqName", typeof(string));
    
            var reqEnterpriseParameter = reqEnterprise != null ?
                new ObjectParameter("reqEnterprise", reqEnterprise) :
                new ObjectParameter("reqEnterprise", typeof(string));
    
            var reqOrganizationParameter = reqOrganization != null ?
                new ObjectParameter("reqOrganization", reqOrganization) :
                new ObjectParameter("reqOrganization", typeof(string));
    
            var reqUserParameter = reqUser != null ?
                new ObjectParameter("reqUser", reqUser) :
                new ObjectParameter("reqUser", typeof(string));
    
            var reqPrivacyParameter = reqPrivacy.HasValue ?
                new ObjectParameter("reqPrivacy", reqPrivacy) :
                new ObjectParameter("reqPrivacy", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcREQRequisition_J_Result>("prcSpcReadprcREQRequisition_J", resultCode, resultMessage, reqCodeParameter, reqParentCodeParameter, reqCreationDateParameter, reqNameParameter, reqEnterpriseParameter, reqOrganizationParameter, reqUserParameter, reqPrivacyParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcREQRequisition_K_Result> prcSpcReadprcREQRequisition_K(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> reqCode, Nullable<int> reqParentCode, Nullable<System.DateTime> reqCreationDate, string reqName, string reqEnterprise, string reqOrganization, string reqUser, Nullable<int> reqPrivacy, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var reqCodeParameter = reqCode.HasValue ?
                new ObjectParameter("reqCode", reqCode) :
                new ObjectParameter("reqCode", typeof(int));
    
            var reqParentCodeParameter = reqParentCode.HasValue ?
                new ObjectParameter("reqParentCode", reqParentCode) :
                new ObjectParameter("reqParentCode", typeof(int));
    
            var reqCreationDateParameter = reqCreationDate.HasValue ?
                new ObjectParameter("reqCreationDate", reqCreationDate) :
                new ObjectParameter("reqCreationDate", typeof(System.DateTime));
    
            var reqNameParameter = reqName != null ?
                new ObjectParameter("reqName", reqName) :
                new ObjectParameter("reqName", typeof(string));
    
            var reqEnterpriseParameter = reqEnterprise != null ?
                new ObjectParameter("reqEnterprise", reqEnterprise) :
                new ObjectParameter("reqEnterprise", typeof(string));
    
            var reqOrganizationParameter = reqOrganization != null ?
                new ObjectParameter("reqOrganization", reqOrganization) :
                new ObjectParameter("reqOrganization", typeof(string));
    
            var reqUserParameter = reqUser != null ?
                new ObjectParameter("reqUser", reqUser) :
                new ObjectParameter("reqUser", typeof(string));
    
            var reqPrivacyParameter = reqPrivacy.HasValue ?
                new ObjectParameter("reqPrivacy", reqPrivacy) :
                new ObjectParameter("reqPrivacy", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcREQRequisition_K_Result>("prcSpcReadprcREQRequisition_K", resultCode, resultMessage, reqCodeParameter, reqParentCodeParameter, reqCreationDateParameter, reqNameParameter, reqEnterpriseParameter, reqOrganizationParameter, reqUserParameter, reqPrivacyParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcREQRequisition_L_Result> prcSpcReadprcREQRequisition_L(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> reqCode, Nullable<int> reqParentCode, Nullable<System.DateTime> reqCreationDate, string reqName, string reqEnterprise, string reqOrganization, string reqUser, Nullable<int> reqPrivacy, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var reqCodeParameter = reqCode.HasValue ?
                new ObjectParameter("reqCode", reqCode) :
                new ObjectParameter("reqCode", typeof(int));
    
            var reqParentCodeParameter = reqParentCode.HasValue ?
                new ObjectParameter("reqParentCode", reqParentCode) :
                new ObjectParameter("reqParentCode", typeof(int));
    
            var reqCreationDateParameter = reqCreationDate.HasValue ?
                new ObjectParameter("reqCreationDate", reqCreationDate) :
                new ObjectParameter("reqCreationDate", typeof(System.DateTime));
    
            var reqNameParameter = reqName != null ?
                new ObjectParameter("reqName", reqName) :
                new ObjectParameter("reqName", typeof(string));
    
            var reqEnterpriseParameter = reqEnterprise != null ?
                new ObjectParameter("reqEnterprise", reqEnterprise) :
                new ObjectParameter("reqEnterprise", typeof(string));
    
            var reqOrganizationParameter = reqOrganization != null ?
                new ObjectParameter("reqOrganization", reqOrganization) :
                new ObjectParameter("reqOrganization", typeof(string));
    
            var reqUserParameter = reqUser != null ?
                new ObjectParameter("reqUser", reqUser) :
                new ObjectParameter("reqUser", typeof(string));
    
            var reqPrivacyParameter = reqPrivacy.HasValue ?
                new ObjectParameter("reqPrivacy", reqPrivacy) :
                new ObjectParameter("reqPrivacy", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcREQRequisition_L_Result>("prcSpcReadprcREQRequisition_L", resultCode, resultMessage, reqCodeParameter, reqParentCodeParameter, reqCreationDateParameter, reqNameParameter, reqEnterpriseParameter, reqOrganizationParameter, reqUserParameter, reqPrivacyParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcREQRequisition_M_Result> prcSpcReadprcREQRequisition_M(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> reqCode, Nullable<int> reqParentCode, Nullable<System.DateTime> reqCreationDate, string reqName, string reqEnterprise, string reqOrganization, string reqUser, Nullable<int> reqPrivacy, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var reqCodeParameter = reqCode.HasValue ?
                new ObjectParameter("reqCode", reqCode) :
                new ObjectParameter("reqCode", typeof(int));
    
            var reqParentCodeParameter = reqParentCode.HasValue ?
                new ObjectParameter("reqParentCode", reqParentCode) :
                new ObjectParameter("reqParentCode", typeof(int));
    
            var reqCreationDateParameter = reqCreationDate.HasValue ?
                new ObjectParameter("reqCreationDate", reqCreationDate) :
                new ObjectParameter("reqCreationDate", typeof(System.DateTime));
    
            var reqNameParameter = reqName != null ?
                new ObjectParameter("reqName", reqName) :
                new ObjectParameter("reqName", typeof(string));
    
            var reqEnterpriseParameter = reqEnterprise != null ?
                new ObjectParameter("reqEnterprise", reqEnterprise) :
                new ObjectParameter("reqEnterprise", typeof(string));
    
            var reqOrganizationParameter = reqOrganization != null ?
                new ObjectParameter("reqOrganization", reqOrganization) :
                new ObjectParameter("reqOrganization", typeof(string));
    
            var reqUserParameter = reqUser != null ?
                new ObjectParameter("reqUser", reqUser) :
                new ObjectParameter("reqUser", typeof(string));
    
            var reqPrivacyParameter = reqPrivacy.HasValue ?
                new ObjectParameter("reqPrivacy", reqPrivacy) :
                new ObjectParameter("reqPrivacy", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcREQRequisition_M_Result>("prcSpcReadprcREQRequisition_M", resultCode, resultMessage, reqCodeParameter, reqParentCodeParameter, reqCreationDateParameter, reqNameParameter, reqEnterpriseParameter, reqOrganizationParameter, reqUserParameter, reqPrivacyParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcREQRequisition_N_Result> prcSpcReadprcREQRequisition_N(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> reqCode, Nullable<int> reqParentCode, Nullable<System.DateTime> reqCreationDate, string reqName, string reqEnterprise, string reqOrganization, string reqUser, Nullable<int> reqPrivacy, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var reqCodeParameter = reqCode.HasValue ?
                new ObjectParameter("reqCode", reqCode) :
                new ObjectParameter("reqCode", typeof(int));
    
            var reqParentCodeParameter = reqParentCode.HasValue ?
                new ObjectParameter("reqParentCode", reqParentCode) :
                new ObjectParameter("reqParentCode", typeof(int));
    
            var reqCreationDateParameter = reqCreationDate.HasValue ?
                new ObjectParameter("reqCreationDate", reqCreationDate) :
                new ObjectParameter("reqCreationDate", typeof(System.DateTime));
    
            var reqNameParameter = reqName != null ?
                new ObjectParameter("reqName", reqName) :
                new ObjectParameter("reqName", typeof(string));
    
            var reqEnterpriseParameter = reqEnterprise != null ?
                new ObjectParameter("reqEnterprise", reqEnterprise) :
                new ObjectParameter("reqEnterprise", typeof(string));
    
            var reqOrganizationParameter = reqOrganization != null ?
                new ObjectParameter("reqOrganization", reqOrganization) :
                new ObjectParameter("reqOrganization", typeof(string));
    
            var reqUserParameter = reqUser != null ?
                new ObjectParameter("reqUser", reqUser) :
                new ObjectParameter("reqUser", typeof(string));
    
            var reqPrivacyParameter = reqPrivacy.HasValue ?
                new ObjectParameter("reqPrivacy", reqPrivacy) :
                new ObjectParameter("reqPrivacy", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcREQRequisition_N_Result>("prcSpcReadprcREQRequisition_N", resultCode, resultMessage, reqCodeParameter, reqParentCodeParameter, reqCreationDateParameter, reqNameParameter, reqEnterpriseParameter, reqOrganizationParameter, reqUserParameter, reqPrivacyParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcRFBActAward_Result> prcSpcReadprcRFBActAward(ObjectParameter rESULTCODE, ObjectParameter rESULTMESSAGE, Nullable<int> rBHCODE, Nullable<int> eNUMPROCUREMENTATTACHMENT)
        {
            var rBHCODEParameter = rBHCODE.HasValue ?
                new ObjectParameter("RBHCODE", rBHCODE) :
                new ObjectParameter("RBHCODE", typeof(int));
    
            var eNUMPROCUREMENTATTACHMENTParameter = eNUMPROCUREMENTATTACHMENT.HasValue ?
                new ObjectParameter("ENUMPROCUREMENTATTACHMENT", eNUMPROCUREMENTATTACHMENT) :
                new ObjectParameter("ENUMPROCUREMENTATTACHMENT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcRFBActAward_Result>("prcSpcReadprcRFBActAward", rESULTCODE, rESULTMESSAGE, rBHCODEParameter, eNUMPROCUREMENTATTACHMENTParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcRFBApproval_Result> prcSpcReadprcRFBApproval(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rapRFBCode, Nullable<int> rapApprovalType, string rapApproverName, Nullable<int> rapApprovalStep, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var rapRFBCodeParameter = rapRFBCode.HasValue ?
                new ObjectParameter("rapRFBCode", rapRFBCode) :
                new ObjectParameter("rapRFBCode", typeof(int));
    
            var rapApprovalTypeParameter = rapApprovalType.HasValue ?
                new ObjectParameter("rapApprovalType", rapApprovalType) :
                new ObjectParameter("rapApprovalType", typeof(int));
    
            var rapApproverNameParameter = rapApproverName != null ?
                new ObjectParameter("rapApproverName", rapApproverName) :
                new ObjectParameter("rapApproverName", typeof(string));
    
            var rapApprovalStepParameter = rapApprovalStep.HasValue ?
                new ObjectParameter("rapApprovalStep", rapApprovalStep) :
                new ObjectParameter("rapApprovalStep", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcRFBApproval_Result>("prcSpcReadprcRFBApproval", resultCode, resultMessage, rapRFBCodeParameter, rapApprovalTypeParameter, rapApproverNameParameter, rapApprovalStepParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcRFBApprovalType_Result> prcSpcReadprcRFBApprovalType(ObjectParameter resultCode, ObjectParameter resultMessage)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcRFBApprovalType_Result>("prcSpcReadprcRFBApprovalType", resultCode, resultMessage);
        }
    
        public virtual ObjectResult<prcSpcReadprcRFBAwardCriteria_Result> prcSpcReadprcRFBAwardCriteria(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbaRFBCode, string rbaName, Nullable<int> rbaDataType, Nullable<int> rbaScope, Nullable<int> rbaSourceID, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var rbaRFBCodeParameter = rbaRFBCode.HasValue ?
                new ObjectParameter("rbaRFBCode", rbaRFBCode) :
                new ObjectParameter("rbaRFBCode", typeof(int));
    
            var rbaNameParameter = rbaName != null ?
                new ObjectParameter("rbaName", rbaName) :
                new ObjectParameter("rbaName", typeof(string));
    
            var rbaDataTypeParameter = rbaDataType.HasValue ?
                new ObjectParameter("rbaDataType", rbaDataType) :
                new ObjectParameter("rbaDataType", typeof(int));
    
            var rbaScopeParameter = rbaScope.HasValue ?
                new ObjectParameter("rbaScope", rbaScope) :
                new ObjectParameter("rbaScope", typeof(int));
    
            var rbaSourceIDParameter = rbaSourceID.HasValue ?
                new ObjectParameter("rbaSourceID", rbaSourceID) :
                new ObjectParameter("rbaSourceID", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcRFBAwardCriteria_Result>("prcSpcReadprcRFBAwardCriteria", resultCode, resultMessage, rbaRFBCodeParameter, rbaNameParameter, rbaDataTypeParameter, rbaScopeParameter, rbaSourceIDParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcRFBAwardCriteriaII_Result> prcSpcReadprcRFBAwardCriteriaII(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbaRFBCode, string rbaName, Nullable<int> rbaDataType, Nullable<int> rbaScope, Nullable<int> rbaSourceID, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var rbaRFBCodeParameter = rbaRFBCode.HasValue ?
                new ObjectParameter("rbaRFBCode", rbaRFBCode) :
                new ObjectParameter("rbaRFBCode", typeof(int));
    
            var rbaNameParameter = rbaName != null ?
                new ObjectParameter("rbaName", rbaName) :
                new ObjectParameter("rbaName", typeof(string));
    
            var rbaDataTypeParameter = rbaDataType.HasValue ?
                new ObjectParameter("rbaDataType", rbaDataType) :
                new ObjectParameter("rbaDataType", typeof(int));
    
            var rbaScopeParameter = rbaScope.HasValue ?
                new ObjectParameter("rbaScope", rbaScope) :
                new ObjectParameter("rbaScope", typeof(int));
    
            var rbaSourceIDParameter = rbaSourceID.HasValue ?
                new ObjectParameter("rbaSourceID", rbaSourceID) :
                new ObjectParameter("rbaSourceID", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcRFBAwardCriteriaII_Result>("prcSpcReadprcRFBAwardCriteriaII", resultCode, resultMessage, rbaRFBCodeParameter, rbaNameParameter, rbaDataTypeParameter, rbaScopeParameter, rbaSourceIDParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcRFBAwardCriteriaScope_Result> prcSpcReadprcRFBAwardCriteriaScope(ObjectParameter resultCode, ObjectParameter resultMessage)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcRFBAwardCriteriaScope_Result>("prcSpcReadprcRFBAwardCriteriaScope", resultCode, resultMessage);
        }
    
        public virtual ObjectResult<prcSpcReadprcRFBAwardType_Result> prcSpcReadprcRFBAwardType(ObjectParameter resultCode, ObjectParameter resultMessage)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcRFBAwardType_Result>("prcSpcReadprcRFBAwardType", resultCode, resultMessage);
        }
    
        public virtual ObjectResult<prcSpcReadprcRFBAwardTypeCMB_Result> prcSpcReadprcRFBAwardTypeCMB(ObjectParameter resultCode, ObjectParameter resultMessage)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcRFBAwardTypeCMB_Result>("prcSpcReadprcRFBAwardTypeCMB", resultCode, resultMessage);
        }
    
        public virtual ObjectResult<prcSpcReadprcRFBBidField_Result> prcSpcReadprcRFBBidField(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbbBidFieldScope, Nullable<short> rbbIsSupplierVisible, Nullable<short> rbbIsMandatory, string rbbName, Nullable<int> rbbRFBCode, Nullable<int> rbbID, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var rbbBidFieldScopeParameter = rbbBidFieldScope.HasValue ?
                new ObjectParameter("rbbBidFieldScope", rbbBidFieldScope) :
                new ObjectParameter("rbbBidFieldScope", typeof(int));
    
            var rbbIsSupplierVisibleParameter = rbbIsSupplierVisible.HasValue ?
                new ObjectParameter("rbbIsSupplierVisible", rbbIsSupplierVisible) :
                new ObjectParameter("rbbIsSupplierVisible", typeof(short));
    
            var rbbIsMandatoryParameter = rbbIsMandatory.HasValue ?
                new ObjectParameter("rbbIsMandatory", rbbIsMandatory) :
                new ObjectParameter("rbbIsMandatory", typeof(short));
    
            var rbbNameParameter = rbbName != null ?
                new ObjectParameter("rbbName", rbbName) :
                new ObjectParameter("rbbName", typeof(string));
    
            var rbbRFBCodeParameter = rbbRFBCode.HasValue ?
                new ObjectParameter("rbbRFBCode", rbbRFBCode) :
                new ObjectParameter("rbbRFBCode", typeof(int));
    
            var rbbIDParameter = rbbID.HasValue ?
                new ObjectParameter("rbbID", rbbID) :
                new ObjectParameter("rbbID", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcRFBBidField_Result>("prcSpcReadprcRFBBidField", resultCode, resultMessage, rbbBidFieldScopeParameter, rbbIsSupplierVisibleParameter, rbbIsMandatoryParameter, rbbNameParameter, rbbRFBCodeParameter, rbbIDParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcRFBBuyUnit_Result> prcSpcReadprcRFBBuyUnit(ObjectParameter resultCode, ObjectParameter resultMessage, string orgCode, Nullable<int> orgClass)
        {
            var orgCodeParameter = orgCode != null ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(string));
    
            var orgClassParameter = orgClass.HasValue ?
                new ObjectParameter("orgClass", orgClass) :
                new ObjectParameter("orgClass", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcRFBBuyUnit_Result>("prcSpcReadprcRFBBuyUnit", resultCode, resultMessage, orgCodeParameter, orgClassParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcRFBClause_Result> prcSpcReadprcRFBClause(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbcRFBCode, Nullable<short> rbcSequence, string rbcTitle, string rbcDescription, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var rbcRFBCodeParameter = rbcRFBCode.HasValue ?
                new ObjectParameter("rbcRFBCode", rbcRFBCode) :
                new ObjectParameter("rbcRFBCode", typeof(int));
    
            var rbcSequenceParameter = rbcSequence.HasValue ?
                new ObjectParameter("rbcSequence", rbcSequence) :
                new ObjectParameter("rbcSequence", typeof(short));
    
            var rbcTitleParameter = rbcTitle != null ?
                new ObjectParameter("rbcTitle", rbcTitle) :
                new ObjectParameter("rbcTitle", typeof(string));
    
            var rbcDescriptionParameter = rbcDescription != null ?
                new ObjectParameter("rbcDescription", rbcDescription) :
                new ObjectParameter("rbcDescription", typeof(string));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcRFBClause_Result>("prcSpcReadprcRFBClause", resultCode, resultMessage, rbcRFBCodeParameter, rbcSequenceParameter, rbcTitleParameter, rbcDescriptionParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcRFBContractPaymentMethod_Result> prcSpcReadprcRFBContractPaymentMethod(ObjectParameter resultCode, ObjectParameter resultMessage)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcRFBContractPaymentMethod_Result>("prcSpcReadprcRFBContractPaymentMethod", resultCode, resultMessage);
        }
    
        public virtual ObjectResult<prcSpcReadprcRFBContractTimePeriod_Result> prcSpcReadprcRFBContractTimePeriod(ObjectParameter resultCode, ObjectParameter resultMessage)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcRFBContractTimePeriod_Result>("prcSpcReadprcRFBContractTimePeriod", resultCode, resultMessage);
        }
    
        public virtual ObjectResult<prcSpcReadprcRFBCurrency_Result> prcSpcReadprcRFBCurrency(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<short> crcIsActive, string crcCode, Nullable<short> crcIsDefault, string crcName, string crcSymbol, Nullable<short> crcDecimalPlaces, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var crcIsActiveParameter = crcIsActive.HasValue ?
                new ObjectParameter("crcIsActive", crcIsActive) :
                new ObjectParameter("crcIsActive", typeof(short));
    
            var crcCodeParameter = crcCode != null ?
                new ObjectParameter("crcCode", crcCode) :
                new ObjectParameter("crcCode", typeof(string));
    
            var crcIsDefaultParameter = crcIsDefault.HasValue ?
                new ObjectParameter("crcIsDefault", crcIsDefault) :
                new ObjectParameter("crcIsDefault", typeof(short));
    
            var crcNameParameter = crcName != null ?
                new ObjectParameter("crcName", crcName) :
                new ObjectParameter("crcName", typeof(string));
    
            var crcSymbolParameter = crcSymbol != null ?
                new ObjectParameter("crcSymbol", crcSymbol) :
                new ObjectParameter("crcSymbol", typeof(string));
    
            var crcDecimalPlacesParameter = crcDecimalPlaces.HasValue ?
                new ObjectParameter("crcDecimalPlaces", crcDecimalPlaces) :
                new ObjectParameter("crcDecimalPlaces", typeof(short));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcRFBCurrency_Result>("prcSpcReadprcRFBCurrency", resultCode, resultMessage, crcIsActiveParameter, crcCodeParameter, crcIsDefaultParameter, crcNameParameter, crcSymbolParameter, crcDecimalPlacesParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcRFBDate_Result> prcSpcReadprcRFBDate(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<System.DateTime> rbdEstimatedContractSign, Nullable<System.DateTime> rbdEstimatedAwardDate, Nullable<int> rbdEstimatedAwardPeriod, Nullable<int> rbdEstimatedAwardProcess, Nullable<System.DateTime> rbdQuestionPublication, Nullable<System.DateTime> rbdQuestionClose, Nullable<System.DateTime> rbdQuestionOpening, Nullable<System.DateTime> rbdEconomicBidOpening, Nullable<System.DateTime> rbdTechnicalBidOpening, Nullable<System.DateTime> rbdEconomicBidReception, Nullable<System.DateTime> rbdTechnicalBidReception, Nullable<System.DateTime> rbdPhysicalMediaIssue, Nullable<int> rbdRFBCode)
        {
            var rbdEstimatedContractSignParameter = rbdEstimatedContractSign.HasValue ?
                new ObjectParameter("rbdEstimatedContractSign", rbdEstimatedContractSign) :
                new ObjectParameter("rbdEstimatedContractSign", typeof(System.DateTime));
    
            var rbdEstimatedAwardDateParameter = rbdEstimatedAwardDate.HasValue ?
                new ObjectParameter("rbdEstimatedAwardDate", rbdEstimatedAwardDate) :
                new ObjectParameter("rbdEstimatedAwardDate", typeof(System.DateTime));
    
            var rbdEstimatedAwardPeriodParameter = rbdEstimatedAwardPeriod.HasValue ?
                new ObjectParameter("rbdEstimatedAwardPeriod", rbdEstimatedAwardPeriod) :
                new ObjectParameter("rbdEstimatedAwardPeriod", typeof(int));
    
            var rbdEstimatedAwardProcessParameter = rbdEstimatedAwardProcess.HasValue ?
                new ObjectParameter("rbdEstimatedAwardProcess", rbdEstimatedAwardProcess) :
                new ObjectParameter("rbdEstimatedAwardProcess", typeof(int));
    
            var rbdQuestionPublicationParameter = rbdQuestionPublication.HasValue ?
                new ObjectParameter("rbdQuestionPublication", rbdQuestionPublication) :
                new ObjectParameter("rbdQuestionPublication", typeof(System.DateTime));
    
            var rbdQuestionCloseParameter = rbdQuestionClose.HasValue ?
                new ObjectParameter("rbdQuestionClose", rbdQuestionClose) :
                new ObjectParameter("rbdQuestionClose", typeof(System.DateTime));
    
            var rbdQuestionOpeningParameter = rbdQuestionOpening.HasValue ?
                new ObjectParameter("rbdQuestionOpening", rbdQuestionOpening) :
                new ObjectParameter("rbdQuestionOpening", typeof(System.DateTime));
    
            var rbdEconomicBidOpeningParameter = rbdEconomicBidOpening.HasValue ?
                new ObjectParameter("rbdEconomicBidOpening", rbdEconomicBidOpening) :
                new ObjectParameter("rbdEconomicBidOpening", typeof(System.DateTime));
    
            var rbdTechnicalBidOpeningParameter = rbdTechnicalBidOpening.HasValue ?
                new ObjectParameter("rbdTechnicalBidOpening", rbdTechnicalBidOpening) :
                new ObjectParameter("rbdTechnicalBidOpening", typeof(System.DateTime));
    
            var rbdEconomicBidReceptionParameter = rbdEconomicBidReception.HasValue ?
                new ObjectParameter("rbdEconomicBidReception", rbdEconomicBidReception) :
                new ObjectParameter("rbdEconomicBidReception", typeof(System.DateTime));
    
            var rbdTechnicalBidReceptionParameter = rbdTechnicalBidReception.HasValue ?
                new ObjectParameter("rbdTechnicalBidReception", rbdTechnicalBidReception) :
                new ObjectParameter("rbdTechnicalBidReception", typeof(System.DateTime));
    
            var rbdPhysicalMediaIssueParameter = rbdPhysicalMediaIssue.HasValue ?
                new ObjectParameter("rbdPhysicalMediaIssue", rbdPhysicalMediaIssue) :
                new ObjectParameter("rbdPhysicalMediaIssue", typeof(System.DateTime));
    
            var rbdRFBCodeParameter = rbdRFBCode.HasValue ?
                new ObjectParameter("rbdRFBCode", rbdRFBCode) :
                new ObjectParameter("rbdRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcRFBDate_Result>("prcSpcReadprcRFBDate", resultCode, resultMessage, rbdEstimatedContractSignParameter, rbdEstimatedAwardDateParameter, rbdEstimatedAwardPeriodParameter, rbdEstimatedAwardProcessParameter, rbdQuestionPublicationParameter, rbdQuestionCloseParameter, rbdQuestionOpeningParameter, rbdEconomicBidOpeningParameter, rbdTechnicalBidOpeningParameter, rbdEconomicBidReceptionParameter, rbdTechnicalBidReceptionParameter, rbdPhysicalMediaIssueParameter, rbdRFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcRFBDateContratacionServicios_Result> prcSpcReadprcRFBDateContratacionServicios(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbdRFBCode, Nullable<System.DateTime> rbdPhysicalMediaIssue, Nullable<System.DateTime> rbdTechnicalBidReception, Nullable<System.DateTime> rbdEconomicBidReception, Nullable<System.DateTime> rbdTechnicalBidOpening, Nullable<System.DateTime> rbdEconomicBidOpening, Nullable<System.DateTime> rbdQuestionOpening, Nullable<System.DateTime> rbdQuestionClose, Nullable<System.DateTime> rbdQuestionPublication, Nullable<int> rbdEstimatedAwardProcess, Nullable<int> rbdEstimatedAwardPeriod, Nullable<System.DateTime> rbdEstimatedAwardDate, Nullable<System.DateTime> rbdEstimatedContractSign, Nullable<System.DateTime> rbdOpeningDate)
        {
            var rbdRFBCodeParameter = rbdRFBCode.HasValue ?
                new ObjectParameter("rbdRFBCode", rbdRFBCode) :
                new ObjectParameter("rbdRFBCode", typeof(int));
    
            var rbdPhysicalMediaIssueParameter = rbdPhysicalMediaIssue.HasValue ?
                new ObjectParameter("rbdPhysicalMediaIssue", rbdPhysicalMediaIssue) :
                new ObjectParameter("rbdPhysicalMediaIssue", typeof(System.DateTime));
    
            var rbdTechnicalBidReceptionParameter = rbdTechnicalBidReception.HasValue ?
                new ObjectParameter("rbdTechnicalBidReception", rbdTechnicalBidReception) :
                new ObjectParameter("rbdTechnicalBidReception", typeof(System.DateTime));
    
            var rbdEconomicBidReceptionParameter = rbdEconomicBidReception.HasValue ?
                new ObjectParameter("rbdEconomicBidReception", rbdEconomicBidReception) :
                new ObjectParameter("rbdEconomicBidReception", typeof(System.DateTime));
    
            var rbdTechnicalBidOpeningParameter = rbdTechnicalBidOpening.HasValue ?
                new ObjectParameter("rbdTechnicalBidOpening", rbdTechnicalBidOpening) :
                new ObjectParameter("rbdTechnicalBidOpening", typeof(System.DateTime));
    
            var rbdEconomicBidOpeningParameter = rbdEconomicBidOpening.HasValue ?
                new ObjectParameter("rbdEconomicBidOpening", rbdEconomicBidOpening) :
                new ObjectParameter("rbdEconomicBidOpening", typeof(System.DateTime));
    
            var rbdQuestionOpeningParameter = rbdQuestionOpening.HasValue ?
                new ObjectParameter("rbdQuestionOpening", rbdQuestionOpening) :
                new ObjectParameter("rbdQuestionOpening", typeof(System.DateTime));
    
            var rbdQuestionCloseParameter = rbdQuestionClose.HasValue ?
                new ObjectParameter("rbdQuestionClose", rbdQuestionClose) :
                new ObjectParameter("rbdQuestionClose", typeof(System.DateTime));
    
            var rbdQuestionPublicationParameter = rbdQuestionPublication.HasValue ?
                new ObjectParameter("rbdQuestionPublication", rbdQuestionPublication) :
                new ObjectParameter("rbdQuestionPublication", typeof(System.DateTime));
    
            var rbdEstimatedAwardProcessParameter = rbdEstimatedAwardProcess.HasValue ?
                new ObjectParameter("rbdEstimatedAwardProcess", rbdEstimatedAwardProcess) :
                new ObjectParameter("rbdEstimatedAwardProcess", typeof(int));
    
            var rbdEstimatedAwardPeriodParameter = rbdEstimatedAwardPeriod.HasValue ?
                new ObjectParameter("rbdEstimatedAwardPeriod", rbdEstimatedAwardPeriod) :
                new ObjectParameter("rbdEstimatedAwardPeriod", typeof(int));
    
            var rbdEstimatedAwardDateParameter = rbdEstimatedAwardDate.HasValue ?
                new ObjectParameter("rbdEstimatedAwardDate", rbdEstimatedAwardDate) :
                new ObjectParameter("rbdEstimatedAwardDate", typeof(System.DateTime));
    
            var rbdEstimatedContractSignParameter = rbdEstimatedContractSign.HasValue ?
                new ObjectParameter("rbdEstimatedContractSign", rbdEstimatedContractSign) :
                new ObjectParameter("rbdEstimatedContractSign", typeof(System.DateTime));
    
            var rbdOpeningDateParameter = rbdOpeningDate.HasValue ?
                new ObjectParameter("rbdOpeningDate", rbdOpeningDate) :
                new ObjectParameter("rbdOpeningDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcRFBDateContratacionServicios_Result>("prcSpcReadprcRFBDateContratacionServicios", resultCode, resultMessage, rbdRFBCodeParameter, rbdPhysicalMediaIssueParameter, rbdTechnicalBidReceptionParameter, rbdEconomicBidReceptionParameter, rbdTechnicalBidOpeningParameter, rbdEconomicBidOpeningParameter, rbdQuestionOpeningParameter, rbdQuestionCloseParameter, rbdQuestionPublicationParameter, rbdEstimatedAwardProcessParameter, rbdEstimatedAwardPeriodParameter, rbdEstimatedAwardDateParameter, rbdEstimatedContractSignParameter, rbdOpeningDateParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcRFBDateMakeRazon_Result> prcSpcReadprcRFBDateMakeRazon(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbdRFBCode, Nullable<System.DateTime> rbdPhysicalMediaIssue, Nullable<System.DateTime> rbdTechnicalBidReception, Nullable<System.DateTime> rbdEconomicBidReception, Nullable<System.DateTime> rbdTechnicalBidOpening, Nullable<System.DateTime> rbdEconomicBidOpening, Nullable<System.DateTime> rbdQuestionOpening, Nullable<System.DateTime> rbdQuestionClose, Nullable<System.DateTime> rbdQuestionPublication, Nullable<int> rbdEstimatedAwardProcess, Nullable<int> rbdEstimatedAwardPeriod, Nullable<System.DateTime> rbdEstimatedAwardDate, Nullable<System.DateTime> rbdEstimatedContractSign, Nullable<System.DateTime> rbdOpeningDate)
        {
            var rbdRFBCodeParameter = rbdRFBCode.HasValue ?
                new ObjectParameter("rbdRFBCode", rbdRFBCode) :
                new ObjectParameter("rbdRFBCode", typeof(int));
    
            var rbdPhysicalMediaIssueParameter = rbdPhysicalMediaIssue.HasValue ?
                new ObjectParameter("rbdPhysicalMediaIssue", rbdPhysicalMediaIssue) :
                new ObjectParameter("rbdPhysicalMediaIssue", typeof(System.DateTime));
    
            var rbdTechnicalBidReceptionParameter = rbdTechnicalBidReception.HasValue ?
                new ObjectParameter("rbdTechnicalBidReception", rbdTechnicalBidReception) :
                new ObjectParameter("rbdTechnicalBidReception", typeof(System.DateTime));
    
            var rbdEconomicBidReceptionParameter = rbdEconomicBidReception.HasValue ?
                new ObjectParameter("rbdEconomicBidReception", rbdEconomicBidReception) :
                new ObjectParameter("rbdEconomicBidReception", typeof(System.DateTime));
    
            var rbdTechnicalBidOpeningParameter = rbdTechnicalBidOpening.HasValue ?
                new ObjectParameter("rbdTechnicalBidOpening", rbdTechnicalBidOpening) :
                new ObjectParameter("rbdTechnicalBidOpening", typeof(System.DateTime));
    
            var rbdEconomicBidOpeningParameter = rbdEconomicBidOpening.HasValue ?
                new ObjectParameter("rbdEconomicBidOpening", rbdEconomicBidOpening) :
                new ObjectParameter("rbdEconomicBidOpening", typeof(System.DateTime));
    
            var rbdQuestionOpeningParameter = rbdQuestionOpening.HasValue ?
                new ObjectParameter("rbdQuestionOpening", rbdQuestionOpening) :
                new ObjectParameter("rbdQuestionOpening", typeof(System.DateTime));
    
            var rbdQuestionCloseParameter = rbdQuestionClose.HasValue ?
                new ObjectParameter("rbdQuestionClose", rbdQuestionClose) :
                new ObjectParameter("rbdQuestionClose", typeof(System.DateTime));
    
            var rbdQuestionPublicationParameter = rbdQuestionPublication.HasValue ?
                new ObjectParameter("rbdQuestionPublication", rbdQuestionPublication) :
                new ObjectParameter("rbdQuestionPublication", typeof(System.DateTime));
    
            var rbdEstimatedAwardProcessParameter = rbdEstimatedAwardProcess.HasValue ?
                new ObjectParameter("rbdEstimatedAwardProcess", rbdEstimatedAwardProcess) :
                new ObjectParameter("rbdEstimatedAwardProcess", typeof(int));
    
            var rbdEstimatedAwardPeriodParameter = rbdEstimatedAwardPeriod.HasValue ?
                new ObjectParameter("rbdEstimatedAwardPeriod", rbdEstimatedAwardPeriod) :
                new ObjectParameter("rbdEstimatedAwardPeriod", typeof(int));
    
            var rbdEstimatedAwardDateParameter = rbdEstimatedAwardDate.HasValue ?
                new ObjectParameter("rbdEstimatedAwardDate", rbdEstimatedAwardDate) :
                new ObjectParameter("rbdEstimatedAwardDate", typeof(System.DateTime));
    
            var rbdEstimatedContractSignParameter = rbdEstimatedContractSign.HasValue ?
                new ObjectParameter("rbdEstimatedContractSign", rbdEstimatedContractSign) :
                new ObjectParameter("rbdEstimatedContractSign", typeof(System.DateTime));
    
            var rbdOpeningDateParameter = rbdOpeningDate.HasValue ?
                new ObjectParameter("rbdOpeningDate", rbdOpeningDate) :
                new ObjectParameter("rbdOpeningDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcRFBDateMakeRazon_Result>("prcSpcReadprcRFBDateMakeRazon", resultCode, resultMessage, rbdRFBCodeParameter, rbdPhysicalMediaIssueParameter, rbdTechnicalBidReceptionParameter, rbdEconomicBidReceptionParameter, rbdTechnicalBidOpeningParameter, rbdEconomicBidOpeningParameter, rbdQuestionOpeningParameter, rbdQuestionCloseParameter, rbdQuestionPublicationParameter, rbdEstimatedAwardProcessParameter, rbdEstimatedAwardPeriodParameter, rbdEstimatedAwardDateParameter, rbdEstimatedContractSignParameter, rbdOpeningDateParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcRFBDateMakeRazonForAfterPublication_Result> prcSpcReadprcRFBDateMakeRazonForAfterPublication(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbdRFBCode)
        {
            var rbdRFBCodeParameter = rbdRFBCode.HasValue ?
                new ObjectParameter("rbdRFBCode", rbdRFBCode) :
                new ObjectParameter("rbdRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcRFBDateMakeRazonForAfterPublication_Result>("prcSpcReadprcRFBDateMakeRazonForAfterPublication", resultCode, resultMessage, rbdRFBCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> prcSpcReadprcRFBDateMakeRazonForHeader(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbdRFBCode)
        {
            var rbdRFBCodeParameter = rbdRFBCode.HasValue ?
                new ObjectParameter("rbdRFBCode", rbdRFBCode) :
                new ObjectParameter("rbdRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("prcSpcReadprcRFBDateMakeRazonForHeader", resultCode, resultMessage, rbdRFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcRFBDateMakeRazonForPublication_Result> prcSpcReadprcRFBDateMakeRazonForPublication(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbdRFBCode)
        {
            var rbdRFBCodeParameter = rbdRFBCode.HasValue ?
                new ObjectParameter("rbdRFBCode", rbdRFBCode) :
                new ObjectParameter("rbdRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcRFBDateMakeRazonForPublication_Result>("prcSpcReadprcRFBDateMakeRazonForPublication", resultCode, resultMessage, rbdRFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcRFBDetailedDataHeader_Result> prcSpcReadprcRFBDetailedDataHeader(ObjectParameter resultCode, ObjectParameter resultMessage, string rbhName, string rbhOwnerCity, string rbhOwnerOrganizationCode, Nullable<int> rbhDocumentStatus, Nullable<System.DateTime> rbhFromDate, Nullable<System.DateTime> rbhToDate, Nullable<System.DateTime> rbhFromCloseDate, Nullable<System.DateTime> rbhToCloseDate, string rbhOrganization, Nullable<short> rstType)
        {
            var rbhNameParameter = rbhName != null ?
                new ObjectParameter("rbhName", rbhName) :
                new ObjectParameter("rbhName", typeof(string));
    
            var rbhOwnerCityParameter = rbhOwnerCity != null ?
                new ObjectParameter("rbhOwnerCity", rbhOwnerCity) :
                new ObjectParameter("rbhOwnerCity", typeof(string));
    
            var rbhOwnerOrganizationCodeParameter = rbhOwnerOrganizationCode != null ?
                new ObjectParameter("rbhOwnerOrganizationCode", rbhOwnerOrganizationCode) :
                new ObjectParameter("rbhOwnerOrganizationCode", typeof(string));
    
            var rbhDocumentStatusParameter = rbhDocumentStatus.HasValue ?
                new ObjectParameter("rbhDocumentStatus", rbhDocumentStatus) :
                new ObjectParameter("rbhDocumentStatus", typeof(int));
    
            var rbhFromDateParameter = rbhFromDate.HasValue ?
                new ObjectParameter("rbhFromDate", rbhFromDate) :
                new ObjectParameter("rbhFromDate", typeof(System.DateTime));
    
            var rbhToDateParameter = rbhToDate.HasValue ?
                new ObjectParameter("rbhToDate", rbhToDate) :
                new ObjectParameter("rbhToDate", typeof(System.DateTime));
    
            var rbhFromCloseDateParameter = rbhFromCloseDate.HasValue ?
                new ObjectParameter("rbhFromCloseDate", rbhFromCloseDate) :
                new ObjectParameter("rbhFromCloseDate", typeof(System.DateTime));
    
            var rbhToCloseDateParameter = rbhToCloseDate.HasValue ?
                new ObjectParameter("rbhToCloseDate", rbhToCloseDate) :
                new ObjectParameter("rbhToCloseDate", typeof(System.DateTime));
    
            var rbhOrganizationParameter = rbhOrganization != null ?
                new ObjectParameter("rbhOrganization", rbhOrganization) :
                new ObjectParameter("rbhOrganization", typeof(string));
    
            var rstTypeParameter = rstType.HasValue ?
                new ObjectParameter("rstType", rstType) :
                new ObjectParameter("rstType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcRFBDetailedDataHeader_Result>("prcSpcReadprcRFBDetailedDataHeader", resultCode, resultMessage, rbhNameParameter, rbhOwnerCityParameter, rbhOwnerOrganizationCodeParameter, rbhDocumentStatusParameter, rbhFromDateParameter, rbhToDateParameter, rbhFromCloseDateParameter, rbhToCloseDateParameter, rbhOrganizationParameter, rstTypeParameter);
        }
    
        public virtual int prcSpcReadprcRFBGuarantee(ObjectParameter resultCode, ObjectParameter resultMessage, string rgaAmountType, Nullable<System.DateTime> rgaExpirationDate, Nullable<int> rgaDocumentType, Nullable<int> rgaGuaranteeType, Nullable<short> rgaSequence, Nullable<int> rgaRFBCode, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var rgaAmountTypeParameter = rgaAmountType != null ?
                new ObjectParameter("rgaAmountType", rgaAmountType) :
                new ObjectParameter("rgaAmountType", typeof(string));
    
            var rgaExpirationDateParameter = rgaExpirationDate.HasValue ?
                new ObjectParameter("rgaExpirationDate", rgaExpirationDate) :
                new ObjectParameter("rgaExpirationDate", typeof(System.DateTime));
    
            var rgaDocumentTypeParameter = rgaDocumentType.HasValue ?
                new ObjectParameter("rgaDocumentType", rgaDocumentType) :
                new ObjectParameter("rgaDocumentType", typeof(int));
    
            var rgaGuaranteeTypeParameter = rgaGuaranteeType.HasValue ?
                new ObjectParameter("rgaGuaranteeType", rgaGuaranteeType) :
                new ObjectParameter("rgaGuaranteeType", typeof(int));
    
            var rgaSequenceParameter = rgaSequence.HasValue ?
                new ObjectParameter("rgaSequence", rgaSequence) :
                new ObjectParameter("rgaSequence", typeof(short));
    
            var rgaRFBCodeParameter = rgaRFBCode.HasValue ?
                new ObjectParameter("rgaRFBCode", rgaRFBCode) :
                new ObjectParameter("rgaRFBCode", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcReadprcRFBGuarantee", resultCode, resultMessage, rgaAmountTypeParameter, rgaExpirationDateParameter, rgaDocumentTypeParameter, rgaGuaranteeTypeParameter, rgaSequenceParameter, rgaRFBCodeParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcRFBGuarantee_A_Result> prcSpcReadprcRFBGuarantee_A(ObjectParameter resultCode, ObjectParameter resultMessage, string rgaAmountType, Nullable<System.DateTime> rgaExpirationDate, Nullable<int> rgaDocumentType, Nullable<int> rgaGuaranteeType, Nullable<short> rgaSequence, Nullable<int> rgaRFBCode, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var rgaAmountTypeParameter = rgaAmountType != null ?
                new ObjectParameter("rgaAmountType", rgaAmountType) :
                new ObjectParameter("rgaAmountType", typeof(string));
    
            var rgaExpirationDateParameter = rgaExpirationDate.HasValue ?
                new ObjectParameter("rgaExpirationDate", rgaExpirationDate) :
                new ObjectParameter("rgaExpirationDate", typeof(System.DateTime));
    
            var rgaDocumentTypeParameter = rgaDocumentType.HasValue ?
                new ObjectParameter("rgaDocumentType", rgaDocumentType) :
                new ObjectParameter("rgaDocumentType", typeof(int));
    
            var rgaGuaranteeTypeParameter = rgaGuaranteeType.HasValue ?
                new ObjectParameter("rgaGuaranteeType", rgaGuaranteeType) :
                new ObjectParameter("rgaGuaranteeType", typeof(int));
    
            var rgaSequenceParameter = rgaSequence.HasValue ?
                new ObjectParameter("rgaSequence", rgaSequence) :
                new ObjectParameter("rgaSequence", typeof(short));
    
            var rgaRFBCodeParameter = rgaRFBCode.HasValue ?
                new ObjectParameter("rgaRFBCode", rgaRFBCode) :
                new ObjectParameter("rgaRFBCode", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcRFBGuarantee_A_Result>("prcSpcReadprcRFBGuarantee_A", resultCode, resultMessage, rgaAmountTypeParameter, rgaExpirationDateParameter, rgaDocumentTypeParameter, rgaGuaranteeTypeParameter, rgaSequenceParameter, rgaRFBCodeParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcRFBHeader_Result> prcSpcReadprcRFBHeader(ObjectParameter resultCode, ObjectParameter resultMessage, string rbhCurrency, Nullable<int> rbhContactCode, string rbhOwnerOrganizationCode, Nullable<int> rbhProcessSubType, Nullable<int> rbhProcessType, Nullable<int> rbhDocumentSubType, Nullable<int> rbhDocumentType, Nullable<int> rbhTemplate, string rbhUser, string rbhOrganization, string rbhEnterprise, Nullable<System.DateTime> rbhCreationDate, Nullable<short> rbhIsTemplate, Nullable<int> rbhCode, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var rbhCurrencyParameter = rbhCurrency != null ?
                new ObjectParameter("rbhCurrency", rbhCurrency) :
                new ObjectParameter("rbhCurrency", typeof(string));
    
            var rbhContactCodeParameter = rbhContactCode.HasValue ?
                new ObjectParameter("rbhContactCode", rbhContactCode) :
                new ObjectParameter("rbhContactCode", typeof(int));
    
            var rbhOwnerOrganizationCodeParameter = rbhOwnerOrganizationCode != null ?
                new ObjectParameter("rbhOwnerOrganizationCode", rbhOwnerOrganizationCode) :
                new ObjectParameter("rbhOwnerOrganizationCode", typeof(string));
    
            var rbhProcessSubTypeParameter = rbhProcessSubType.HasValue ?
                new ObjectParameter("rbhProcessSubType", rbhProcessSubType) :
                new ObjectParameter("rbhProcessSubType", typeof(int));
    
            var rbhProcessTypeParameter = rbhProcessType.HasValue ?
                new ObjectParameter("rbhProcessType", rbhProcessType) :
                new ObjectParameter("rbhProcessType", typeof(int));
    
            var rbhDocumentSubTypeParameter = rbhDocumentSubType.HasValue ?
                new ObjectParameter("rbhDocumentSubType", rbhDocumentSubType) :
                new ObjectParameter("rbhDocumentSubType", typeof(int));
    
            var rbhDocumentTypeParameter = rbhDocumentType.HasValue ?
                new ObjectParameter("rbhDocumentType", rbhDocumentType) :
                new ObjectParameter("rbhDocumentType", typeof(int));
    
            var rbhTemplateParameter = rbhTemplate.HasValue ?
                new ObjectParameter("rbhTemplate", rbhTemplate) :
                new ObjectParameter("rbhTemplate", typeof(int));
    
            var rbhUserParameter = rbhUser != null ?
                new ObjectParameter("rbhUser", rbhUser) :
                new ObjectParameter("rbhUser", typeof(string));
    
            var rbhOrganizationParameter = rbhOrganization != null ?
                new ObjectParameter("rbhOrganization", rbhOrganization) :
                new ObjectParameter("rbhOrganization", typeof(string));
    
            var rbhEnterpriseParameter = rbhEnterprise != null ?
                new ObjectParameter("rbhEnterprise", rbhEnterprise) :
                new ObjectParameter("rbhEnterprise", typeof(string));
    
            var rbhCreationDateParameter = rbhCreationDate.HasValue ?
                new ObjectParameter("rbhCreationDate", rbhCreationDate) :
                new ObjectParameter("rbhCreationDate", typeof(System.DateTime));
    
            var rbhIsTemplateParameter = rbhIsTemplate.HasValue ?
                new ObjectParameter("rbhIsTemplate", rbhIsTemplate) :
                new ObjectParameter("rbhIsTemplate", typeof(short));
    
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcRFBHeader_Result>("prcSpcReadprcRFBHeader", resultCode, resultMessage, rbhCurrencyParameter, rbhContactCodeParameter, rbhOwnerOrganizationCodeParameter, rbhProcessSubTypeParameter, rbhProcessTypeParameter, rbhDocumentSubTypeParameter, rbhDocumentTypeParameter, rbhTemplateParameter, rbhUserParameter, rbhOrganizationParameter, rbhEnterpriseParameter, rbhCreationDateParameter, rbhIsTemplateParameter, rbhCodeParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcRFBInvitation_Result> prcSpcReadprcRFBInvitation(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbhCode)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcRFBInvitation_Result>("prcSpcReadprcRFBInvitation", resultCode, resultMessage, rbhCodeParameter);
        }
    
        public virtual int prcSpcReadprcRFBInvitationCategories(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbtSchema, Nullable<int> rbhCode)
        {
            var rbtSchemaParameter = rbtSchema.HasValue ?
                new ObjectParameter("rbtSchema", rbtSchema) :
                new ObjectParameter("rbtSchema", typeof(int));
    
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcReadprcRFBInvitationCategories", resultCode, resultMessage, rbtSchemaParameter, rbhCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcRFBItem_Result> prcSpcReadprcRFBItem(ObjectParameter resultCode, ObjectParameter resultMessage, string rbiUOM, string rbiName, string rbiCategory, Nullable<int> rbiSchema, Nullable<int> rbiRFBCode, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var rbiUOMParameter = rbiUOM != null ?
                new ObjectParameter("rbiUOM", rbiUOM) :
                new ObjectParameter("rbiUOM", typeof(string));
    
            var rbiNameParameter = rbiName != null ?
                new ObjectParameter("rbiName", rbiName) :
                new ObjectParameter("rbiName", typeof(string));
    
            var rbiCategoryParameter = rbiCategory != null ?
                new ObjectParameter("rbiCategory", rbiCategory) :
                new ObjectParameter("rbiCategory", typeof(string));
    
            var rbiSchemaParameter = rbiSchema.HasValue ?
                new ObjectParameter("rbiSchema", rbiSchema) :
                new ObjectParameter("rbiSchema", typeof(int));
    
            var rbiRFBCodeParameter = rbiRFBCode.HasValue ?
                new ObjectParameter("rbiRFBCode", rbiRFBCode) :
                new ObjectParameter("rbiRFBCode", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcRFBItem_Result>("prcSpcReadprcRFBItem", resultCode, resultMessage, rbiUOMParameter, rbiNameParameter, rbiCategoryParameter, rbiSchemaParameter, rbiRFBCodeParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcRFBLegalRecord_Result> prcSpcReadprcRFBLegalRecord(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rlrRFBCode, Nullable<short> rlrSequence, Nullable<int> rlrLegalRecordType, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var rlrRFBCodeParameter = rlrRFBCode.HasValue ?
                new ObjectParameter("rlrRFBCode", rlrRFBCode) :
                new ObjectParameter("rlrRFBCode", typeof(int));
    
            var rlrSequenceParameter = rlrSequence.HasValue ?
                new ObjectParameter("rlrSequence", rlrSequence) :
                new ObjectParameter("rlrSequence", typeof(short));
    
            var rlrLegalRecordTypeParameter = rlrLegalRecordType.HasValue ?
                new ObjectParameter("rlrLegalRecordType", rlrLegalRecordType) :
                new ObjectParameter("rlrLegalRecordType", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcRFBLegalRecord_Result>("prcSpcReadprcRFBLegalRecord", resultCode, resultMessage, rlrRFBCodeParameter, rlrSequenceParameter, rlrLegalRecordTypeParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcRFBParticipants_Result> prcSpcReadprcRFBParticipants(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbhCode, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcRFBParticipants_Result>("prcSpcReadprcRFBParticipants", resultCode, resultMessage, rbhCodeParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcRFBProcessSubType_Result> prcSpcReadprcRFBProcessSubType(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rpsTimePeriod, string rpsName, Nullable<int> rpsCode, Nullable<short> rpsIsActive, Nullable<int> rpsProcessType, Nullable<int> rpsProcessSubType, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var rpsTimePeriodParameter = rpsTimePeriod.HasValue ?
                new ObjectParameter("rpsTimePeriod", rpsTimePeriod) :
                new ObjectParameter("rpsTimePeriod", typeof(int));
    
            var rpsNameParameter = rpsName != null ?
                new ObjectParameter("rpsName", rpsName) :
                new ObjectParameter("rpsName", typeof(string));
    
            var rpsCodeParameter = rpsCode.HasValue ?
                new ObjectParameter("rpsCode", rpsCode) :
                new ObjectParameter("rpsCode", typeof(int));
    
            var rpsIsActiveParameter = rpsIsActive.HasValue ?
                new ObjectParameter("rpsIsActive", rpsIsActive) :
                new ObjectParameter("rpsIsActive", typeof(short));
    
            var rpsProcessTypeParameter = rpsProcessType.HasValue ?
                new ObjectParameter("rpsProcessType", rpsProcessType) :
                new ObjectParameter("rpsProcessType", typeof(int));
    
            var rpsProcessSubTypeParameter = rpsProcessSubType.HasValue ?
                new ObjectParameter("rpsProcessSubType", rpsProcessSubType) :
                new ObjectParameter("rpsProcessSubType", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcRFBProcessSubType_Result>("prcSpcReadprcRFBProcessSubType", resultCode, resultMessage, rpsTimePeriodParameter, rpsNameParameter, rpsCodeParameter, rpsIsActiveParameter, rpsProcessTypeParameter, rpsProcessSubTypeParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcRFBProcessType_Result> prcSpcReadprcRFBProcessType(ObjectParameter resultCode, ObjectParameter resultMessage, string rptName, Nullable<int> rptCode, Nullable<short> rptIsActive, Nullable<int> rptID, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var rptNameParameter = rptName != null ?
                new ObjectParameter("rptName", rptName) :
                new ObjectParameter("rptName", typeof(string));
    
            var rptCodeParameter = rptCode.HasValue ?
                new ObjectParameter("rptCode", rptCode) :
                new ObjectParameter("rptCode", typeof(int));
    
            var rptIsActiveParameter = rptIsActive.HasValue ?
                new ObjectParameter("rptIsActive", rptIsActive) :
                new ObjectParameter("rptIsActive", typeof(short));
    
            var rptIDParameter = rptID.HasValue ?
                new ObjectParameter("rptID", rptID) :
                new ObjectParameter("rptID", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcRFBProcessType_Result>("prcSpcReadprcRFBProcessType", resultCode, resultMessage, rptNameParameter, rptCodeParameter, rptIsActiveParameter, rptIDParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcRFBProducts_Result> prcSpcReadprcRFBProducts(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbiRFBCode)
        {
            var rbiRFBCodeParameter = rbiRFBCode.HasValue ?
                new ObjectParameter("rbiRFBCode", rbiRFBCode) :
                new ObjectParameter("rbiRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcRFBProducts_Result>("prcSpcReadprcRFBProducts", resultCode, resultMessage, rbiRFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcRFBRequisite_Result> prcSpcReadprcRFBRequisite(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<short> rbrSequence, string rbrTitle, Nullable<int> rbrRequisiteType, Nullable<int> rbrRFBCode, Nullable<int> rbrID, Nullable<int> rbrSourceID, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var rbrSequenceParameter = rbrSequence.HasValue ?
                new ObjectParameter("rbrSequence", rbrSequence) :
                new ObjectParameter("rbrSequence", typeof(short));
    
            var rbrTitleParameter = rbrTitle != null ?
                new ObjectParameter("rbrTitle", rbrTitle) :
                new ObjectParameter("rbrTitle", typeof(string));
    
            var rbrRequisiteTypeParameter = rbrRequisiteType.HasValue ?
                new ObjectParameter("rbrRequisiteType", rbrRequisiteType) :
                new ObjectParameter("rbrRequisiteType", typeof(int));
    
            var rbrRFBCodeParameter = rbrRFBCode.HasValue ?
                new ObjectParameter("rbrRFBCode", rbrRFBCode) :
                new ObjectParameter("rbrRFBCode", typeof(int));
    
            var rbrIDParameter = rbrID.HasValue ?
                new ObjectParameter("rbrID", rbrID) :
                new ObjectParameter("rbrID", typeof(int));
    
            var rbrSourceIDParameter = rbrSourceID.HasValue ?
                new ObjectParameter("rbrSourceID", rbrSourceID) :
                new ObjectParameter("rbrSourceID", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcRFBRequisite_Result>("prcSpcReadprcRFBRequisite", resultCode, resultMessage, rbrSequenceParameter, rbrTitleParameter, rbrRequisiteTypeParameter, rbrRFBCodeParameter, rbrIDParameter, rbrSourceIDParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcRFBStatus_Result> prcSpcReadprcRFBStatus(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<short> rstType, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var rstTypeParameter = rstType.HasValue ?
                new ObjectParameter("rstType", rstType) :
                new ObjectParameter("rstType", typeof(short));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcRFBStatus_Result>("prcSpcReadprcRFBStatus", resultCode, resultMessage, rstTypeParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcRFBSummarizedDataHeader_Result> prcSpcReadprcRFBSummarizedDataHeader(ObjectParameter resultCode, ObjectParameter resultMessage, string rbhName, string rbhOwnerCity, string rbhOwnerOrganizationCode, Nullable<int> rbhDocumentStatus, Nullable<System.DateTime> rbhFromDate, Nullable<System.DateTime> rbhToDate, Nullable<System.DateTime> rbhFromCloseDate, Nullable<System.DateTime> rbhToCloseDate, string rbhOrganization, Nullable<short> rstType)
        {
            var rbhNameParameter = rbhName != null ?
                new ObjectParameter("rbhName", rbhName) :
                new ObjectParameter("rbhName", typeof(string));
    
            var rbhOwnerCityParameter = rbhOwnerCity != null ?
                new ObjectParameter("rbhOwnerCity", rbhOwnerCity) :
                new ObjectParameter("rbhOwnerCity", typeof(string));
    
            var rbhOwnerOrganizationCodeParameter = rbhOwnerOrganizationCode != null ?
                new ObjectParameter("rbhOwnerOrganizationCode", rbhOwnerOrganizationCode) :
                new ObjectParameter("rbhOwnerOrganizationCode", typeof(string));
    
            var rbhDocumentStatusParameter = rbhDocumentStatus.HasValue ?
                new ObjectParameter("rbhDocumentStatus", rbhDocumentStatus) :
                new ObjectParameter("rbhDocumentStatus", typeof(int));
    
            var rbhFromDateParameter = rbhFromDate.HasValue ?
                new ObjectParameter("rbhFromDate", rbhFromDate) :
                new ObjectParameter("rbhFromDate", typeof(System.DateTime));
    
            var rbhToDateParameter = rbhToDate.HasValue ?
                new ObjectParameter("rbhToDate", rbhToDate) :
                new ObjectParameter("rbhToDate", typeof(System.DateTime));
    
            var rbhFromCloseDateParameter = rbhFromCloseDate.HasValue ?
                new ObjectParameter("rbhFromCloseDate", rbhFromCloseDate) :
                new ObjectParameter("rbhFromCloseDate", typeof(System.DateTime));
    
            var rbhToCloseDateParameter = rbhToCloseDate.HasValue ?
                new ObjectParameter("rbhToCloseDate", rbhToCloseDate) :
                new ObjectParameter("rbhToCloseDate", typeof(System.DateTime));
    
            var rbhOrganizationParameter = rbhOrganization != null ?
                new ObjectParameter("rbhOrganization", rbhOrganization) :
                new ObjectParameter("rbhOrganization", typeof(string));
    
            var rstTypeParameter = rstType.HasValue ?
                new ObjectParameter("rstType", rstType) :
                new ObjectParameter("rstType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcRFBSummarizedDataHeader_Result>("prcSpcReadprcRFBSummarizedDataHeader", resultCode, resultMessage, rbhNameParameter, rbhOwnerCityParameter, rbhOwnerOrganizationCodeParameter, rbhDocumentStatusParameter, rbhFromDateParameter, rbhToDateParameter, rbhFromCloseDateParameter, rbhToCloseDateParameter, rbhOrganizationParameter, rstTypeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcRFBTimePeriod_Result> prcSpcReadprcRFBTimePeriod(ObjectParameter resultCode, ObjectParameter resultMessage)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcRFBTimePeriod_Result>("prcSpcReadprcRFBTimePeriod", resultCode, resultMessage);
        }
    
        public virtual ObjectResult<prcSpcReadprcRFBUserDefinedDate_Result> prcSpcReadprcRFBUserDefinedDate(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rudRFBCode, string rudName, Nullable<System.DateTime> rudValue, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var rudRFBCodeParameter = rudRFBCode.HasValue ?
                new ObjectParameter("rudRFBCode", rudRFBCode) :
                new ObjectParameter("rudRFBCode", typeof(int));
    
            var rudNameParameter = rudName != null ?
                new ObjectParameter("rudName", rudName) :
                new ObjectParameter("rudName", typeof(string));
    
            var rudValueParameter = rudValue.HasValue ?
                new ObjectParameter("rudValue", rudValue) :
                new ObjectParameter("rudValue", typeof(System.DateTime));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcRFBUserDefinedDate_Result>("prcSpcReadprcRFBUserDefinedDate", resultCode, resultMessage, rudRFBCodeParameter, rudNameParameter, rudValueParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadprcRFBVersion_Result> prcSpcReadprcRFBVersion(ObjectParameter resultCode, ObjectParameter resultMessage, string rbvXML, Nullable<int> rbvRFBStatus, Nullable<System.DateTime> rbvDate, Nullable<short> rbvVersion, Nullable<int> rbvRFBCode, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var rbvXMLParameter = rbvXML != null ?
                new ObjectParameter("rbvXML", rbvXML) :
                new ObjectParameter("rbvXML", typeof(string));
    
            var rbvRFBStatusParameter = rbvRFBStatus.HasValue ?
                new ObjectParameter("rbvRFBStatus", rbvRFBStatus) :
                new ObjectParameter("rbvRFBStatus", typeof(int));
    
            var rbvDateParameter = rbvDate.HasValue ?
                new ObjectParameter("rbvDate", rbvDate) :
                new ObjectParameter("rbvDate", typeof(System.DateTime));
    
            var rbvVersionParameter = rbvVersion.HasValue ?
                new ObjectParameter("rbvVersion", rbvVersion) :
                new ObjectParameter("rbvVersion", typeof(short));
    
            var rbvRFBCodeParameter = rbvRFBCode.HasValue ?
                new ObjectParameter("rbvRFBCode", rbvRFBCode) :
                new ObjectParameter("rbvRFBCode", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadprcRFBVersion_Result>("prcSpcReadprcRFBVersion", resultCode, resultMessage, rbvXMLParameter, rbvRFBStatusParameter, rbvDateParameter, rbvVersionParameter, rbvRFBCodeParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual int prcSpcReadprcSectionsGoodAndService(ObjectParameter resultCode, ObjectParameter resultMessage, string content)
        {
            var contentParameter = content != null ?
                new ObjectParameter("content", content) :
                new ObjectParameter("content", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcReadprcSectionsGoodAndService", resultCode, resultMessage, contentParameter);
        }
    
        public virtual int prcSpcReadprcValidQuestion(ObjectParameter rESULTCODE, ObjectParameter rESULTMESSAGE, ObjectParameter rESULTVALID, Nullable<int> rBDRFBCODE)
        {
            var rBDRFBCODEParameter = rBDRFBCODE.HasValue ?
                new ObjectParameter("RBDRFBCODE", rBDRFBCODE) :
                new ObjectParameter("RBDRFBCODE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcReadprcValidQuestion", rESULTCODE, rESULTMESSAGE, rESULTVALID, rBDRFBCODEParameter);
        }
    
        public virtual int prcSpcReadprcValidQuestionByBiqBID(ObjectParameter rESULTCODE, ObjectParameter rESULTMESSAGE, ObjectParameter rESULTVALID, Nullable<int> bIDID)
        {
            var bIDIDParameter = bIDID.HasValue ?
                new ObjectParameter("BIDID", bIDID) :
                new ObjectParameter("BIDID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcReadprcValidQuestionByBiqBID", rESULTCODE, rESULTMESSAGE, rESULTVALID, bIDIDParameter);
        }
    
        public virtual int prcSpcReadprcViewAllQuestions(ObjectParameter resultCode, ObjectParameter resultMessage, ObjectParameter resultValid, Nullable<int> rbdRFBCode)
        {
            var rbdRFBCodeParameter = rbdRFBCode.HasValue ?
                new ObjectParameter("rbdRFBCode", rbdRFBCode) :
                new ObjectParameter("rbdRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcReadprcViewAllQuestions", resultCode, resultMessage, resultValid, rbdRFBCodeParameter);
        }
    
        public virtual int prcSpcReadQuestion(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> biqBID)
        {
            var biqBIDParameter = biqBID.HasValue ?
                new ObjectParameter("biqBID", biqBID) :
                new ObjectParameter("biqBID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcReadQuestion", resultCode, resultMessage, biqBIDParameter);
        }
    
        public virtual int prcSpcReadQuestionByRFBCode(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> bidRFBCode)
        {
            var bidRFBCodeParameter = bidRFBCode.HasValue ?
                new ObjectParameter("bidRFBCode", bidRFBCode) :
                new ObjectParameter("bidRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcReadQuestionByRFBCode", resultCode, resultMessage, bidRFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadRFBItemDetails_Result> prcSpcReadRFBItemDetails(string rbiUOM, string rbiName, string rbiCategory, Nullable<int> rbiSchema, Nullable<int> rbiRFBCode)
        {
            var rbiUOMParameter = rbiUOM != null ?
                new ObjectParameter("rbiUOM", rbiUOM) :
                new ObjectParameter("rbiUOM", typeof(string));
    
            var rbiNameParameter = rbiName != null ?
                new ObjectParameter("rbiName", rbiName) :
                new ObjectParameter("rbiName", typeof(string));
    
            var rbiCategoryParameter = rbiCategory != null ?
                new ObjectParameter("rbiCategory", rbiCategory) :
                new ObjectParameter("rbiCategory", typeof(string));
    
            var rbiSchemaParameter = rbiSchema.HasValue ?
                new ObjectParameter("rbiSchema", rbiSchema) :
                new ObjectParameter("rbiSchema", typeof(int));
    
            var rbiRFBCodeParameter = rbiRFBCode.HasValue ?
                new ObjectParameter("rbiRFBCode", rbiRFBCode) :
                new ObjectParameter("rbiRFBCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadRFBItemDetails_Result>("prcSpcReadRFBItemDetails", rbiUOMParameter, rbiNameParameter, rbiCategoryParameter, rbiSchemaParameter, rbiRFBCodeParameter);
        }
    
        public virtual ObjectResult<prcSpcReadUOMTime_Result> prcSpcReadUOMTime(ObjectParameter resultCode, ObjectParameter resultMessage)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadUOMTime_Result>("prcSpcReadUOMTime", resultCode, resultMessage);
        }
    
        public virtual ObjectResult<prcSpcReadWizard_Result> prcSpcReadWizard(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> rbhCode)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReadWizard_Result>("prcSpcReadWizard", resultCode, resultMessage, rbhCodeParameter);
        }
    
        public virtual int prcSpcReAward(Nullable<int> rbhCode, string rbhExternalCode, ObjectParameter resultCode, ObjectParameter resultMessage)
        {
            var rbhCodeParameter = rbhCode.HasValue ?
                new ObjectParameter("rbhCode", rbhCode) :
                new ObjectParameter("rbhCode", typeof(int));
    
            var rbhExternalCodeParameter = rbhExternalCode != null ?
                new ObjectParameter("RbhExternalCode", rbhExternalCode) :
                new ObjectParameter("RbhExternalCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcReAward", rbhCodeParameter, rbhExternalCodeParameter, resultCode, resultMessage);
        }
    
        public virtual int prcSpcRegistrarCHP(Nullable<int> rlrSourceID, Nullable<int> rlrRFBCode, Nullable<int> rlrLegalRecordType, Nullable<short> rlrSequence, Nullable<int> rlrLegalRecordValue)
        {
            var rlrSourceIDParameter = rlrSourceID.HasValue ?
                new ObjectParameter("rlrSourceID", rlrSourceID) :
                new ObjectParameter("rlrSourceID", typeof(int));
    
            var rlrRFBCodeParameter = rlrRFBCode.HasValue ?
                new ObjectParameter("rlrRFBCode", rlrRFBCode) :
                new ObjectParameter("rlrRFBCode", typeof(int));
    
            var rlrLegalRecordTypeParameter = rlrLegalRecordType.HasValue ?
                new ObjectParameter("rlrLegalRecordType", rlrLegalRecordType) :
                new ObjectParameter("rlrLegalRecordType", typeof(int));
    
            var rlrSequenceParameter = rlrSequence.HasValue ?
                new ObjectParameter("rlrSequence", rlrSequence) :
                new ObjectParameter("rlrSequence", typeof(short));
    
            var rlrLegalRecordValueParameter = rlrLegalRecordValue.HasValue ?
                new ObjectParameter("rlrLegalRecordValue", rlrLegalRecordValue) :
                new ObjectParameter("rlrLegalRecordValue", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcRegistrarCHP", rlrSourceIDParameter, rlrRFBCodeParameter, rlrLegalRecordTypeParameter, rlrSequenceParameter, rlrLegalRecordValueParameter);
        }
    
        public virtual int prcSpcRegistrarDeclaracionAnalisisPrecios(Nullable<int> codigoLicitacion, Nullable<bool> realizaDeclaracion)
        {
            var codigoLicitacionParameter = codigoLicitacion.HasValue ?
                new ObjectParameter("CodigoLicitacion", codigoLicitacion) :
                new ObjectParameter("CodigoLicitacion", typeof(int));
    
            var realizaDeclaracionParameter = realizaDeclaracion.HasValue ?
                new ObjectParameter("RealizaDeclaracion", realizaDeclaracion) :
                new ObjectParameter("RealizaDeclaracion", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcRegistrarDeclaracionAnalisisPrecios", codigoLicitacionParameter, realizaDeclaracionParameter);
        }
    
        public virtual int prcSpcRegistrarRequisito(Nullable<int> rlrSourceID, Nullable<int> rlrRFBCode, Nullable<int> rlrID, Nullable<int> rlrLegalRecordType, Nullable<int> rlrLegalRecordValue)
        {
            var rlrSourceIDParameter = rlrSourceID.HasValue ?
                new ObjectParameter("rlrSourceID", rlrSourceID) :
                new ObjectParameter("rlrSourceID", typeof(int));
    
            var rlrRFBCodeParameter = rlrRFBCode.HasValue ?
                new ObjectParameter("rlrRFBCode", rlrRFBCode) :
                new ObjectParameter("rlrRFBCode", typeof(int));
    
            var rlrIDParameter = rlrID.HasValue ?
                new ObjectParameter("rlrID", rlrID) :
                new ObjectParameter("rlrID", typeof(int));
    
            var rlrLegalRecordTypeParameter = rlrLegalRecordType.HasValue ?
                new ObjectParameter("rlrLegalRecordType", rlrLegalRecordType) :
                new ObjectParameter("rlrLegalRecordType", typeof(int));
    
            var rlrLegalRecordValueParameter = rlrLegalRecordValue.HasValue ?
                new ObjectParameter("rlrLegalRecordValue", rlrLegalRecordValue) :
                new ObjectParameter("rlrLegalRecordValue", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcRegistrarRequisito", rlrSourceIDParameter, rlrRFBCodeParameter, rlrIDParameter, rlrLegalRecordTypeParameter, rlrLegalRecordValueParameter);
        }
    
        public virtual int prcSpcRemoveDocsAgregados(Nullable<int> rlrID)
        {
            var rlrIDParameter = rlrID.HasValue ?
                new ObjectParameter("rlrID", rlrID) :
                new ObjectParameter("rlrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcRemoveDocsAgregados", rlrIDParameter);
        }
    
        public virtual ObjectResult<prcSpcReport_AcquisitionAwardByOrganization_Result> prcSpcReport_AcquisitionAwardByOrganization(string orgEnterprise, string orgCode, Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> intYear)
        {
            var orgEnterpriseParameter = orgEnterprise != null ?
                new ObjectParameter("orgEnterprise", orgEnterprise) :
                new ObjectParameter("orgEnterprise", typeof(string));
    
            var orgCodeParameter = orgCode != null ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(string));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var intYearParameter = intYear.HasValue ?
                new ObjectParameter("intYear", intYear) :
                new ObjectParameter("intYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReport_AcquisitionAwardByOrganization_Result>("prcSpcReport_AcquisitionAwardByOrganization", orgEnterpriseParameter, orgCodeParameter, pageNumberParameter, pageSizeParameter, intYearParameter);
        }
    
        public virtual ObjectResult<prcSpcReport_AcquisitionAwardDistinctTotalType_Result> prcSpcReport_AcquisitionAwardDistinctTotalType(string orgEnterprise, string orgCode, Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> intYear)
        {
            var orgEnterpriseParameter = orgEnterprise != null ?
                new ObjectParameter("orgEnterprise", orgEnterprise) :
                new ObjectParameter("orgEnterprise", typeof(string));
    
            var orgCodeParameter = orgCode != null ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(string));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var intYearParameter = intYear.HasValue ?
                new ObjectParameter("intYear", intYear) :
                new ObjectParameter("intYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReport_AcquisitionAwardDistinctTotalType_Result>("prcSpcReport_AcquisitionAwardDistinctTotalType", orgEnterpriseParameter, orgCodeParameter, pageNumberParameter, pageSizeParameter, intYearParameter);
        }
    
        public virtual ObjectResult<prcSpcReport_AcquisitionAwarded_Result> prcSpcReport_AcquisitionAwarded(string orgEnterprise, Nullable<int> intYear, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var orgEnterpriseParameter = orgEnterprise != null ?
                new ObjectParameter("orgEnterprise", orgEnterprise) :
                new ObjectParameter("orgEnterprise", typeof(string));
    
            var intYearParameter = intYear.HasValue ?
                new ObjectParameter("intYear", intYear) :
                new ObjectParameter("intYear", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReport_AcquisitionAwarded_Result>("prcSpcReport_AcquisitionAwarded", orgEnterpriseParameter, intYearParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcReport_PurchaseOrderAccept_Result> prcSpcReport_PurchaseOrderAccept(string orgEnterprise, string orgCode, Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> intYear)
        {
            var orgEnterpriseParameter = orgEnterprise != null ?
                new ObjectParameter("orgEnterprise", orgEnterprise) :
                new ObjectParameter("orgEnterprise", typeof(string));
    
            var orgCodeParameter = orgCode != null ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(string));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var intYearParameter = intYear.HasValue ?
                new ObjectParameter("intYear", intYear) :
                new ObjectParameter("intYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReport_PurchaseOrderAccept_Result>("prcSpcReport_PurchaseOrderAccept", orgEnterpriseParameter, orgCodeParameter, pageNumberParameter, pageSizeParameter, intYearParameter);
        }
    
        public virtual ObjectResult<prcSpcReport_PurchaseOrderAcceptExcepcional_Result> prcSpcReport_PurchaseOrderAcceptExcepcional(string orgEnterprise, string orgCode, Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> intYear)
        {
            var orgEnterpriseParameter = orgEnterprise != null ?
                new ObjectParameter("orgEnterprise", orgEnterprise) :
                new ObjectParameter("orgEnterprise", typeof(string));
    
            var orgCodeParameter = orgCode != null ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(string));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var intYearParameter = intYear.HasValue ?
                new ObjectParameter("intYear", intYear) :
                new ObjectParameter("intYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReport_PurchaseOrderAcceptExcepcional_Result>("prcSpcReport_PurchaseOrderAcceptExcepcional", orgEnterpriseParameter, orgCodeParameter, pageNumberParameter, pageSizeParameter, intYearParameter);
        }
    
        public virtual ObjectResult<prcSpcReport_PurchaseOrderCountByOrganization_Result> prcSpcReport_PurchaseOrderCountByOrganization(string orgEnterprise, Nullable<int> intYear, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var orgEnterpriseParameter = orgEnterprise != null ?
                new ObjectParameter("orgEnterprise", orgEnterprise) :
                new ObjectParameter("orgEnterprise", typeof(string));
    
            var intYearParameter = intYear.HasValue ?
                new ObjectParameter("intYear", intYear) :
                new ObjectParameter("intYear", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReport_PurchaseOrderCountByOrganization_Result>("prcSpcReport_PurchaseOrderCountByOrganization", orgEnterpriseParameter, intYearParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcReport_Supplier_Result> prcSpcReport_Supplier(string orgEnterprise, Nullable<int> intYear, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var orgEnterpriseParameter = orgEnterprise != null ?
                new ObjectParameter("orgEnterprise", orgEnterprise) :
                new ObjectParameter("orgEnterprise", typeof(string));
    
            var intYearParameter = intYear.HasValue ?
                new ObjectParameter("intYear", intYear) :
                new ObjectParameter("intYear", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReport_Supplier_Result>("prcSpcReport_Supplier", orgEnterpriseParameter, intYearParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<prcSpcReport_SupplierAcquisition_Result> prcSpcReport_SupplierAcquisition(string orgEnterprise, string orgCode, string bidOrganization, Nullable<int> intYear)
        {
            var orgEnterpriseParameter = orgEnterprise != null ?
                new ObjectParameter("orgEnterprise", orgEnterprise) :
                new ObjectParameter("orgEnterprise", typeof(string));
    
            var orgCodeParameter = orgCode != null ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(string));
    
            var bidOrganizationParameter = bidOrganization != null ?
                new ObjectParameter("bidOrganization", bidOrganization) :
                new ObjectParameter("bidOrganization", typeof(string));
    
            var intYearParameter = intYear.HasValue ?
                new ObjectParameter("intYear", intYear) :
                new ObjectParameter("intYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReport_SupplierAcquisition_Result>("prcSpcReport_SupplierAcquisition", orgEnterpriseParameter, orgCodeParameter, bidOrganizationParameter, intYearParameter);
        }
    
        public virtual ObjectResult<prcSpcReport_SupplierAcquisitionAward_Result> prcSpcReport_SupplierAcquisitionAward(string orgEnterprise, string orgCode, string bidOrganization, Nullable<int> intYear)
        {
            var orgEnterpriseParameter = orgEnterprise != null ?
                new ObjectParameter("orgEnterprise", orgEnterprise) :
                new ObjectParameter("orgEnterprise", typeof(string));
    
            var orgCodeParameter = orgCode != null ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(string));
    
            var bidOrganizationParameter = bidOrganization != null ?
                new ObjectParameter("bidOrganization", bidOrganization) :
                new ObjectParameter("bidOrganization", typeof(string));
    
            var intYearParameter = intYear.HasValue ?
                new ObjectParameter("intYear", intYear) :
                new ObjectParameter("intYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReport_SupplierAcquisitionAward_Result>("prcSpcReport_SupplierAcquisitionAward", orgEnterpriseParameter, orgCodeParameter, bidOrganizationParameter, intYearParameter);
        }
    
        public virtual ObjectResult<prcSpcReport_SupplierAward_Result> prcSpcReport_SupplierAward(string orgEnterprise, string orgCode, Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> intYear)
        {
            var orgEnterpriseParameter = orgEnterprise != null ?
                new ObjectParameter("orgEnterprise", orgEnterprise) :
                new ObjectParameter("orgEnterprise", typeof(string));
    
            var orgCodeParameter = orgCode != null ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(string));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var intYearParameter = intYear.HasValue ?
                new ObjectParameter("intYear", intYear) :
                new ObjectParameter("intYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReport_SupplierAward_Result>("prcSpcReport_SupplierAward", orgEnterpriseParameter, orgCodeParameter, pageNumberParameter, pageSizeParameter, intYearParameter);
        }
    
        public virtual ObjectResult<prcSpcReport_SupplierAwardParticipate_Result> prcSpcReport_SupplierAwardParticipate(string orgEnterprise, string orgCode, Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> intYear)
        {
            var orgEnterpriseParameter = orgEnterprise != null ?
                new ObjectParameter("orgEnterprise", orgEnterprise) :
                new ObjectParameter("orgEnterprise", typeof(string));
    
            var orgCodeParameter = orgCode != null ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(string));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var intYearParameter = intYear.HasValue ?
                new ObjectParameter("intYear", intYear) :
                new ObjectParameter("intYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcReport_SupplierAwardParticipate_Result>("prcSpcReport_SupplierAwardParticipate", orgEnterpriseParameter, orgCodeParameter, pageNumberParameter, pageSizeParameter, intYearParameter);
        }
    
        public virtual int prcSpcRFIAddAnswer(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> codeId, Nullable<int> questionId, string answer, string user, string ownerOrganization, Nullable<int> typeUser)
        {
            var codeIdParameter = codeId.HasValue ?
                new ObjectParameter("CodeId", codeId) :
                new ObjectParameter("CodeId", typeof(int));
    
            var questionIdParameter = questionId.HasValue ?
                new ObjectParameter("QuestionId", questionId) :
                new ObjectParameter("QuestionId", typeof(int));
    
            var answerParameter = answer != null ?
                new ObjectParameter("Answer", answer) :
                new ObjectParameter("Answer", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var ownerOrganizationParameter = ownerOrganization != null ?
                new ObjectParameter("OwnerOrganization", ownerOrganization) :
                new ObjectParameter("OwnerOrganization", typeof(string));
    
            var typeUserParameter = typeUser.HasValue ?
                new ObjectParameter("TypeUser", typeUser) :
                new ObjectParameter("TypeUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcRFIAddAnswer", resultCode, resultMessage, codeIdParameter, questionIdParameter, answerParameter, userParameter, ownerOrganizationParameter, typeUserParameter);
        }
    
        public virtual int prcSpcRFIAddHistory(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> codeId, string ownerOrganization, string user, string comment)
        {
            var codeIdParameter = codeId.HasValue ?
                new ObjectParameter("CodeId", codeId) :
                new ObjectParameter("CodeId", typeof(int));
    
            var ownerOrganizationParameter = ownerOrganization != null ?
                new ObjectParameter("OwnerOrganization", ownerOrganization) :
                new ObjectParameter("OwnerOrganization", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcRFIAddHistory", resultCode, resultMessage, codeIdParameter, ownerOrganizationParameter, userParameter, commentParameter);
        }
    
        public virtual int prcSpcRFIAddQuestion(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> codeId, string question, string user, Nullable<int> typeUser)
        {
            var codeIdParameter = codeId.HasValue ?
                new ObjectParameter("CodeId", codeId) :
                new ObjectParameter("CodeId", typeof(int));
    
            var questionParameter = question != null ?
                new ObjectParameter("Question", question) :
                new ObjectParameter("Question", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var typeUserParameter = typeUser.HasValue ?
                new ObjectParameter("TypeUser", typeUser) :
                new ObjectParameter("TypeUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcRFIAddQuestion", resultCode, resultMessage, codeIdParameter, questionParameter, userParameter, typeUserParameter);
        }
    
        public virtual int prcSpcRFIAddQuestionHistory(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> questionId, Nullable<int> codeId, string action, string user, string ownerOrganization, string comment)
        {
            var questionIdParameter = questionId.HasValue ?
                new ObjectParameter("QuestionId", questionId) :
                new ObjectParameter("QuestionId", typeof(int));
    
            var codeIdParameter = codeId.HasValue ?
                new ObjectParameter("CodeId", codeId) :
                new ObjectParameter("CodeId", typeof(int));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var ownerOrganizationParameter = ownerOrganization != null ?
                new ObjectParameter("OwnerOrganization", ownerOrganization) :
                new ObjectParameter("OwnerOrganization", typeof(string));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcRFIAddQuestionHistory", resultCode, resultMessage, questionIdParameter, codeIdParameter, actionParameter, userParameter, ownerOrganizationParameter, commentParameter);
        }
    
        public virtual int prcSpcRFIAttachment(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> documentType, Nullable<int> documentNumber)
        {
            var documentTypeParameter = documentType.HasValue ?
                new ObjectParameter("DocumentType", documentType) :
                new ObjectParameter("DocumentType", typeof(int));
    
            var documentNumberParameter = documentNumber.HasValue ?
                new ObjectParameter("DocumentNumber", documentNumber) :
                new ObjectParameter("DocumentNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcRFIAttachment", resultCode, resultMessage, documentTypeParameter, documentNumberParameter);
        }
    
        public virtual int prcSpcRFIDelete(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> codeId)
        {
            var codeIdParameter = codeId.HasValue ?
                new ObjectParameter("CodeId", codeId) :
                new ObjectParameter("CodeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcRFIDelete", resultCode, resultMessage, codeIdParameter);
        }
    
        public virtual int prcSpcRFIDeleteCategory(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> codeId, Nullable<int> categoryCode)
        {
            var codeIdParameter = codeId.HasValue ?
                new ObjectParameter("CodeId", codeId) :
                new ObjectParameter("CodeId", typeof(int));
    
            var categoryCodeParameter = categoryCode.HasValue ?
                new ObjectParameter("CategoryCode", categoryCode) :
                new ObjectParameter("CategoryCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcRFIDeleteCategory", resultCode, resultMessage, codeIdParameter, categoryCodeParameter);
        }
    
        public virtual int prcSpcRFIEliminarProveedor(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> codeId, Nullable<int> idProveedor)
        {
            var codeIdParameter = codeId.HasValue ?
                new ObjectParameter("CodeId", codeId) :
                new ObjectParameter("CodeId", typeof(int));
    
            var idProveedorParameter = idProveedor.HasValue ?
                new ObjectParameter("idProveedor", idProveedor) :
                new ObjectParameter("idProveedor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcRFIEliminarProveedor", resultCode, resultMessage, codeIdParameter, idProveedorParameter);
        }
    
        public virtual ObjectResult<prcSpcRFIGet_Result> prcSpcRFIGet(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> codeId)
        {
            var codeIdParameter = codeId.HasValue ?
                new ObjectParameter("CodeId", codeId) :
                new ObjectParameter("CodeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcRFIGet_Result>("prcSpcRFIGet", resultCode, resultMessage, codeIdParameter);
        }
    
        public virtual ObjectResult<prcSpcRFIGetAnswer_Result> prcSpcRFIGetAnswer(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> codeId, Nullable<int> questionID)
        {
            var codeIdParameter = codeId.HasValue ?
                new ObjectParameter("CodeId", codeId) :
                new ObjectParameter("CodeId", typeof(int));
    
            var questionIDParameter = questionID.HasValue ?
                new ObjectParameter("QuestionID", questionID) :
                new ObjectParameter("QuestionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcRFIGetAnswer_Result>("prcSpcRFIGetAnswer", resultCode, resultMessage, codeIdParameter, questionIDParameter);
        }
    
        public virtual ObjectResult<prcSpcRFIGetCategory_Result> prcSpcRFIGetCategory(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> codeId)
        {
            var codeIdParameter = codeId.HasValue ?
                new ObjectParameter("CodeId", codeId) :
                new ObjectParameter("CodeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcRFIGetCategory_Result>("prcSpcRFIGetCategory", resultCode, resultMessage, codeIdParameter);
        }
    
        public virtual int prcSpcRFIGetExternalCode(string orgCode, Nullable<int> processType, ObjectParameter externalCode)
        {
            var orgCodeParameter = orgCode != null ?
                new ObjectParameter("orgCode", orgCode) :
                new ObjectParameter("orgCode", typeof(string));
    
            var processTypeParameter = processType.HasValue ?
                new ObjectParameter("ProcessType", processType) :
                new ObjectParameter("ProcessType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcRFIGetExternalCode", orgCodeParameter, processTypeParameter, externalCode);
        }
    
        public virtual ObjectResult<prcSpcRFIGetHistory_Result> prcSpcRFIGetHistory(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> codeId)
        {
            var codeIdParameter = codeId.HasValue ?
                new ObjectParameter("CodeId", codeId) :
                new ObjectParameter("CodeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcRFIGetHistory_Result>("prcSpcRFIGetHistory", resultCode, resultMessage, codeIdParameter);
        }
    
        public virtual ObjectResult<prcSpcRFIGetQuestion_Result> prcSpcRFIGetQuestion(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> codeId)
        {
            var codeIdParameter = codeId.HasValue ?
                new ObjectParameter("CodeId", codeId) :
                new ObjectParameter("CodeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcRFIGetQuestion_Result>("prcSpcRFIGetQuestion", resultCode, resultMessage, codeIdParameter);
        }
    
        public virtual ObjectResult<prcSpcRFIGetQuestionAnswer_Result> prcSpcRFIGetQuestionAnswer(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> codeId)
        {
            var codeIdParameter = codeId.HasValue ?
                new ObjectParameter("CodeId", codeId) :
                new ObjectParameter("CodeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcRFIGetQuestionAnswer_Result>("prcSpcRFIGetQuestionAnswer", resultCode, resultMessage, codeIdParameter);
        }
    
        public virtual ObjectResult<prcSpcRFIGetQuestionHeader_Result> prcSpcRFIGetQuestionHeader(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> codeId)
        {
            var codeIdParameter = codeId.HasValue ?
                new ObjectParameter("CodeId", codeId) :
                new ObjectParameter("CodeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcRFIGetQuestionHeader_Result>("prcSpcRFIGetQuestionHeader", resultCode, resultMessage, codeIdParameter);
        }
    
        public virtual ObjectResult<prcSpcRFIGetQuestionHistory_Result> prcSpcRFIGetQuestionHistory(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> codeId, Nullable<int> questionId)
        {
            var codeIdParameter = codeId.HasValue ?
                new ObjectParameter("CodeId", codeId) :
                new ObjectParameter("CodeId", typeof(int));
    
            var questionIdParameter = questionId.HasValue ?
                new ObjectParameter("QuestionId", questionId) :
                new ObjectParameter("QuestionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcRFIGetQuestionHistory_Result>("prcSpcRFIGetQuestionHistory", resultCode, resultMessage, codeIdParameter, questionIdParameter);
        }
    
        public virtual ObjectResult<prcSpcRFIGetStatus_Result> prcSpcRFIGetStatus(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> typeOrganization)
        {
            var typeOrganizationParameter = typeOrganization.HasValue ?
                new ObjectParameter("typeOrganization", typeOrganization) :
                new ObjectParameter("typeOrganization", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcRFIGetStatus_Result>("prcSpcRFIGetStatus", resultCode, resultMessage, typeOrganizationParameter);
        }
    
        public virtual int prcSpcRFIGuardaProveedor(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> codeId, Nullable<int> proveedorId)
        {
            var codeIdParameter = codeId.HasValue ?
                new ObjectParameter("CodeId", codeId) :
                new ObjectParameter("CodeId", typeof(int));
    
            var proveedorIdParameter = proveedorId.HasValue ?
                new ObjectParameter("ProveedorId", proveedorId) :
                new ObjectParameter("ProveedorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcRFIGuardaProveedor", resultCode, resultMessage, codeIdParameter, proveedorIdParameter);
        }
    
        public virtual ObjectResult<prcSpcRFIObtenerProveedores_Result> prcSpcRFIObtenerProveedores(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> codeId)
        {
            var codeIdParameter = codeId.HasValue ?
                new ObjectParameter("CodeId", codeId) :
                new ObjectParameter("CodeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcRFIObtenerProveedores_Result>("prcSpcRFIObtenerProveedores", resultCode, resultMessage, codeIdParameter);
        }
    
        public virtual int prcSpcRFIOwnerAttachment(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> documentType, Nullable<int> documentNumber, string ownerDocument)
        {
            var documentTypeParameter = documentType.HasValue ?
                new ObjectParameter("DocumentType", documentType) :
                new ObjectParameter("DocumentType", typeof(int));
    
            var documentNumberParameter = documentNumber.HasValue ?
                new ObjectParameter("DocumentNumber", documentNumber) :
                new ObjectParameter("DocumentNumber", typeof(int));
    
            var ownerDocumentParameter = ownerDocument != null ?
                new ObjectParameter("OwnerDocument", ownerDocument) :
                new ObjectParameter("OwnerDocument", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcRFIOwnerAttachment", resultCode, resultMessage, documentTypeParameter, documentNumberParameter, ownerDocumentParameter);
        }
    
        public virtual int prcSpcRFISave(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> codeId, string externalId, string ownerOrganization, string name, string description, string comment, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string contactName, string phone, string email, string other, Nullable<System.DateTime> publicationDate, string state)
        {
            var codeIdParameter = codeId.HasValue ?
                new ObjectParameter("CodeId", codeId) :
                new ObjectParameter("CodeId", typeof(int));
    
            var externalIdParameter = externalId != null ?
                new ObjectParameter("ExternalId", externalId) :
                new ObjectParameter("ExternalId", typeof(string));
    
            var ownerOrganizationParameter = ownerOrganization != null ?
                new ObjectParameter("OwnerOrganization", ownerOrganization) :
                new ObjectParameter("OwnerOrganization", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var contactNameParameter = contactName != null ?
                new ObjectParameter("ContactName", contactName) :
                new ObjectParameter("ContactName", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var otherParameter = other != null ?
                new ObjectParameter("Other", other) :
                new ObjectParameter("Other", typeof(string));
    
            var publicationDateParameter = publicationDate.HasValue ?
                new ObjectParameter("PublicationDate", publicationDate) :
                new ObjectParameter("PublicationDate", typeof(System.DateTime));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcRFISave", resultCode, resultMessage, codeIdParameter, externalIdParameter, ownerOrganizationParameter, nameParameter, descriptionParameter, commentParameter, dateFromParameter, dateToParameter, contactNameParameter, phoneParameter, emailParameter, otherParameter, publicationDateParameter, stateParameter);
        }
    
        public virtual int prcSpcRFISaveCategory(ObjectParameter resultCode, ObjectParameter resultMessage, Nullable<int> codeId, Nullable<int> categoryId)
        {
            var codeIdParameter = codeId.HasValue ?
                new ObjectParameter("CodeId", codeId) :
                new ObjectParameter("CodeId", typeof(int));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcSpcRFISaveCategory", resultCode, resultMessage, codeIdParameter, categoryIdParameter);
        }
    
        public virtual ObjectResult<prcSpcRFISearchByNumber_Result> prcSpcRFISearchByNumber(string externalCode, Nullable<int> typeOrganization, string organizationCode, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var externalCodeParameter = externalCode != null ?
                new ObjectParameter("ExternalCode", externalCode) :
                new ObjectParameter("ExternalCode", typeof(string));
    
            var typeOrganizationParameter = typeOrganization.HasValue ?
                new ObjectParameter("typeOrganization", typeOrganization) :
                new ObjectParameter("typeOrganization", typeof(int));
    
            var organizationCodeParameter = organizationCode != null ?
                new ObjectParameter("OrganizationCode", organizationCode) :
                new ObjectParameter("OrganizationCode", typeof(string));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSpcRFISearchByNumber_Result>("prcSpcRFISearchByNumber", externalCodeParameter, typeOrganizationParameter, organizationCodeParameter, pageNumberParameter, pageSizeParameter);
        }
    }
}
